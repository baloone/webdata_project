{"id":"250774217_Least_and_greatest_xed_points_in_linear_logic_Extended_Version","abstract":"The rst-order theory of MALL (multiplicative, additive linear logic) over only equalities is an interesting but weak logic since it cannot capture un- bounded (innite) behavior. Instead of accounting for unbounded behavior via the addition of the exponentials (! and ?), we add least and greatest x ed point operators. The resulting logic, which we call MALL=, satises two fundamental proof theoretic properties. In particular, MALL= satises cut-elimination, which implies consistency, and has a complete focused proof system. This second result about focused proofs provides a strong normal form for cut-free proof structures that can be used, for example, to help automate proof search. We then consider applying these two results about MALL= to derive a focused proof system for an intuitionistic logic extended with induction and co-induction. The traditional approach to encoding intuitionistic logic into linear logic relies heavily on us- ing the exponentials, which unfortunately weaken the focusing discipline. We get a better focused proof system by observing that certain x ed points satisfy the structural rules of weakening and contraction (without using exponentials). The resulting focused proof system for intuitionistic logic is closely related to the one implemented in Bedwyr, a recent model checker based on logic programming. We discuss how our proof theory might be used to build a computational system that can partially automate induction and co-induction.","authors":["David Baelde","Dale Miller"],"meta":["July 2008"],"references":["246839477_Mixing_Finite_Success_and_Finite_Failure_in_an_Automated_Prover","220896449_On_the_Specification_of_Sequent_Systems","243615654_A_fixpoint_theorem_in_linear_logic","243301753_Model_Checking_for_p-Calculus_Using_Proof_Search","238719836_The_Collected_Papers_of_Gerard_Gentzen","225611027_Induction_and_Co-induction_in_Sequent_Calculus","223407871_Forum_A_multiple-conclusion_specification_logic","222560143_Soft_linear_logic_and_polynomial_time","222480860_Uniform_Proofs_as_a_Foundation_for_Logic_Programming","222181428_Cut-elimination_for_a_logic_with_definitions_and_induction"]}