{"id":"279554751_Hyperproperties","abstract":"Trace properties, which have long been used for reasoning about systems, are sets of execution traces. Hyperproperties, introduced here, are sets of trace properties. Hyperproperties can express security policies, such as secure information flow and service level agreements, that trace properties cannot. Safety and liveness are generalized o hyperproperties, and every hyperproperty is shown to be the intersection of a safety hyperproperty and a liveness hyperproperty. A verification technique for safety hyperproperties is given and is shown to generalize prior techniques for verifying secure information flow. Refinement is shown to be applicable with safety hyperproperties. A topological characterization of hyperproperties is given.","authors":["Michael R. Clarkson","Fred B. Schneider"],"meta":["September 2010Journal of Computer Security 18(6):1157-1210","DOI:10.3233/JCS-2009-0393"],"references":["222455259_On_Correct_Refinement_of_Programs","221335471_A_Theorem_Proving_Approach_to_Analysis_of_Secure_Information_Flow","3187764_A_general_theory_of_composition_for_a_class_of_possibilistic_properties","2862008_Refinement_Operators_and_Information_Flow_Security","278646453_APSS","262394960_Sometime_is_sometimes_not_never_on_the_temporal_logic_of_programs","242962083_Kontinua_zweiter_Ordnung","225828317_A_constructive_approach_to_the_problem_of_program_correctness","224636534_Information-Flow_Security_for_Interactive_Programs","220713927_Probabilistic_Interference","220404525_Information_Flow_Inference_for_ML","3508426_Toward_a_mathematical_foundation_for_information_flow_security"]}