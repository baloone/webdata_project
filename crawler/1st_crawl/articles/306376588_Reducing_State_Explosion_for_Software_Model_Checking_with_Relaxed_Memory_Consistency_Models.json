{"id":"306376588_Reducing_State_Explosion_for_Software_Model_Checking_with_Relaxed_Memory_Consistency_Models","abstract":"Software model checking suffers from the so-called state explosion problem, and relaxed memory consistency models even worsen this situation. What is worse, parameterizing model checking by memory consistency models, that is, to make the model checker as flexible as we can supply definitions of memory consistency models as an input, intensifies state explosion. This paper explores specific reasons for state explosion in model checking with multiple memory consistency models, provides some optimizations intended to mitigate the problem, and applies them to McSPIN, a model checker for memory consistency models that we are developing. The effects of the optimizations and the usefulness of McSPIN are demonstrated experimentally by verifying copying protocols of concurrent copying garbage collection algorithms. To the best of our knowledge, this is the first model checking of the concurrent copying protocols under relaxed memory consistency models.","authors":["Tatsuya Abe","Tomoharu Ugawa","Toshiyuki Maeda","Kousuke Matsumoto"],"meta":["August 2016"],"references":["305450008_A_general_model_checking_framework_for_various_memory_consistency_models","282485043_Relaxing_Safely_Verified_On-the-Fly_Garbage_Collection_for_x86-TSO","256858854_Predicate_Abstraction_for_Relaxed_Memory_Models","221402880_PRISM_40_Verification_of_Probabilistic_Real-time_Systems","221105789_A_Verification-Based_Approach_to_Memory_Fence_Insertion_in_Relaxed_Memory_Systems","221105608_An_Automata-Based_Symbolic_Approach_for_Verifying_Programs_on_Relaxed_Memory_Models","220997638_Portable_Unobtrusive_Garbage_Collection_for_Multiprocessor_Systems","3188228_An_Automated_Verification_Method_for_Distributed_Systems_Software_Based_on_Model_Extraction","2765406_Portable_Unobtrusive_Garbage_Collection_for_Multiprocessor_Systems","313736312_Concurrent_Program_Logic_for_Relaxed_Memory_Consistency_Models_with_Dependencies_across_Loop_Iterations","308960208_Observation-Based_Concurrent_Program_Logic_for_Relaxed_Memory_Consistency_Models","299681397_SPIN_as_a_Linearizability_Checker_under_Weak_Memory_Models","289053099_A_General_Model_Checking_Framework_for_Various_Memory_Consistency_Models","262233891_Relaxed_Separation_Logic_A_Program_Logic_for_C11_Concurrency","261235249_Model_Checking_Stencil_Computations_Written_in_a_Partitioned_Global_Address_Space_Language","255204526_A_Verification-Based_Approach_to_Memory_Fence_Insertion_in_PSO_Memory_Systems","239538939_The_spin_model_checker","239480642_Construction_of_abstract_state_graphs_of_infinite_systems_with_PVS","225229451_A_Rely-Guarantee_Proof_System_for_x86-TSO","221602502_Parameterized_Memory_Models_and_Concurrent_Separation_Logic","221032935_Stopless_a_real-time_garbage_collector_for_multiprocessors","220997851_The_Java_memory_model","220752316_A_study_of_concurrent_real-time_garbage_collectors","220752035_Foundations_of_the_C_concurrency_memory_model","220751943_Understanding_POWER_multiprocessors","220244860_State-space_exploration_for_concurrent_algorithms_under_weak_memory_orderings_preliminary_version","2954672_Shared_Memory_Consistency_Models_A_Tutorial"]}