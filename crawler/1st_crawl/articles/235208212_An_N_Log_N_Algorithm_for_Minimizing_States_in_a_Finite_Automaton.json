{"id":"235208212_An_N_Log_N_Algorithm_for_Minimizing_States_in_a_Finite_Automaton","abstract":"Most basic texts on finite automata give algorithms for minimizing the number of states in a finite automaton. However, a worst case analysis of these algorithms indicates that they are n2 processes, where n is the number of states. For finite automata with large numbers of states, these algorithms are grossly inefficient. This chapter describes an algorithm for minimizing the states, in which the asymptotic running time in a worst-case analysis grows as n log n. The constant of proportionality depends linearly on the number of input symbols. The same algorithm can be used to determine if two finite automata are equivalent. Extensive use of list processing is employed to reduce the computation time. As the time needed to partition on a block is proportional to the transitions into the block, the total number of steps in the algorithm is bounded by n log n.","authors":["John Hopcroft"],"meta":["January 1971","DOI:10.1016/B978-0-12-417750-5.50022-1"],"references":[]}