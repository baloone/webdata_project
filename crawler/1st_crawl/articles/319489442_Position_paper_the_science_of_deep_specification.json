{"id":"319489442_Position_paper_the_science_of_deep_specification","abstract":"We introduce our efforts within the project ‘The science of deep specification’ to work out the key formal underpinnings of industrial-scale formal specifications of software and hardware components, anticipating a world where large verified systems are routinely built out of smaller verified components that are also used by many other projects. We identify an important class of specification that has already been used in a few experiments that connect strong component-correctness theorems across the work of different teams. To help popularize the unique advantages of that style, we dub it deep specification , and we say that it encompasses specifications that are rich , two-sided , formal and live (terms that we define in the article). Our core team is developing a proof-of-concept system (based on the Coq proof assistant) whose specification and verification work is divided across largely decoupled subteams at our four institutions, encompassing hardware microarchitecture, compilers, operating systems and applications, along with cross-cutting principles and tools for effective specification. We also aim to catalyse interest in the approach, not just by basic researchers but also by users in industry.\nThis article is part of the themed issue ‘Verified trustworthy software systems’.","authors":["Andrew W. Appel","Lennart Beringer","Adam Chlipala","Benjamin C. Pierce"],"meta":["October 2017Philosophical Transactions of The Royal Society A Mathematical Physical and Engineering Sciences 375(2104):20160331","DOI:10.1098/rsta.2016.0331"],"references":["322033121_Toward_Compositional_Verification_of_Interruptible_OS_Kernels_and_Device_Drivers","319489361_The_HACMS_program_Using_formal_methods_to_eliminate_exploitable_bugs","318369751_SMTCoq_A_Plug-In_for_Integrating_SMT_Solvers_into_Coq","312063776_A_Verified_Information-Flow_Architecture","310821248_The_missing_link_explaining_ELF_static_linking_semantically","284575562_The_Matter_of_Heartbleed","282484874_Verdi_A_Framework_for_Implementing_and_Formally_Verifying_Distributed_Systems","276464932_Deep_Specifications_and_Certified_Abstraction_Layers","262334456_Smart_Testing_of_Functional_Programs_in_Isabelle","262331404_Establishing_browser_security_guarantees_through_formal_shim_verification","262244006_A_Verified_Information-Flow_Architecture","262208935_A_Trusted_Mechanised_JavaScript_Specification","235654538_Studying_the_ML_module_system_in_HOL","228525235_DoubleCheck_your_theorems","347559913_The_end_of_history_Using_a_proof_assistant_to_replace_language_design_with_library_design","329654166_The_Definition_of_Standard_ML","319488974_Provably_trustworthy_systems","319364480_Kami_a_platform_for_high-level_parametric_hardware_specification_and_its_modular_verification","317919405_How_They_Did_It_An_Analysis_of_Emission_Defeat_Devices_in_Modern_Automobiles","311489076_CoGENT_Verifying_High-Assurance_File_System_Implementations","307907268_Finding_and_understanding_bugs_in_C_compilers","305790872_End-to-end_verification_of_information-flow_security_for_C_and_assembly_programs","303909477_CoGENT_Verifying_High-Assurance_File_System_Implementations","303773820_End-to-end_verification_of_information-flow_security_for_C_and_assembly_programs","303773724_Toward_compositional_verification_of_interruptible_OS_kernels_and_device_drivers","301375726_Using_Crash_Hoare_logic_for_certifying_the_FSCQ_file_system","297665575_From_Network_Interface_to_Multithreaded_Web_Applications","286245706_AADL_and_model-based_engineering","283105928_Compositional_CompCert","282864823_On_Theorem-proving_based_Testing","277573837_How_Amazon_Web_Services_Uses_Formal_Methods","276464667_From_Network_Interface_to_Multithreaded_Web_Applications_A_Case_Study_in_Modular_Program_Verification","276136611_Verification_of_a_Cryptographic_Primitive_SHA-256","271910019_Concrete_Semantics_with_IsabelleHOL","269199773_QuickCheck","267672965_Program_logics_for_certified_compilers","267420976_Property_Directed_Generation_of_First-Order_Test_Data","266913111_The_Foundational_Cryptography_Framework","262403797_CakeML_A_verified_implementation_of_ML","262332941_Formal_verification_of_SSA-based_optimizations_for_LLVM","262285043_Machine-Verified_Network_Controllers","262210285_Characterizing_Progress_Properties_of_Concurrent_Objects_via_Contextual_Refinements","262153499_The_New_Quickcheck_for_Isabelle_Random_Exhaustive_and_Symbolic_Testing_under_One_Roof","258333808_Translation_Validation_for_a_Verified_OS_Kernel","256437037_The_Definition_of_Standard_ML","247935879_On_Theorem_Prover-based_Testing","247827335_The_Definition_of_Standard_ML_Revised_1996","236609202_Mechanized_Verification_of_Computing_Dominators_for_Formalizing_Compilers","236591668_Theory_of_Multi_Core_Hypervisor_Verification","234803470_Featherweight_Firefox_Formalizing_the_Core_of_a_Web_Browser","227007899_System_verification","225514435_HOL-ML","224001303_The_Z_Notation_a_Reference_Manual","222398178_Abstraction_for_Concurrent_Objects","222303991_The_definition_of_Extended_ML_A_gentle_introduction"]}