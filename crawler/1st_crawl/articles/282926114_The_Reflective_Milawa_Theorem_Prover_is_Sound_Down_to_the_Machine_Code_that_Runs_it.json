{"id":"282926114_The_Reflective_Milawa_Theorem_Prover_is_Sound_Down_to_the_Machine_Code_that_Runs_it","abstract":"This paper presents, we believe, the most comprehensive evidence of a theorem prover’s soundness to date. Our subject is the Milawa theorem prover. We present evidence of its soundness down to the machine code. Milawa is a theorem prover styled after NQTHM and ACL2. It is based on an idealised version of ACL2’s computational logic and provides the user with high-level tactics similar to ACL2’s. In contrast to NQTHM and ACL2, Milawa has a small kernel that is somewhat like an LCF-style system. We explain how the Milawa theorem prover is constructed as a sequence of reflective extensions from its kernel. The kernel establishes the soundness of these extensions during Milawa’s bootstrapping process. Going deeper, we explain how we have shown that the Milawa kernel is sound using the HOL4 theorem prover. In HOL4, we have formalized its logic, proved the logic sound, and proved that the source code for the Milawa kernel (1,700 lines of Lisp) faithfully implements this logic. Going even further, we have combined these results with the x86 machine-code level verification of the Lisp runtime Jitawa. Our top-level theorem states that Milawa can never claim to prove anything that is false when it is run on this Lisp runtime.","authors":["Jared Davis","Magnus O. Myreen"],"meta":["August 2015Journal of Automated Reasoning 55(2):117-183","DOI:10.1007/s10817-015-9324-6"],"references":["277679423_CakeML","267145868_HOL_with_Definitions_Semantics_Soundness_and_a_Verified_Implementation","234785386_Fuzzing_and_delta-debugging_SMT_solvers","226021666_Formalization_and_Implementation_of_Modern_SAT_Solvers","221302561_A_Brief_Overview_of_HOL4","221104902_Linear_and_Nonlinear_Arithmetic_in_ACL2","220944657_Automated_testing_and_debugging_of_SAT_and_QBF_solvers","220818741_Reconstruction_of_Z3's_Bit-Vector_Proofs_in_HOL4_and_IsabelleHOL","7575140_The_challenge_of_computer_mathematics","321876490_Edinburgh_LCF_A_Mechanised_Logic_of_Computation","319394608_A_comparison_of_PVS_and_IsabelleHOL","269023680_Metamathematics_Machines_and_Godel's_Proof","267091089_DRAT-trim_Efficient_Checking_and_Trimming_Using_Expressive_Clausal_Proofs","266504972_Functional_Programs_Conversions_between_Deep_and_Shallow_Embeddings","266162358_Formal_verification_of_machine-code_programs","262403797_CakeML_A_verified_implementation_of_ML","262399625_Steps_towards_Verified_Implementations_of_HOL_Light","257563481_Unified_QBF_certification_and_its_applications","257282396_Interactive_theorem_proving_and_program_development_Coq'Art_The_Calculus_of_inductive_constructions","246571097_J_MOORE_Computer-Aided_Reasoning_An_Approach","243786603_Interactive_Theorem_Proving_and_Program_Development_-_Coq''Art_The_Calculus_of_Inductive_Constructions_Texts_in_Theoretical_Computer_Science_An_EATCS_Series_Springer-Verlag","242351635_A_Computational_Logic_Handbook","241095515_Code_generation_from_IsabelleHOL_theories","238084649_LISP_implementations_on_ARM_x86_and_PowerPC","230625832_Computer-Aided_Reasoning_An_Approach","228549701_Implementing_a_parallelism_library_for_a_functional_subset_of_lisp","225180642_The_OpenTheory_Standard_Theory_Library","225152091_Verified_LISP_Implementations_on_ARM_x86_and_PowerPC","224674389_An_integration_of_HOL_and_ACL2","222306957_The_Boyer-Moore_theorem_prover_and_its_interactive_enhancement","221545718_An_embedding_of_the_ACL2_logic_in_HOL","221545714_Reasoning_about_ACL2_file_input","221545704_Function_memoization_and_unique_object_representation_for_ACL2_functions","221302673_Extensible_Proof-Producing_Compilation","221302556_Proof_Pearl_Wellfounded_Induction_on_the_Ordinals_Up_to","221302534_HOL_Light_An_Overview","221302512_Meta_reasoning_in_ACL2","221302354_A_Mechanically_Verified_Sound_and_Complete_Theorem_Prover_for_First_Order_Logic","221234891_A_Verified_Runtime_for_a_Verified_Theorem_Prover","220997694_Verified_Just-In-Time_Compiler_on_x86","220933321_Industrial-Strength_Certified_SAT_Solving_through_Verified_SAT_Proof_Checking","220806174_System_Description_IVY","220805736_Towards_Self-verification_of_HOL_Light","220532123_Rewriting_with_Equivalence_Relations_in_ACL2","220430161_Efficiently_checking_propositional_refutations_in_HOL_theorem_provers","220430113_Integrating_External_Deduction_Tools_with_ACL2","220154327_Formal_verification_of_a_modern_SAT_solver_by_shallow_embedding_into_IsabelleHOL","213886767_Hoare_CAR_An_axiomatic_basis_for_computer_programming_Commun_ACM_12_576-580","201469308_IsabelleHOL_---_A_Proof_Assistant_for_Higher-Order_Logic","37596938_Recursive_Functions_of_Symbolic_Expressions_and_Their_Computation_by_Machine","2817032_Design_Goals_for_ACL2","2737601_Recursive_Functions_of_Symbolic_Expressions_and_Their_Computation_by_Machine_Part_I","2639710_Metatheory_and_Reflection_in_Theorem_Proving_A_Survey_and_Critique","2486906_Structured_Theory_Development_for_a_Mechanized_Logic","2404409_Partial_functions_in_ACL2"]}