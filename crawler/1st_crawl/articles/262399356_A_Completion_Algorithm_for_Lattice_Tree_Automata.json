{"id":"262399356_A_Completion_Algorithm_for_Lattice_Tree_Automata","abstract":"When dealing with infinite-state systems, Regular Tree Model Checking approaches may have some difficulties to represent infinite sets of data. We propose Lattice Tree Automata, an extended version of tree automata to represent complex data domains and their related operations in an efficient manner. Moreover, we introduce a new completion-based algorithm for computing the possibly infinite set of reachable states in a finite amount of time. This algorithm is independent of the lattice making it possible to seamlessly plug abstract domains into a Regular Tree Model Checking algorithm. As a first instance, we implemented a completion with an interval abstract domain. We provide some experiments showing that this implementation permits to scale up regular tree model-checking of Java programs dealing with integer arithmetics.","authors":["Thomas Genet","Tristan Le Gall","Axel Legay","Val√©rie Murat"],"meta":["July 2013","DOI:10.1007/978-3-642-39274-0_13","Conference: Proceedings of the 18th international conference on Implementation and Application of Automata","Project: Verification of Higher-Order Functional Programs"],"references":["281356679_Rewriting_for_Fast_Prototyping_of_Static_Analyzers","266856757_Towards_Static_Analysis_of_Functional_Programs_Using_Tree_Automata_Completion","262170496_Equational_Abstraction_Refinement_for_Certified_Tree_Regular_Model_Checking","228888076_Approximation-based_Tree_Regular_Model-Checking","222665815_Equational_Approximations_for_Tree_Automata_Completion","221671642_Tree_Regular_Model_Checking_for_Lattice-Based_Automata","232503161_Weighted_Modal_Transition_Systems","226457078_Equational_Abstractions","222524670_Equational_abstractions","221551018_Lattice_Automata"]}