{"id":"269117128_Low-quality_dimension_reduction_and_high-dimensional_Approximate_Nearest_Neighbor","abstract":"The approximate nearest neighbor problem ($\\epsilon$-ANN) in Euclidean\nsettings is a fundamental question, which has been addressed by two main\napproaches: Data-dependent space partitioning techniques perform well when the\ndimension is relatively low, but are affected by the curse of dimensionality.\nOn the other hand, locality sensitive hashing has polynomial dependence in the\ndimension, sublinear query time with an exponent inversely proportional to the\nerror factor $\\epsilon$, and subquadratic space requirement.\nWe generalize the Johnson-Lindenstrauss lemma to define \"low-quality\"\nmappings to a Euclidean space of significantly lower dimension, such that they\nsatisfy a requirement weaker than approximately preserving all distances or\neven preserving the nearest neighbor. This mapping guarantees, with arbitrarily\nhigh probability, that an approximate nearest neighbor lies among the $k$\napproximate nearest neighbors in the projected space. This leads to a\nrandomized tree based data structure that avoids the curse of dimensionality\nfor $\\epsilon$-ANN. Our algorithm, given $n$ points in dimension $d$, achieves\nspace usage in $O(dn)$, preprocessing time in $O(dn\\log n)$, and query time in\n$O(d n^{\\rho}\\log n)$, where $\\rho$ is proportional to $1-{1}/{\\ln \\ln n}$, for\nfixed $\\epsilon \\in (0,1)$. It employs a data structure, such as BBD-trees,\nthat efficiently finds $k$ approximate nearest neighbors. The dimension\nreduction is larger if one assumes that pointsets possess some structure,\nnamely bounded expansion rate. We implement our method and present experimental\nresults in up to 500 dimensions and $10^5$ points, which show that the\npractical performance is better than predicted by the theoretical analysis. In\naddition, we compare our approach with E2LSH.","authors":["Evangelos Anagnostopoulos","Ioannis Z Emiris","Ioannis Psarros"],"meta":["December 2014","SourcearXiv"],"references":["301840852_Extensions_of_Lipschitz_mappings_into_a_Hilbert_space","235008656_Extensions_of_Lipschitz_maps_into_a_Hilbert_space","221591632_Approximate_Polytope_Membership_Queries","319770399_Approximate_nearest_neighbors_towards_removing_the_curse_of_dimensionality","309719165_Fast_construction_of_nets_in_low_dimensional_metrics_and_their_applications","288663320_Randomly-oriented_k-d_trees_adapt_to_intrinsic_dimension","221591937_Random_projection_trees_and_low_dimensional_manifolds","221498260_Near-Optimal_Hashing_Algorithms_for_Approximate_Nearest_Neighbor_in_High_Dimensions","221416047_Fast_Approximate_Nearest_Neighbors_with_Automatic_Algorithm_Configuration","220779242_Navigating_nets_Simple_algorithms_for_proximity_search"]}