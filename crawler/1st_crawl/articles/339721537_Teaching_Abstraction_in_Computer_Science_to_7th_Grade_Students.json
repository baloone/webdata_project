{"id":"339721537_Teaching_Abstraction_in_Computer_Science_to_7th_Grade_Students","abstract":"Abstraction is one of the most fundamental ideas in computer science (CS), and as such, according to Bruner, it should be taught spirally, starting as early as possible and revisited at every level of education. However, teaching CS abstraction to novices is a very challenging task, and CS educational research has often demonstrated students’ difficulties in learning this idea, in different contexts and at different age levels. The\nchallenge in teaching CS abstraction is even greater when dealing with young students, since according to theories on children’s cognitive development, their abstraction abilities may still be not fully developed. In 2013, Armoni [5] introduced a framework for teaching abstraction in the context of algorithmic problem solving, intended for novice students. We studied the effect of this framework in an introductory CS course for 7th graders, in which Scratch was used as the programming language for implementing algorithmic solutions. Our findings indicate that the framework was highly effective for developing CS abstraction skills as well as other related skills and aspects, such as the tendency to provide explanations for solutions, the use of initialization processes, and the perception of the nature of CS. It also significantly improved students’ general CS performance in this course","authors":["Michal Armoni","David Statter"],"meta":["February 2020ACM Transactions on Computing Education 20(1):8:1-37","DOI:10.1145/3372143","Project: Abstraction in computer science"],"references":["322895502_Abstraction_in_action_K-5_teachers'_uses_of_levels_of_abstraction_particularly_the_design_level_in_teaching_programming","300481297_A_Comparison_of_Preschool_and_Elementary_School_Children_Learning_Computer_Science_Concepts_through_a_Multilanguage_Robot_Programming_Platform","296847071_Initialization_in_Scratch_Seeking_Knowledge_Transfer","284181364_Dr_Scratch_a_Web_Tool_to_Automatically_Evaluate_Scratch_Projects","279618267_Content_validity_evidences_in_test_development_An_applied_perspective","275274983_Floors_and_Flexibility_Designing_a_Programming_Environment_for_4th-6th_Grade_Classrooms","274309848_Computational_Thinking","273255395_COMPUTING_IN_SCHOOLS_-_Spiral_thinking_K-12_computer_science_education_as_part_of_holistic_computing_education","262204624_COMPUTING_IN_SCHOOLS_-_Teaching_CS_in_kindergarten_How_early_can_the_pipeline_begin","254462782_Teaching_graph_algorithms_to_children_of_all_ages","254006849_The_fairy_performance_assessment_Measuring_computational_thinking_in_middle_school","247924673_Bringing_computational_thinking_to_K-12_what_is_Involved_and_what_is_the_role_of_the_computer_science_education_community","234831859_Engaging_middle_school_teachers_and_students_with_alice_in_a_diverse_set_of_subjects","234796737_Learning_to_Program_Learning_to_Construct_Mechanisms_and_Explanations","233855663_A_systematic_approach_to_teaching_abstraction_and_mathematical_modeling","225083749_Mixed_Methods_Research_A_Research_Paradigm_Whose_Time_Has_Come","221537152_Introducing_concurrency_in_CS_1","221514864_Storytelling_Alice_motivates_middle_school_girls_to_learn_computer_programming","220808024_Exploring_students'_understanding_of_the_concept_of_algorithm_levels_of_abstraction","347494782_The_Psychology_Of_Intelligence","324762596_CodeMaster_-_Automatic_Assessment_and_Grading_of_App_Inventor_and_Snap_Programs","320884562_Learning_Abstraction_in_Computer_Science_A_Gender_Perspective","311483604_Levels_of_abstraction_in_students'_understanding_of_the_concept_of_algorithm_the_qualitative_perspective","311476208_Recursion_in_gradual_steps_is_recursion_really_that_difficult","309379438_Teaching_Abstract_Thinking_in_Introduction_to_Computer_Science_for_7th_Graders","301429317_Should_your_8-year-old_learn_coding","298972479_Learning_Computer_Science_Concepts_with_Scratch","286246033_Early_computing_education_-_why_What_When_How","279197778_Using_SOLO_to_Classify_the_Programming_Responses_of_Primary_Grade_Students","276903453_Robotics_in_the_early_childhood_classroom_Learning_outcomes_from_an_8-week_robotics_curriculum_in_pre-kindergarten_through_second_grade","274476008_The_concept_of_nondeterminism_Its_development_and_implications_for_teaching_reprint","274056277_A_Case_Study_of_the_Introduction_of_Computer_Science_in_NZ_Schools","270607054_Not_seeing_the_forest_for_the_trees","269034023_Reduction_--_an_abstract_thinking_pattern_the_case_of_the_computational_models_course","264543793_Restart_The_Resurgence_of_Computer_Science_in_UK_Schools","262404862_Modeling_the_learning_progressions_of_computational_thinking_of_primary_grade_students","254462922_The_Abstraction_transition_taxonomy_Developing_desired_learning_outcomes_through_the_lens_of_situated_cognition","254461491_A_new_curriculum_for_junior-high_in_computer_science","250888351_Reductive_thinking_in_computer_science","250797464_High-School_Students'_Attitudes_Regarding_Procedural_Abstraction","247663461_Studies_in_Reflecting_Abstraction","247424580_Robots_Exploring_new_technologies_for_learning_for_kids","240519548_How_to_Study_Thinking_in_Everyday_Life_Contrasting_Think-Aloud_Protocols_With_Descriptions_and_Explanations_of_Thinking","237130375_Habits_of_mind_An_organizing_principle_for_mathematics_curricula","232839182_Reversing_a_fundamental_idea_in_computer_science","226201914_Reducing_Abstraction_Level_When_Learning_Abstract_Algebra_Concepts","221538313_Cogito_ergo_sum_Cognitive_processes_of_students_dealing_with_data_structures","220808272_Teaching_abstraction_in_introductory_courses","220808157_Habits_of_programming_in_scratch","220807462_Engaging_with_computer_science_through_magic_shows","220613394_Abstraction_ability_as_an_indicator_of_success_for_learning_object-oriented_programming","220427301_Turing_Award_Lecture_On_Computational_Complexity_and_the_Nature_of_Computer_Science","220426817_Scratch_Programming_for_All","220613083_Reflections_on_teaching_abstraction_and_other_soft_ideas","220478735_Computing_as_a_discipline"]}