{"id":"305984542_A_Sharing-Aware_Memory_Management_Unit_for_Online_Mapping_in_Multi-core_Architectures","abstract":"In modern shared-memory architectures, it is important to map threads and data in a way that increases the locality of their memory accesses, thereby improving performance and energy efficiency. Threads that access shared data should be mapped close to each other in the memory hierarchy, while the data they access should be mapped to their NUMA node, which is called sharing-aware mapping. In this paper, we propose SAMMU, which adds sharing-awareness to the memory management unit in current architectures. SAMMU analyzes the memory access behavior in hardware and provides information to the operating system so it can perform an online mapping of threads and data. In the evaluation with a wide range of parallel applications, performance was improved by up to 35.7 % (13.1 % on average).","authors":["Eduardo H. M. Cruz","Matthias Diener","La√©rcio Lima Pilla","Philippe Olivier Alexandre. Navaux"],"meta":["August 2016","DOI:10.1007/978-3-319-43659-3_36","Conference: European Conference on Parallel Processing"],"references":["273320122_An_Efficient_Algorithm_for_Communication-Based_Task_Mapping","266660543_kMAF_Automatic_kernel-level_management_of_thread_and_data_affinity","262159992_Traffic_Management_A_Holistic_Approach_to_Memory_Placement_on_NUMA_Systems","228643669_Data_and_thread_affinity_in_OpenMP_programs","224140663_Structuring_the_execution_of_OpenMP_applications_for_multicore_architectures","224122366_Analyzing_Parallel_Programs_with_PIN","221474583_A_communication_characterisation_of_SPLASH-2_and_parsec","220623841_Enhancing_operating_system_support_for_multicore_processors_by_using_hardware_performance_monitoring","44256084_hwloc_A_Generic_Framework_for_Managing_Hardware_Affinities_in_HPC_Applications","4144865_Optimizing_Replication_Communication_and_Capacity_Allocation_in_CMPs","312791637_Autopin_-_Automated_optimization_of_thread-to-core_pinning_on_multicore_systems","268461720_Traffic_management","260358321_Thread_Assignment_of_Multithreaded_Network_Applications_in_MulticoreMultithreaded_Processors","259516048_Dynamic_thread_mapping_of_shared_memory_applications_by_exploiting_cache_coherence_protocols","254004687_Why_On-Chip_Cache_Coherence_is_Here_to_Stay","241629539_Performance_analysis_of_thread_mappings_with_a_holistic_view_of_the_hardware_resources","221643572_Hardware_profile-guided_automatic_page_placement_for_ccNUMA_systems","221321507_NUMA-Aware_Memory_Manager_with_Dominant-Thread-Based_Copying_GC","221306628_Memory_Affinity_for_Hierarchical_Shared_Memory_Multiprocessors","221236248_Affinity-on-next-touch_Increasing_the_performance_of_an_industrial_PDE_on_a_cc-NUMA_system","220379232_1_Feedback-Directed_Page_Placement_for_ccNUMA_via_Hardware-generated_Memory_Traces","2955586_Simics_A_Full_System_Simulation_Platform","2317347_The_OpenMP_Implementation_of_NAS_Parallel_Benchmarks_and_Its_Performance"]}