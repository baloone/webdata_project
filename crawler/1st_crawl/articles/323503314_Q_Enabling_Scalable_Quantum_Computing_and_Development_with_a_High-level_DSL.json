{"id":"323503314_Q_Enabling_Scalable_Quantum_Computing_and_Development_with_a_High-level_DSL","abstract":"Quantum computing exploits quantum phenomena such as superposition and entanglement to realize a form of parallelism that is not available to traditional computing. It offers the potential of significant computational speed-ups in quantum chemistry, materials science, cryptography, and machine learning.\nThe dominant approach to programming quantum computers is to provide an existing high-level language with libraries that allow for the expression of quantum programs. This approach can permit computations that are meaningless in a quantum context; prohibits succint expression of interaction between classical and quantum logic; and does not provide important constructs that are required for quantum programming.\nWe present Q#, a quantum-focused domain-specific language explicitly designed to correctly, clearly and completely express quantum algorithms. Q# provides a type system; a tightly constrained environment to safely interleave classical and quantum computations; specialized syntax; symbolic code manipulation to automatically generate correct transformations of quantum operations; and powerful functional constructs which aid composition.","authors":["Krysta Marie Svore","Martin Roetteler","Alan Geller","Matthias Troyer"],"meta":["February 2018","DOI:10.1145/3183895.3183901","Conference: the Real World Domain Specific Languages Workshop 2018"],"references":["320241560_Extreme-Scale_Programming_Model_for_Quantum_Acceleration_within_High_Performance_Computing","311925589_ProjectQ_An_Open_Source_Software_Framework_for_Quantum_Computing","286412133_Robust_Calibration_of_a_Universal_Single-Qubit_Gate-Set_via_Robust_Phase_Estimation","265603120_Efficient_synthesis_of_probabilistic_quantum_circuits_with_fallback","260268455_LIQUi_A_Software_Design_Architecture_and_Domain-Specific_Language_for_Quantum_Computing","318392297_Open_Quantum_Assembly_Language","312013371_QWIRE_a_core_language_for_quantum_circuits","306186585_A_Practical_Quantum_Instruction_Set_Architecture","303014172_Elucidating_Reaction_Mechanisms_on_Quantum_Computers","288492343_Quipper","280773352_Efficient_Bayesian_Phase_Estimation","277918551_Compiler_Management_of_Communication_and_Parallelism_for_Quantum_Computation","269728823_ScaffCC_Scalable_Compilation_and_Analysis_of_Quantum_Programs","259151393_Exponential_improvement_in_precision_for_simulating_sparse_Hamiltonians","253238964_Faster_Phase_Estimation","246546655_Quipper_A_Scalable_Quantum_Programming_Language","234005748_Practical_Approximation_of_Single-Qubit_Unitaries_by_Single-Qubit_Quantum_Clifford_and_T_Circuits","233982349_Efficient_CliffordT_approximation_of_single-qubit_operators","220537788_Representation-theoretical_properties_of_the_approximate_quantum_Fourier_transform","200524403_Quantum_Computation_and_Quantum_Information","48175170_Models_of_quantum_computation_and_quantum_programming_languages","2187384_An_Approximate_Fourier_Transform_Useful_for_Quantum_Factoring"]}