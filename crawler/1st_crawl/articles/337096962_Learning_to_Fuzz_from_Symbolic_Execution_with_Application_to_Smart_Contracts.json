{"id":"337096962_Learning_to_Fuzz_from_Symbolic_Execution_with_Application_to_Smart_Contracts","abstract":"Fuzzing and symbolic execution are two complementary techniques for discovering software vulnerabilities. Fuzzing is fast and scalable, but can be ineffective when it fails to randomly select the right inputs. Symbolic execution is thorough but slow and often does not scale to deep program paths with complex path conditions. In this work, we propose to learn an effective and fast fuzzer from symbolic execution, by phrasing the learning task in the framework of imitation learning. During learning, a symbolic execution expert generates a large number of quality inputs improving coverage on thousands of programs. Then, a fuzzing policy, represented with a suitable architecture of neural networks, is trained on the generated dataset. The learned policy can then be used to fuzz new programs. We instantiate our approach to the problem of fuzzing smart contracts, a domain where contracts often implement similar functionality (facilitating learning) and security is of utmost importance. We present an end-to-end system, ILF (for Imitation Learning based Fuzzer), and an extensive evaluation over >18K contracts. Our results show that ILF is effective: (i) it is fast, generating 148 transactions per second, (ii) it outperforms existing fuzzers (e.g., achieving 33% more coverage), and (iii) it detects more vulnerabilities than existing fuzzing and symbolic execution tools for Ethereum.","authors":["Jingxuan He","Mislav BalunoviÄ‡","Nodar Ambroladze","Petar Tsankov"],"meta":["November 2019","DOI:10.1145/3319535.3363230","Conference: the 2019 ACM SIGSAC Conference"],"references":["328511070_MadMax_surviving_out-of-gas_conditions_in_Ethereum_smart_contracts","328322602_Effective_Program_Debloating_via_Reinforcement_Learning","327531493_Osiris_Hunting_for_Integer_Bugs_in_Ethereum_Smart_Contracts","326359854_Compiler_fuzzing_through_deep_learning","322136178_Online_Detection_of_Effectively_Callback_Free_Objects_with_Applications_to_Smart_Contracts","318870792_Steelix_program-state_based_binary_fuzzing","311886374_VUzzer_Application-aware_Evolutionary_Fuzzing","292074166_Mastering_the_game_of_Go_with_deep_neural_networks_and_tree_search","262877889_Learning_Phrase_Representations_using_RNN_Encoder-Decoder_for_Statistical_Machine_Translation","257882504_Distributed_Representations_of_Words_and_Phrases_and_their_Compositionality","254041957_SECFUZZ_Fuzz-testing_security_protocols","237657574_Fuzzing_with_Code_Fragments","221655409_Automated_Whitebox_Fuzz_Testing","221609315_EXE_Automatically_Generating_Inputs_of_Death","220752439_Grammar-based_Whitebox_Fuzzing","348915552_Neuro-Symbolic_Execution_Augmenting_Symbolic_Execution_with_Neural_Constraints","345396329_Finding_The_Greedy_Prodigal_and_Suicidal_Contracts_at_Scale","343342059_VerX_Safety_Verification_of_Smart_Contracts","335861305_NEUZZ_Efficient_Fuzzing_with_Neural_Program_Smoothing","334079913_Analyzing_Ethereum's_Contract_Topology","328327177_Debin_Predicting_Debug_Information_in_Stripped_Binaries","328321512_Securify_Practical_Security_Analysis_of_Smart_Contracts","327131915_ContractFuzzer_fuzzing_smart_contracts_for_vulnerability_detection","326948399_KEVM_A_Complete_Formal_Semantics_of_the_Ethereum_Virtual_Machine","326643242_Angora_Efficient_Fuzzing_by_Principled_Search","326641025_T-Fuzz_Fuzzing_by_Program_Transformation","326523816_Fast_Numerical_Program_Analysis_with_Reinforcement_Learning_30th_International_Conference_CAV_2018_Held_as_Part_of_the_Federated_Logic_Conference_FloC_2018_Oxford_UK_July_14-17_2018_Proceedings_Part_I","323821756_Towards_verifying_ethereum_smart_contract_bytecode_in_IsabelleHOL","323257355_Finding_The_Greedy_Prodigal_and_Suicidal_Contracts_at_Scale","323248811_ZEUS_Analyzing_Safety_of_Smart_Contracts","321256804_LearnFuzz_Machine_learning_for_input_fuzzing","321147071_Defining_the_Ethereum_Virtual_Machine_for_Interactive_Theorem_Provers","320820791_Learning_to_Represent_Programs_with_Graphs","319856636_Synthesizing_Program_Input_Grammars","319770369_Distributed_Representations_of_Words_and_Phrases_and_their_Compositionality","318332582_Empowering_convolutional_networks_for_malware_classification_and_analysis","317919403_Skyfire_Data-Driven_Seed_Generation_for_Fuzzing","317724074_Malware_classification_with_LSTM_and_GRU_language_models_and_a_character-level_CNN","317595390_Synthesizing_program_input_grammars","316906731_Driller_Augmenting_Fuzzing_Through_Selective_Symbolic_Execution","310821192_Coverage-based_Greybox_Fuzzing_as_Markov_Chain","310819040_Mining_input_grammars_from_dynamic_taints","309448109_Formal_Verification_of_Smart_Contracts_Short_Paper","309444724_Making_Smart_Contracts_Smarter","307991731_Semi-Supervised_Classification_with_Graph_Convolutional_Networks","278646722_CUTE","266657725_Compiler_Validation_via_Equivalence_Modulo_Inputs","257634951_An_Overview_of_the_K_Semantic_Framework","221619854_Alvinn_An_Autonomous_Land_Vehicle_in_a_Neural_Network","220851853_KLEE_Unassisted_and_Automatic_Generation_of_High-Coverage_Tests_for_Complex_Systems_Programs","3897868_Data_Mining_Methods_for_Detection_of_New_Malicious_Executables","220752409_Finding_and_Understanding_Bugs_in_C_Compilers","220122410_Autonomous_Helicopter_Aerobatics_through_Apprenticeship_Learning","47646552_A_Reduction_of_Imitation_Learning_and_Structured_Prediction_to_No-RegretOnline_Learning"]}