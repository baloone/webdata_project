{"id":"313918994_A_Guided_Genetic_Algorithm_for_Automated_Crash_Reproduction","abstract":"To reduce the effort developers have to make for crash debugging, researchers have proposed several solutions for automatic failure reproduction. Recent advances proposed the use of symbolic execution, mutation analysis, and directed model checking as underling techniques for post-failure analysis of crash stack traces. However, existing approaches still cannot reproduce many real-world crashes due to such limitations as environment dependencies, path explosion, and time complexity. To address these challenges, we present EvoCrash, a post-failure approach which uses a novel Guided Genetic Algorithm (GGA) to cope with the large search space characterizing real-world software programs. Our empirical study on three open-source systems shows that EvoCrash can replicate 41 (82%) of real-world crashes, 34 (89%) of which are useful reproductions for debugging purposes, outperforming the state-of-the-art in crash replication.","authors":["Mozhan Soltani","Annibale Panichella","Arie Van Deursen"],"meta":["May 2017","DOI:10.1109/ICSE.2017.27","Conference: 39th International Conference on Software EngineeringAt: Buenos Aires, Argentina","Project: Big Software on the Run"],"references":["306090663_Exception_handling_bug_hazards_in_Android","303356641_A_bug_reproduction_approach_based_on_directed_model_checking_and_crash_traces","273062177_T3_a_Combinator-Based_Random_Testing_Tool_for_Java_Benchmarking","272328027_Reformulating_Branch_Coverage_as_a_Many-Objective_Optimization_Problem","305525538_Automatically_Discovering_Reporting_and_Reproducing_Android_Application_Crashes","296058459_Evolutionary_Testing_for_Crash_Reproduction","282066225_Crash_Reproduction_via_Test_Case_Mutation_Let_Existing_Test_Cases_Help","273706786_Instance_Generator_and_Problem_Representation_to_Improve_Object_Oriented_Code_Coverage","272361503_STAR_Stack_Trace_Based_Automatic_Crash_Reproduction_via_Symbolic_Execution","271096125_1600_faults_in_100_projects_automatically_finding_faults_while_achieving_high_coverage_with_EvoSuite"]}