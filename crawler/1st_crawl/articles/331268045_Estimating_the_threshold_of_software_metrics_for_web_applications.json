{"id":"331268045_Estimating_the_threshold_of_software_metrics_for_web_applications","abstract":"Estimating thresholds for software metrics is a key step towards assigning a quality index. In defect prediction, two approaches are widely used those based on statistics and, that which uses rigorous mathematical models. Although significant insights have been surmised, a general consensus on their results is still far from generalizations. In these perspectives, we attempt to check whether there exists any relationship between the two approaches. An empirical investigation is carried out in this work to study the relationship between estimated threshold values calculated at various risk levels using Benderâ€™s approach and measures of central tendency using the Apache Click web application. The effect of these different threshold estimates on the performance of the developed defect prediction models is also studied and validated using different releases of the dataset. We find that the threshold indicator obtained from the representational models such as that due to Bender has an intricate relationship with the median value of the dataset. The close association between the model and statistical parameters mainly stems from the underlying characteristics of the data set itself. Descriptive statistical analysis of all Apache Click metrics dataset is found to be positively skewed, and hence median render the most relevant central measure for threshold estimation. Additionally, we also find that with increasing risk level, the threshold value subsequently shifts from median to mean value of the underlying metric data. Our preposition that the performance of the defect prediction model is best when threshold estimates are closer to the median is also verified with inter-version project comparison.","authors":["Ruchika Malhotra","Anjali Sharma"],"meta":["February 2019International Journal of Systems Assurance Engineering and Management 10(1)","DOI:10.1007/s13198-019-00773-1"],"references":["284043217_ROC_Graphs_Notes_and_Practical_Considerations_for_Researchers","275720992_Open_Issues_in_Software_Defect_Prediction","271659680_Which_process_metrics_can_significantly_improve_defect_prediction_models_An_empirical_study","270649376_Deriving_metrics_thresholds_using_log_transformation","256078967_A_study_of_the_effectiveness_of_two_threshold_definition_techniques","244958744_A_Metrics_Suite_for_OO_Design","228354422_Large-Scale_Bayesian_Logistic_Regression_for_Text_Categorization","226638077_An_Investigation_into_the_Applicability_and_Validity_of_Object-Oriented_Design_Metrics","224185200_Deriving_metric_thresholds_from_benchmark_data","222511520_Introduction_to_ROC_analysis","220674027_Finding_software_metrics_threshold_values_using_ROC_curves","220284058_Dealing_with_Software_Metrics_Collection_and_Analysis_a_Relational_Approach","220071232_Shatnawi_R_A_Quantitative_Investigation_of_the_Acceptable_Risk_levels_of_Object-Oriented_Metrics_in_Open-Source_Systems_IEEE_Transactions_on_Software_Engineering_362_216-225","3626506_Applying_design-metrics_to_object-oriented_frameworks","3189730_Cross_versus_Within-Company_Cost_Estimation_Studies_A_Systematic_Review","3188236_The_optimal_class_size_for_object-oriented_software","3187794_Chidamber_and_Kemerer's_metrics_suite_A_measurement_theory_perspective","3187649_Kemerer_CF_A_metric_suite_for_object_oriented_design_IEEE_Trans_Softw_Eng_206_476-493","2540411_Thresholds_for_Object-Oriented_Measures","313755128_Applying_design-metrics_to_object-oriented_frameworks","308568298_Detection_of_Fault-Prone_Classes_Using_Logistic_Regression_Based_Object-Oriented_Metrics_Thresholds","307632471_A_Preliminary_Mapping_Study_of_Software_Metrics_Thresholds","302971383_Deriving_Thresholds_of_Software_Metrics_to_Predict_Faults_on_Open_Source_Software_Replicated_Case_Studies","286733985_Defect_Collection_and_Reporting_System_for_Git_based_Open_Source_Software","284943757_A_literature_review_on_software_defect_prediction","283410159_Stepwise_logistic_regression_Applied_logistic_regression","264625624_Fault_prediction_considering_threshold_effects_of_object-oriented_metrics","262405715_An_Overview_of_Software_Defect_Density_A_Scoping_Study","251924458_A_model_for_early_prediction_of_faults_in_software_systems","248809571_Object_-_oriented_met_-_rics_measures_of_complexity","246987586_Object-Oriented_Metrics_Measures_of_Complexity","245348706_An_Object-Oriented_Design_Quality_Assessment_Model","234818463_Introduction_to_the_personal_software_processsm","228603390_Quantitative_Risk_Assessment_in_Epidemiological_Studies_Investigating_Threshold_Effects","222547352_Exploring_the_relationships_between_design_measures_and_software_quality_in_object-oriented_systems","221554292_Predicting_defects_using_network_analysis_on_dependency_graphs","221434375_Relationships_Between_Selected_Software_Measures_and_Latent_Bug-Density_Guidelines_for_Improving_Quality","220692926_Object-Oriented_Software_Metrics_A_Practical_Guide","220423796_Npath_A_Measure_of_Execution_Path_Complexity_and_Its_Applications","220377797_The_application_of_software_maintainability_models_in_industrial_software","220377535_Identifying_thresholds_for_object-oriented_software_metrics","220375938_Object-oriented_metrics_that_predict_maintainability","220070444_A_Complexity_Measure","209803025_Applied_Logistic_Regression_Hoboken","44046788_The_Prediction_of_Faulty_Classes_Using_Object-Oriented_Design_Metrics","35031724_A_hierarchical_model_for_quality_assessment_of_object-oriented_designs","3830477_An_empirical_study_on_object-oriented_metrics","3189025_A_Complexity_Measure","3187827_A_Validation_of_Object-Oriented_Design_Metrics_as_Quality_Indicators"]}