{"id":"311489734_Guaranteeing_Configuration_Validity_in_Evolving_Software_Product_Lines","abstract":"Software Product Lines (SPLs) are an approach to capture families of closely related software systems in terms of commonalities and variabilities where individual variants are defined by configurations of selected features. Specific (partial) configurations may be of particular importance to SPL manufacturers, e.g., if they are very popular or used by major customers. SPLs are subject to evolution, which may inadvertently break existing configurations, e.g., if a previously selected feature does no longer exist. This is problematic as it may delay or completely prevent creation of previously existing important variants causing monetary loss and customer dissatisfaction. In this paper, we present a method to lock specific configurations to ensure their validity during evolution of the SPL. For this, we present Temporal Feature Models (TFMs) and dedicated evolution operations as a semantic-enriched first-class notion for evolution of feature models, which we use to assess the impact on existing configurations. Using the presented method, it is possible to guarantee that locked configurations remain valid during SPL evolution and make statements on which part of the evolution would break the configurations.","authors":["Michael Nieke","Christoph Seidl","Sven Schuster"],"meta":["January 2016","DOI:10.1145/2866614.2866625","Conference: the Tenth International Workshop"],"references":["312751512_Evaluating_Feature_Change_Impact_on_Multi-product_Line_Configurations_Using_Partial_Information","288786918_Fault-based_Product-line_Testing_Effective_Sample_Generation_Based_on_Feature-diagram_Mutation","236134063_Feature_Model_Differences","226664976_Automated_Reasoning_on_Feature_Models","225266655_Staged_Configuration_Using_Feature_Models","221553207_Software_Product_Line_Evolution_with_Cardinality-Based_Feature_Models","221108610_Investigating_the_safe_evolution_of_software_product_lines","216168402_Reasoning_about_Edits_to_Feature_Models","215588323_Feature-Oriented_Domain_Analysis_FODA_feasibility_study","278798096_Consistency_Checking_for_the_Evolution_of_Cardinality-based_Feature_Models","263340931_Integrated_Management_of_Variability_in_Space_and_Time_in_Software_Families","262288220_Capturing_variability_in_space_and_time_with_hyper_feature_models","262282526_Coevolution_of_variability_models_and_related_artifacts_A_case_study_from_the_Linux_kernel","258967603_Cardinality-Based_Feature_Modeling_and_Constraints_A_Progress_Report","258770465_Evolving_feature_model_configurations_in_software_product_lines","241770941_Using_regression_testing_to_analyze_the_impact_of_changes_to_variability_models_on_products","234793794_EvoFM_feature-driven_planning_of_product-line_evolution","221223481_Towards_feature-driven_planning_of_product-line_evolution","220693462_Software_Product_Line_Engineering_Foundations_Principles_and_Techniques","215697422_Feature_Models_Grammars_and_Propositional_Formulas","213882667_Generative_Programming_Methods_Tools_and_Applications"]}