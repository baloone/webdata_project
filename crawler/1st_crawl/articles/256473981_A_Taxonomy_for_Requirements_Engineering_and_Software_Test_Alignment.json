{"id":"256473981_A_Taxonomy_for_Requirements_Engineering_and_Software_Test_Alignment","abstract":"Requirements Engineering and Software Testing are mature areas and have seen a lot of research. Nevertheless, their interactions have been sparsely explored beyond the concept of traceability. To fill this gap we propose a definition of requirements engineering and software test (REST) alignment, a taxonomy that characterizes the methods linking the respective areas, and a process to assess alignment. The taxonomy can support researchers to identify new opportunities for investigation, as well as practitioners to compare alignment methods and evaluate alignment, or lack thereof.\nWe constructed the REST taxonomy by analyzing alignment methods published in literature, iteratively validating the emerging dimensions. The resulting concept of an information dyad characterizes the exchange of information required for any alignment to take place. We demonstrate use of the taxonomy by applying it on five in-depth cases\nand illustrate angles of analysis on a set of thirteen alignment methods. In addition we developed an assessment framework (REST-bench), applied it in an industrial assessment, and showed that it, with a low effort, can identify opportunities to improve REST alignment.\nAlthough we expect that the taxonomy can be further refined, we believe that the information dyad is a valid and useful construct to understand alignment.","authors":["Michael Unterkalmsteiner","Robert Feldt","Tony Gorschek"],"meta":["September 2013ACM Transactions on Software Engineering and Methodology","DOI:10.1145/2523088"],"references":["302924724_Guidelines_for_performing_Systematic_Literature_Reviews_in_Software_Engineering","328730859_What_Every_Engineer_Should_Know_about_Software_Engineering","319394669_An_Analysis_of_the_requirements_Traceability_Problem","316800454_The_Kluwer_International_Series_in_Software_Engineering","313632165_Advancing_candidate_link_generation_for_requirements_tracing_The_study_of_methods","313601598_Requirements_abstraction_model","310772702_Biomimetic_software_engineering_techniques_for_dependability","285273157_The_process_cycle","280940030_The_relationship_of_system_engineering_to_the_project_cycle","279598478_Sorting_Out_Software_Complexity_Underlying_complexity_escalates_exponentially_Some_little-known_research_findings"]}