{"id":"310749931_ne-Course_for_Learning_Programming","abstract":"Difficulties in learning programming are a constant concern in engineering courses. In many research studies involving the learning programming must of the solutions presented, from the beginning of the first programming languages, was to apply different type of problems analysis. Literature relating to the understanding of nature of learning programming skills has been focused explicitly on the teaching methodology and few of them focus on abilities, characteristics and knowledge acquired over the life cycle of learning programming in each student. Most of the students enrolled in engineering courses, where programming is a crucial competence, never had the opportunity to develop skills of computational thinking. In this paper, we focus our work on the learning programming developing and applying a set of exercises where students with more difficulties can express and develop their skills in computational thinking. In order to understand some programming students difficulties we have create a set of exercises, and apply it to a pre-programming course, that allows teachers to understand how students analyse and comprehend aspects such as visualization, spatial interpretation and physical manipulation. This paper also reports on results obtained from a class experiment where Memory Transfer Language was used by students to learn programming. All the exercises must be resolved without any type of technology, designed as a ne-course (no electronic course) for learning programming.","authors":["José Quitério Figueiredo","Natália Fernandes Gomes","Francisco José García-Peñalvo"],"meta":["November 2016","DOI:10.1145/3012430.3012572","Conference: Fourth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM’16)At: Salamanca, Spain"],"references":["308880760_What_Computational_Thinking_Is","274309848_Computational_Thinking","266660882_Predicting_student_success_using_fine_grain_clicker_data","266660881_A_systematic_review_of_approaches_for_teaching_introductory_programming_and_their_influence_on_success","264043730_An_Investigation_into_the_Learning_Styles_and_Self-Regulated_Learning_Strategies_for_Computer_Science_Students","242536554_The_Impact_of_Learning_Styles_in_Introductory_Programming_Learning","235920619_Using_SOLO_taxonomy_to_explore_students'_mental_models_of_the_programming_variable_and_the_assignment_statement","228820766_Predictors_of_success_in_a_first_programming_course","228819372_Learning_styles_and_problem_solving_strategies","228371187_Evaluating_a_new_exam_question_Parsons_problems","226134435_Learning_Programming_with_the_PBL_Method_-_Experiences_on_PBL_Cases_and_Tutoring","220808346_RoboCode_problem-based_learning_A_non-prescriptive_approach_to_teaching_programming","220420371_Computational_thinking","314281953_Towards_a_qualitative_descriptor_for_paper_folding_reasoning","311489054_Subgoals_Help_Students_Solve_Parsons_Problems","309854890_Spatial_Skills_Introductory_Computing","300117017_Spatial_Skills_Training_in_Introductory_Computing","272898382_The_impact_of_Memory_Transfer_Language_MTL_on_reducing_misconceptions_in_teaching_programming_to_novices","266661040_Adaptive_Parsons_Problems_with_Discourse_Rules","39221850_La_investigacion_en_la_practica_educativa_guia_metodologica_de_investigacion_para_el_diagnostico_y_evaluacion_en_los_centros_docentes"]}