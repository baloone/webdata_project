{"id":"344120210_Computer_Program_Decomposition_and_DynamicBehavioral_Modeling","abstract":"Decomposition-statically dividing a program into multiple units-is a common programming technique for realizing parallelism and refining programs. The decomposition of a sequential program into components is tedious, due to the limitations of program analysis and because sequential programs frequently employ inherently sequential algorithms. This paper contributes to this area of study by proposing a diagrammatic methodology to decompose a sequential program. The methodology involves visualizing the program in terms of a conceptual model called the thinging machine (TM) model. The TM diagram-based model establishes three levels of representation: (1) a static description; (2) a dynamic representation; and (3) a behavioral model. The decomposition is performed in the last phase of modeling, according to the streams of events. This method is contrasted with formal decomposition specifications and compared with the typical decomposition of a C++ program. The results point to the viability of using TM for decomposing programs.","authors":["Sabah Al-Fedaghi"],"meta":["August 2020"],"references":["343588436_Changes_States_and_Events_The_Thread_from_Staticity_to_Dynamism_in_the_Conceptual_Modeling_of_Systems","342992444_Conceptual_Modeling_of_Time_for_Computational_Ontologies","342924816_Modeling_the_Semantics_of_States_and_State_Machines","341526130_Modeling_PhysicalDigital_Systems_Formal_Event-B_vs_Diagrammatic_Thinging_Machine","341057340_Three_Levels_of_Modeling_Static_StructureTrajectories_of_Flow_Dynamic_Events_and_Behavioral_Chronology_of_Events","340819801_Modeling_Network_Architecture_A_Cloud_Case_Study","312626867_The_Philosophy_of_Computer_Science","342462152_How_to_Document_Computer_Networks","340784904_Thinging-Based_Conceptual_Modeling_Case_Study_of_a_Tendering_System","312562550_A_One_Category_Ontology_Themes_from_the_Philosophy_of_Peter_van_Inwagen"]}