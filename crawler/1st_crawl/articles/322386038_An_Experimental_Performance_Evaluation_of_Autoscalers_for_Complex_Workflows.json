{"id":"322386038_An_Experimental_Performance_Evaluation_of_Autoscalers_for_Complex_Workflows","abstract":"Elasticity is one of the main features of cloud computing allowing customers to scale their resources based on the workload. Many autoscalers have been proposed in the past decade to decide on behalf of cloud customers when and how to provision resources to a cloud application based on the workload utilizing cloud elasticity features. However, in prior work, when a new policy is proposed, it is seldom compared to the state-of-the-art, and is often compared only to static provisioning using a predefined quality of service target. This reduces the ability of cloud customers and of cloud operators to choose and deploy an autoscaling policy, as there is seldom enough analysis on the performance of the autoscalers in different operating conditions and with different applications. In our work, we conduct an experimental performance evaluation of autoscaling policies, using as application model workflows, a popular formalism for automating resource management for applications with well-defined yet complex structures. We present a detailed comparative study of general state-of-the-art autoscaling policies, along with two new workflow-specific policies. To understand the performance differences between the seven policies, we conduct various experiments and compare their performance in both pairwise and group comparisons. We report both individual and aggregated metrics. As many workflows have deadline requirements on the tasks, we study the effect of autoscaling on workflow deadlines. Additionally, we look into the effect of autoscaling on the accounted and hourly based charged costs, and we evaluate performance variability caused by the autoscaler selection for each group of workflow sizes. Our results highlight the trade-offs between the suggested policies, how they can impact meeting the deadlines, and how they perform in different operating conditions, thus enabling a better understanding of the current state-of-the-art.","authors":["Alexey Ilyushkin","Ahmed Ali-Eldin","Nikolas Herbst","Andr√© Bauer"],"meta":["April 2018ACM Transactions on Modeling and Performance Evaluation of Computing Systems 3(2)","DOI:10.1145/3164537","Project: Self-aware Auto-Scaler"],"references":["312398836_Execution_time_estimation_for_workflow_scheduling","301876592_Ready_for_Rain_A_View_from_SPEC_Research_on_the_Future_of_Cloud_Metrics","299251979_Ready_for_Rain_A_View_from_SPEC_Research_on_the_Future_of_Cloud_Metrics","345156548_Quasar_resource-efficient_and_QoS-aware_cluster_management","312914594_On_the_Characteristics_of_Grid_Workflows","311012384_An_Experimental_Performance_Evaluation_of_Autoscaling_Policies_for_Complex_Workflows","305891044_PEAS_A_Performance_Evaluation_Framework_for_Auto-Scaling_Strategies_in_Cloud_Applications","303772637_Supporting_On-demand_Elasticity_in_Distributed_Graph_Processing","302476702_Dynamic_Auto-scaling_and_Scheduling_of_Deadline_Constrained_Service_Workloads_on_IaaS_Clouds","285203857_KOALA-C_A_task_allocator_for_integrated_multicluster_and_multicloud_environments"]}