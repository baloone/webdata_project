{"id":"221009401_A_Comparison_of_Cartesian_Genetic_Programming_and_Linear_Genetic_Programming","abstract":"Two prominent genetic programming approaches are the graph-based Cartesian Genetic Programming (CGP) and Linear Genetic Programming \n(LGP). Recently, a formal algorithm for constructing a directed acyclic graph (DAG) from a classical LGP instruction sequence\nhas been established. Given graph-based LGP and traditional CGP, this paper investigates the similarities and differences\nbetween the two implementations, and establishes that the significant difference between them is each algorithmâ€™s means of\nrestricting inter-connectivity of nodes. The work then goes on to compare the performance of two representations each (with\nvaried connectivity) of LGP and CGP to a directed cyclic graph (DCG) GP with no connectivity restrictions on a medical classification\nand regression benchmark.","authors":["Garnett Carl Wilson","Wolfgang Banzhaf"],"meta":["March 2008","DOI:10.1007/978-3-540-78671-9_16","SourceDBLP","Conference: Genetic Programming, 11th European Conference, EuroGP 2008, Naples, Italy, March 26-28, 2008. Proceedings"],"references":["226663524_Principles_in_the_Evolutionary_Design_of_Digital_Circuits-Part_I","226478494_Principles_in_the_Evolutionary_Design_of_Digital_Circuits-Part_II","221900758_Genetic_Programming_An_Introduction_on_the_Automatic_Evolution_of_computer_programs_and_its_Applications","51986579_Prefuse_A_toolkit_for_interactive_information_visualization","3418872_Redundancy_and_computational_efficiency_in_Cartesian_genetic_programming","248192679_UCI_Repository_of_Machine_Learning_Databases","243668803_Evolutionary_program_induction_of_binary_machine_code_and_its_application","216300095_Genetic_Programming_an_Introduction_On_the_Automatic_Evolution_of_Computer_Programs_and_Its_Applications_Morgan_Kaufmann","28354317_On_linear_genetic_programming","2406797_Effective_Linear_Genetic_Programming"]}