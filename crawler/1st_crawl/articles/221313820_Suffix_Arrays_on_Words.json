{"id":"221313820_Suffix_Arrays_on_Words","abstract":"Surprisingly enough, it is not yet known how to build directly a suffix array that indexes just the k positions at word-boundaries of a text T (1 ,n ), taking O(n )t ime andO(k) space in addition to T.W e pro- pose a class-note solution to this problem that achieves such optimal time and space bounds. Word-based versions of indexes achieving the same time/space bounds were already known for suffix trees (1, 2) and (com- pact) DAWGs (3,4). Our solution inherits the simplicity and efficiency of suffix arrays, with respect to such other word-indexes, and thus it fore- sees applications in word-based approaches to data compression (5) and computational linguistics (6). To support this, we have run a large set of experiments showing that word-based suffix arrays ma yb e constructed twice as fast as their full-text counterparts, and with a working space as low as 20%. The space reduction of the final word-based suffix array impacts also in their query time (i.e. less random access binary-search steps!), being faster by a factor of up to 3.","authors":["Paolo Ferragina","Johannes Fischer"],"meta":["July 2007","DOI:10.1007/978-3-540-73437-6_33","SourceDBLP","Conference: Combinatorial Pattern Matching, 18th Annual Symposium, CPM 2007, London, Canada, July 9-11, 2007, Proceedings"],"references":["226881522_Engineering_a_Lightweight_Suffix_Array_ConstructionAlgorithm","226093658_Engineering_a_Lightweight_Suffix_Array_Construction_Algorithm","262333012_Nearest_Common_Ancestors_A_Survey_and_a_new_Distributed_Algorithm","240026770_Handbook_of_Computational_Molecular_Biology","229067720_On-Line_Construction_of_Suffix_Trees","228057969_Algorithms_on_Stings_Trees_and_Sequences","226167918_Suffix_Trees_on_Words","225815608_Sparse_Directed_Acyclic_Word_Graphs","223345902_On-Line_Construction_of_Compact_Directed_Acyclic_Word_Graphs","223316549_The_smallest_automaton_recognizing_the_subwords_of_a_text"]}