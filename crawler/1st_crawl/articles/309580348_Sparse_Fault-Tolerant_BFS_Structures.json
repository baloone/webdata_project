{"id":"309580348_Sparse_Fault-Tolerant_BFS_Structures","abstract":"A fault-tolerant structure for a network is required for continued functioning following the failure of some of the network's edges or vertices. This article considers breadth-first search (BFS) spanning trees and addresses the problem of designing a sparse fault-tolerant BFS structure (FT-BFS structure), namely, a sparse subgraph T of the given network G such that subsequent to the failure of a single edge or vertex, the surviving part T? of T still contains a BFS spanning tree for (the surviving part of) G. For a source node s, a target node t, and an edge e ∈ G, the shortest s - t path Ps,t,e that does not go through e is known as a replacement path. Thus, our FT-BFS structure contains the collection of all replacement paths Ps,t,e for every t ∈ V (G) and every failed edge e ∈ E(G). Our main results are as follows. We present an algorithm that for every n-vertex graph G and source node s constructs a (single edge failure) FT-BFS structure rooted at s with O(n · min{Depth(s), √n}) edges, where Depth(s) is the depth of the BFS tree rooted at s. This result is complemented by a matching lower bound, showing that there exist n-vertex graphs with a source node s for which any edge (or vertex) FT-BFS structure rooted at s has Ω(n3/2) edges. We then consider fault-tolerant multi-source BFS structures (FT-MBFS structures), aiming to provide (following a failure) a BFS tree rooted at each source s ∈ S for some subset of sources S ⊆ V . Again, tight bounds are provided, showing that there exists a poly-time algorithm that for every n-vertex graph and source set S ⊆ V of size σ constructs a (single failure) FT-MBFS structure T∗(S) from each source si ∈ S, with O(√σ · n3/2) edges, and, on the other hand, there exist n-vertex graphs with source sets S ⊆ V of cardinality σ, on which any FT-MBFS structure from S has Ω(√σ · n3/2) edges. Finally, we propose an O(log n) approximation algorithm for constructing FT-BFS and FT-MBFS structures. The latter is complemented by a hardness result stating that there exists no Ω(log n) approximation algorithm for these problems under standard complexity assumptions. In comparison with previous constructions, our algorithm is deterministic and may improve the number of edges by a factor of up to √n for some instances. All our algorithms can be extended to deal with one vertex failure as well, with the same performance.","authors":["Merav Parter","David Peleg"],"meta":["October 2016ACM Transactions on Algorithms 13(1)","DOI:10.1145/2976741"],"references":["244421434_Compact_distributed_data_structures_for_adaptive_routing","230800832_Fully_Dynamic_Approximate_Distance_Oracles_for_Planar_Graphs_via_Forbidden-Set_Distance_Labels","221498316_Faster_Algorithms_for_Approximate_Distance_Oracles_and_All-Pairs_Small_Stretch_Paths","221343868_Forbidden-Set_Distance_Labels_for_Graphs_of_Bounded_Doubling_Dimension","220994903_Compact_Forbidden-Set_Routing","220780380_Region-Fault_Tolerant_Geometric_Spanners","220616857_Fault_Tolerant_Spanners_for_General_Graphs","220616744_Oracles_for_Distances_Avoiding_a_Failed_Node_or_Link","220431797_Trade-off_between_space_and_efficiency_for_routing_tables","41547048_A_Nearly_Optimal_Oracle_for_Avoiding_Failed_Vertices_and_Edges","3921143_Vickrey_prices_and_shortest_paths_What_is_an_edge_worth","2584715_New_Results_on_Fault_Tolerant_Geometric_Spanners","322744213_f-sensitivity_distance_oracles_and_routing_schemes","321521130_Approximation_Algorithms","273001794_Approximation_Algorithms","268295630_Forbidden-set_Routing","261211957_Improved_Distance_Sensitivity_Oracles_via_Fast_Single-Source_Replacement_Paths","239593861_Distributed_Computing_A_Locality-Sensitive_Approach","230595744_Approximation_Algorithms","227725251_Graph_spanners","225644726_Fault-Tolerant_Geometric_Spanners","225177720_Deterministic_Constructions_of_Approximate_Distance_Oracles_and_Spanners","221540560_As_Good_as_It_Gets_Competitive_Fault_Tolerance_in_Network_Structures","221498848_Replacement_Paths_via_Fast_Matrix_Multiplication","221343405_An_Optimal_Synchronizer_for_the_Hypercube","220897453_Fault-Tolerant_Compact_Routing_Schemes_for_General_Graphs","220617538_An_Optimal_Synchronizer_for_the_Hypercube","48198667_Fault-Tolerant_Spanners_Better_and_Simpler","2935062_Approximate_Distance_Oracles","2907921_Compact_Routing_Schemes","2428617_Efficient_Algorithms_for_Constructing_Fault-Tolerant_Geometric_Spanners","2323065_A_Threshold_of_Ln_N_for_Approximating_Set_Cover"]}