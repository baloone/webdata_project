{"id":"224646976_Head_Normal_Form_Bisimulation_for_Pairs_and_the_lambdamu-Calculus","abstract":"Bohm tree equivalence up to possibly infinite eta expansion for the pure lambda-calculus can be characterized as a bisimulation equivalence. We call this co-inductive syntactic theory extensional head normal form bisimilarity and in this paper we extend it to the lambdaFP-calculus (the lambda-calculus with functional and surjective pairing) and to two untyped variants of Parigot's lambdamu-calculus. We relate the extensional head normal form bisimulation theories for the different calculi via Fujita's extensional CPS transform into the lambdaFP-calculus. We prove that extensional hnf bisimilarity is fully abstract for the pure lambda-calculus by a co-inductive reformulation of Barendregt's proof for Bohm tree equivalence up to possibly infinite eta expansion. The proof uses the so-called Bohm-out technique from Bohm's proof of the separation property for the lambda-calculus. Moreover, we extend the full abstraction result to extensional hnf bisimilarity for the lambdaFP-calculus. For the \"standard\" lambdamu-calculus, the separation property fails, as shown by David and Py, and for the same reason extensional hnf bisimilarity is not fully abstract. However, an \"extended\" variant of the lambdamu-calculus satisfies the separation property, as shown by Saurin, and we show that extensional hnf bisimilarity is fully abstract for this extended lambdamu-calculus","authors":["S.B. Lassen"],"meta":["January 2006Proceedings - Symposium on Logic in Computer Science","DOI:10.1109/LICS.2006.29","SourceIEEE Xplore","Conference: Logic in Computer Science, 2006 21st Annual IEEE Symposium on"],"references":["242933175_Thunks_and_the_l-calculus","242529949_A_syntactic_characterization_of_the_equality_in_some_models_of_the_-calculus","225737970_A_Sound_and_Complete_CPS-Translation_for_lm-Calculus","222435677_Normal_Form_Simulation_for_McCarthy's_Amb","221442907_Continuation_Models_are_Universal_for_Lambda-Mu-Calculus","220367663_Bisimulation_in_Untyped_Lambda_Calculus","31023729_A_Syntactic_Characterization_of_the_Equality_in_Some_Models_for_the_Lambda_Calculus","3707355_Continuation_models_are_universal_for_lm-calculus","2492932_The_Lazy_Lambda_Calculus","312986265_An_Algorithmic_Interpretation_of_Classical_Natural_Deduction","298847018_Computing_with_Bohm_trees","285853442_Alcune_proprieta_delle_forme_b-e-normali_nel_l-K-calcolo","284339879_Extending_the_Extensional_Lambda_Calculus_with_Surjective_Pairing_is_Conservative","268626837_lm-calculus_and_Bohm's_theorem","257145298_On_the_semantics_of_the_call-by-name_CPS_transform","242911218_The_Relation_between_Computational_and_Denotational_Properties_for_Scott's_textD_infty_Models_of_the_Lambda-Calculus","242435377_The_Lambda_Calculus_Its_Syntax_and_Semantics","225139448_lm-Calculus_An_algorithmic_interpretation_of_classical_natural_deduction","222120495_Call-by-name_call-by-value_and_the_l-calculus","220444510_Categorical_Combinations_with_Explicit_Products","220315325_lambda_mu_-_Calculus_and_Bohm's_Theorem","220248522_Full_Abstraction_in_the_Lazy_Lambda_Calculus","29605777_Computing_with_Bohm_trees","4175493_Eager_Normal_Form_Bisimulation","4175489_Separation_with_streams_in_the_Lm-calculus","3511930_The_Lazy_Lambda_Calculus_in_a_Concurrency_Scenario","2816158_The_Lazy_Lambda_Calculus_in_a_Concurrency_Scenario","2616340_A_Curry-Howard_foundation_for_functional_computation_with_control","2490740_Thunks_and_the_Lambda-Calculus","2427398_Proving_Congruence_of_Bisimulation_in_Functional_Programming_Languages","2126120_Extending_the_Extensional_Lambda_Calculus_with_Surjective_Pairing_is_Conservative"]}