{"id":"220832207_Static_Analysis_of_Students'_Java_Programs","abstract":"A recent industry survey (Townhidnejad and Hilburn, 2002) has reported that more than fifty percent of a software project's budget is spent on activities related to improving software quality. Industry leaders claim that this is caused by the inadequate attention paid to software quality in the development phase. This paper introduces a static analysis framework which can be used to give beginning students practice in writing better quality Java programs and to assist teaching staff in the marking process. The framework uses both software engineering metrics and relative comparison to judge the quality of student's programs and provide feedback about how solutions might be improved.","authors":["Nghi Truong","Paul Roe","Peter Bancroft"],"meta":["January 2004","SourceDBLP","Conference: Sixth Australasian Computing Education Conference (ACE 2004), Dunedin, New Zealand, January 18-22, 2004"],"references":["221574039_A_Web_Based_Environment_for_Learning_to_Program","255679729_Automatic_machine_grading_programs","250888504_A_Survey_and_Critical_Analysis_of_Tools_for_Learning_Programming","242442795_Programming_and_problem_solving_with_java","235978157_Elements_Of_Software_Science","234787167_Using_metrics_to_evaluate_student_programs","234775595_Automatic_graders_for_programming_classes","223773945_An_Intelligent_Tutoring_System_for_Introductory_C_Language_Course","222949948_A_Software_System_for_Grading_Student_Computer_Programs","221537649_Assessing_the_quality_of_programs_A_topic_for_the_CS2_course"]}