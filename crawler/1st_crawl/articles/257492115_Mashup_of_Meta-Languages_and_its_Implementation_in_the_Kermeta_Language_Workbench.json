{"id":"257492115_Mashup_of_Meta-Languages_and_its_Implementation_in_the_Kermeta_Language_Workbench","abstract":"With the growing use of domain-specific languages (DSL) in industry, DSL design and implementation goes far beyond an activity for a few experts only and becomes a challenging task for thousands of software engineers. DSL implementation indeed requires engineers to care for various concerns, from abstract syntax, static semantics, behavioral semantics, to extra-functional issues such as runtime performance. This paper presents an approach that uses one metalanguage per language implementation concern. We show that the usage and combination of those metalanguages is simple and intuitive enough to deserve the term mashup. We evaluate the approach by completely implementing the non-trivial fUML modeling language, a semantically sound and executable subset of the Unified Modeling Language (UML).","authors":["Jean-Marc Jézéquel","Benoit Combemale","Olivier Barais","Martin Monperrus"],"meta":["June 2013Software and Systems Modeling 14(2)","DOI:10.1007/s10270-013-0354-4"],"references":["277129800_Domain-specific_Development_with_Visual_Studio_DSL_Tools","321061618_DSLs_In_Action","319770385_Loop_Recognition_in_C_Java_Go_Scala","318494432_Language_Modularization_and_Composition_with_Projectional_Language_Workbenches_illustrated_with_MPS","314796684_XAspects_an_extensible_system_for_domain-specific_aspect_languages","308595323_Model-driven_engineering","305261943_Centaur_The_system","294472903_The_Eclipse_Modeling_Framework","271398224_TXL_A_rapid_prototyping_system_for_programming_language_dialects","264922652_EMF_Eclipse_Modeling_Framework_20_2nd_Edition"]}