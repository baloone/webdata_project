{"id":"305744485_Symbolic_Synthesis_of_Timed_Models_with_Strict_2-Phase_Fault_Recovery","abstract":"In this article, we focus on efficient synthesis of fault-tolerant timed models from their fault-intolerant version. Although the complexity of the synthesis problem is known to be polynomial time in the size of the time-abstract bisimulation of the input model, the state of the art currently lacks synthesis algorithms that can be efficiently implemented. This is in part due to the fact that synthesis is in general a challenging problem and its complexity is significantly magnified in the context of timed systems. We propose an algorithm that takes as input a timed automaton, a set of fault actions, and a set of safety and bounded-time response properties, and utilizes a space-efficient symbolic representation of the timed automaton (called zone graph) to synthesize a fault-tolerant timed automaton as output. The output automaton satisfies strict phased recovery, where it is guaranteed that the output model behaves similarly to the input model in the absence of faults and in the presence of faults, fault recovery is achieved in two phases, each satisfying certain safety and timing constraints.","authors":["Fathiyeh Faghih","Borzoo Bonakdarpour"],"meta":["July 2016IEEE Transactions on Dependable and Secure Computing PP(99):1-1","DOI:10.1109/TDSC.2016.2596719"],"references":["281884568_Efficient_On-the-fly_Algorithms_for_the_Analysis_of_Timed_Games","259742966_Parameterized_Synthesis","239482725_Control_of_discrete_event_system","226282115_Quantitative_Synthesis_for_Concurrent_Programs","226014121_Symbolic_synthesis_of_masking_fault-tolerant_distributed_programs","221540555_Incremental_Synthesis_of_Fault-Tolerant_Real-Time_Programs","221403456_Uppaal-tiga_Time_for_playing_games","221403158_On_Synthesizing_Controllers_from_Bounded-Response_Properties","220994421_On_the_Synthesis_of_Discrete_Controllers_for_Timed_Systems_An_Extended_Abstract","220673513_Automating_the_Addition_of_Fault_Tolerance_with_Discrete_Controller_Synthesis","220404162_Synthesis_of_Fault-Tolerant_Concurrent_Programs","24304732_Better_Quality_in_Synthesis_through_Quantitative_Objectives","2940942_Lecture_Notes_in_Computer_Science","2320850_Modeling_Urgency_in_Timed_Systems","281327933_IF_An_intermediate_Representation_and_Validation_Environment_for_Timed_Asynchronous_Systems","278393840_Synthesizing_bounded-time_2-phase_fault_recovery","222488166_Sooner_is_Safer_than_Later","222450697_Defining_liveness","222437049_Using_Branching_Time_Temporal_Logic_to_Synthesize_Synchronization_Skeletons","221654905_Fault_Diagnosis_for_Timed_Automata","221568249_Symbolic_Synthesis_of_Finite-State_Controllers_for_Request-Response_Specifications","221057067_Timing_Assumptions_and_Verification_of_Finite-State_Concurrent_Systems","220898667_Simple_Linear-Time_Algorithms_for_Minimal_Fixed_Points_Extended_Abstract","2625790_Controller_Synthesis_For_Timed_Automata"]}