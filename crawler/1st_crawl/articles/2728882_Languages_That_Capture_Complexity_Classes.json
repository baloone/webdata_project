{"id":"2728882_Languages_That_Capture_Complexity_Classes","abstract":"this paper a series of languages adequate for expressing exactly those properties checkable in a series of computational complexity classes. For example, we show that a property of graphs (respectively groups, binary strings, etc.) is in polynomial time if and only if it is expressible in the first order language of graphs (respectively groups, binary strings, etc.) together with a least fixed point operator. As another example, a property is in logspace if and only if it is expressible in first order logic together with a deterministic transitive closure operator. The roots of our approach to complexity theory go back to 1974 when Fagin showed that the NP properties are exactly those expressible in second order existential sentences. It follows that second order logic expresses exactly those properties which are in the polynomial time hierarchy. We show that adding suitable transitive closure operators to second order logic results in languages capturing polynomial space and exponential time, respectively. The existence of such natural languages for each important complexity class sheds a new light on complexity theory. These languages reaffirm the importance of the complexity classes as much more than machine dependent issues. Furthermore a whole new approach is suggested. Upper bounds (algorithms) can be produced by expressing the property of interest in one of our languages. Lower bounds may be demonstrated by showing that such expression is impossible.","authors":["Neil Immerman"],"meta":["September 1996SIAM Journal on Computing 16(4)","DOI:10.1137/0216051"],"references":["242608657_Generalized_first-order_spectra_and_polynomial_time_recognizable_sets","229730586_Some_Remarks_on_Generalized_Spectra","221590198_The_Complexity_of_Relational_Query_Languages_Extended_Abstract","220997348_The_Universality_of_Data_Retrieval_Languages","220618071_Constant_Depth_Reducibility","220617323_Simulation_of_Parallel_Random_Access_Machines_by_Circuits","4354798_Random_Walks_Universal_Traversal_Sequences_and_the_Complexity_of_Maze_Problems","262329531_A_complexity_theory_based_on_Boolean_algebra","242807208_-Formulae_on_Finite_Structures","242376341_Ullman_universality_of_data_retrieval_languages","234829345_Languages_which_capture_complexity_classes","234805553_The_monotone_and_planar_circuit_value_problems_are_log_space_complete_for_P","232623693_A_complexity_theory_based_on_Boolean_algebra","225264758_Parity_circuits_and_the_polynomial-time_hierarchy","222735132_On_the_definability_of_properties_of_finite_graphs","222459053_The_polynomial_hierarchy","222441891_Structure_and_Complexity_of_Relational_Queries","222440340_Upper_and_Lower_Bounds_for_First_Order_Expressibility","222182315_Number_of_quantifiers_is_better_than_number_of_tape_cells","221590369_Symmetric_Complementation","220692379_A_Mathematical_Introduction_to_Logic","220688555_The_Design_and_Analysis_Computer_Algorithms","220618304_The_Spectra_of_First-Order_Sentences_and_Computational_Complexity","220574923_Maze_Recognizing_Automata_and_Nondeterministic_Tape_Complexity","220544064_Complexity_Classes_and_Theories_of_Finite_Models","220431245_Alternation","220155563_Symmetric_Space-Bounded_Computation","4355018_Separating_the_polynomial-time_hierarchy_by_oracles","4354753_One-way_log-tape_reductions"]}