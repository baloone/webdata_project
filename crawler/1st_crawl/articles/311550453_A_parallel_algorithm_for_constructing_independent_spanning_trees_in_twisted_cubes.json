{"id":"311550453_A_parallel_algorithm_for_constructing_independent_spanning_trees_in_twisted_cubes","abstract":"A long-standing conjecture mentions that a -connected graph admits independent spanning trees (ISTs for short) rooted at an arbitrary node of . An -dimensional twisted cube, denoted by , is a variation of hypercube with connectivity and has many features superior to those of hypercube. Yang (2010) first proposed an algorithm to construct edge-disjoint spanning trees in for any odd integer and showed that half of them are ISTs. At a later stage, Wang et al. (2012) inferred that the above conjecture in affirmative for by providing an time algorithm to construct ISTs, where is the number of nodes in . However, this algorithm is executed in a recursive fashion and thus is hard to be parallelized. In this paper, we revisit the problem of constructing ISTs in twisted cubes and present a non-recursive algorithm. Our approach can be fully parallelized to make the use of all nodes of as processors for computation in such a way that each node can determine its parent in all spanning trees directly by referring its address and tree indices in time.","authors":["Jou-ming Chang","Ting-Jyun Yang","Jinn-Shyong Yang"],"meta":["December 2016Discrete Applied Mathematics 219","DOI:10.1016/j.dam.2016.11.017"],"references":["272866087_The_Stereoscopic_Acuity_in_Patients_with_Unilateral_or_Bilateral_Visual_Field_Defects","282906972_Parallel_Construction_of_Independent_Spanning_Trees_on_Enhanced_Hypercubes","282621569_A_Fast_Parallel_Algorithm_for_Constructing_Independent_Spanning_Trees_on_Parity_Cubes","276834793_A_fully_parallelized_scheme_of_constructing_independent_spanning_trees_on_Mobius_cubes","276113619_Paths_and_cycles_identifying_vertices_in_twisted_cubes","276109032_Pruning_Longer_Branches_of_Independent_Spanning_Trees_on_Folded_Hyper-Stars","275164336_Optimal_Independent_Spanning_Trees_on_Cartesian_Product_of_Hybrid_Graphs","264719533_Three_tree-paths","263775031_A_comment_on_Independent_spanning_trees_in_crossed_cubes","223085074_Finding_nonseparating_induced_cycles_and_independent_spanning_trees_in_3-connected_graphs","222814706_Parallel_construction_of_optimal_independent_spanning_trees_on_hypercubes","222437007_Rodeh_M_The_multi-tree_approach_to_reliability_in_distributed_networks_Inform_Comput_79_43-59","222394571_On_embedding_cycles_into_faulty_twisted_cubes","222300202_Optimal_fault-tolerant_embedding_of_paths_in_twisted_cubes","222046225_Topological_Properties_of_Twisted_Cube","220758952_The_Twisted_Cube","220618379_Finding_Four_Independent_Trees","220567191_Broadcasting_secure_messages_via_optimal_independent_spanning_trees_in_folded_hypercubes","220379349_Independent_spanning_trees_on_twisted_cubes","220378998_the_Twisted_Cube_Topology_for_Multiprocessors_A_Study_in_Network_Asymmetry","220315077_Constructing_edge-disjoint_spanning_trees_in_twisted_cubes","220313683_Vertex-disjoint_spanning_trees_of_the_star_network_with_applications_to_fault-tolerance_and_security","220310720_Geodesic_pancyclicity_of_twisted_cubes","220224179_Embedding_of_Cycles_in_Twisted_Cubes_with_Edge-Pancyclic","220155212_Embedding_of_tori_and_grids_into_twisted_cubes","220151713_Constructing_edge-disjoint_spanning_trees_in_locally_twisted_cubes","220113778_Embedding_a_family_of_meshes_into_twisted_cubes","220110530_Edge-fault-tolerant_node-pancyclicity_of_twisted_cubes","3726598_Reliable_Broadcasting_and_Secure_Distributing_in_Channel_Networks","3301166_Optimal_Embeddings_of_Paths_with_Various_Lengths_in_Twisted_Cubes"]}