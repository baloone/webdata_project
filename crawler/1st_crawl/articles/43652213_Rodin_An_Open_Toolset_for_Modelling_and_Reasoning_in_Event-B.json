{"id":"43652213_Rodin_An_Open_Toolset_for_Modelling_and_Reasoning_in_Event-B","abstract":"Event-B is a formal method for system-level modelling and analysis. Key features of Event-B are the use of set theory as a modelling notation, the use of refinement to represent systems at different abstraction levels and the use of mathematical proof to verify consistency between refinement levels. In this article we present the Rodin modelling tool that seamlessly integrates modelling and proving. We outline how the Event-B language was designed to facilitate proof and how the tool has been designed to support changes to models while minimising the impact of changes on existing proofs. We outline the important features of the prover architecture and explain how well-definedness is treated. The tool is extensible and configurable so that it can be adapted more easily to different application domains and development methods.","authors":["Jean-Raymond Abrial","Michael Butler","Stefan Hallerstede","Thai Son Hoang"],"meta":["November 2010International Journal on Software Tools for Technology Transfer 12(6):447-466","DOI:10.1007/s10009-010-0145-y"],"references":["302412300_Proofs_for_the_Working_Engineer","255977544_The_Event-B_proof_obligation_generator","305260115_A_new_approach_to_program_testing","291664173_Contributing_to_Eclipse","289615670_The_challenge_of_probabilistic_Event_B_-_Extended_abstract","278646467_U2B_-_A_tool_for_translating_UML-B_models_into_B","265455944_The_B-book_Assigning_programs_to_meanings_Forewords_by_Professor_A_Hoare_and_Pierre_Chapron","257282396_Interactive_theorem_proving_and_program_development_Coq'Art_The_Calculus_of_inductive_constructions","246136237_Experience_with_Isabelle_A_Generic_Theorem_Prover","243786603_Interactive_Theorem_Proving_and_Program_Development_-_Coq''Art_The_Calculus_of_Inductive_Constructions_Texts_in_Theoretical_Computer_Science_An_EATCS_Series_Springer-Verlag"]}