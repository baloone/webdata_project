{"id":"329406943_An_integrated_practice_system_for_learning_programming_in_Python_design_and_evaluation","abstract":"Abstract Over the past decades, computer science educators have developed a multitude of interactive learning resources to support learning in various computer science domains, especially in introductory programming. While such smart content items are known to be beneficial, they are frequently offered through different login-based systems, each with its own student identification for giving credits and collecting log data. As a consequence, using more than one kind of smart learning content is rarely possible, due to overhead for both teachers and students caused by adopting and using several systems in the context of a single course. In this paper, we present a general purpose architecture for integrating multiple kinds of smart content into a single system. As a proof of this approach, we have developed the Python Grids practice system for learning Python, which integrates four kinds of smart content running on different servers across two continents. The system has been used over a whole semester in a large-scale introductory programming course to provide voluntary practice content for over 600 students. In turn, the ability to offer four kinds of content within a single system enabled us to examine the impact of using a variety of smart learning content on students’ studying behavior and learning outcomes. The results show that the majority of students who used the system were engaged with all four types of content, instead of only engaging with one or two types. Moreover, accessing multiple types of content correlated with higher course performance, as compared to using only one type of content. In addition, weekly practice with the system during the course also correlated with better overall course performance, rather than using it mainly for preparing for the course final examination. We also explored students’ motivational profiles and found that students using the system had higher levels of motivation than those who did not use the system. We discuss the implications of these findings.","authors":["Peter Brusilovsky","Lauri Malmi","Roya Hosseini","Julio Guerra"],"meta":["December 2018Research and Practice in Technology Enhanced Learning 13(1)","DOI:10.1186/s41039-018-0085-9","Projects: Worked Examples in Computer Science EducationInfrastructure for Computer Science Education"],"references":["318328248_Content_Wizard_Concept-Based_Recommender_System_for_Instructors_of_Programming_Courses","301463457_Usability_and_Usage_of_Interactive_Features_in_an_Online_Ebook_for_CS_Teachers","283281344_What_Should_I_Do_Next_Adaptive_Sequencing_in_the_Context_of_Open_Social_Student_Modeling","324656715_Predicting_Student_Performance_Based_on_Online_Study_Habits_A_Study_of_Blended_Courses","321379749_Jsvee_Kelmu_Creating_and_tailoring_program_animations_for_computing_education","314191777_Improving_online_learning_activity_interoperability_with_Acos_server","310819063_Identifying_Design_Principles_for_CS_Teacher_Ebooks_through_Design-Based_Research","300115209_Analysis_of_Interactive_Features_Designed_to_Enhance_Learning_in_an_Ebook","292996253_Animated_Examples_as_Practice_Content_in_a_Java_Programming_Course","288002914_How_Do_Students_Use_Program_Visualizations_within_an_Interactive_Ebook"]}