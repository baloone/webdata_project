{"id":"267185998_How_to_Compute_under_calACsf0_Leakage_without_Secure_Hardware","abstract":"We study the problem of computing securely in the presence of leakage on the computation’s internals. Our main result is a general compiler that compiles any algorithm P, viewed as a boolean circuit, into a functionally equivalent algorithm P′. The compiled P′ can then be run repeatedly on adversarially chosen inputs in the presence of leakage on its internals: In each execution of P′, an \\({\\cal{AC}}^{\\sf0}\\) adversary can (adaptively) choose any leakage function that can be computed in \\({\\cal{AC}}^{\\sf0}\\) and has bounded output length, apply it to the values on P′’s internal wires in that execution, and view its output. We show that no such leakage adversary can learn more than P’s input-output behavior. In particular, the internals of P are protected.\nSecurity does not rely on any secure hardware, and is proved under a computational intractability assumption regarding the hardness of computing inner products for \\({\\cal{AC}}^{\\sf0}\\) circuits with pre-processing. This new assumption has connections to long-standing open problems in complexity theory.","authors":["Guy Rothblum"],"meta":["August 2012","DOI:10.1007/978-3-642-32009-5_32"],"references":["221348095_A_Formal_Study_of_Power_Variability_Issues_and_Side-Channel_Attacks_for_Nanoscale_Devices","220336924_On_the_Impossibility_of_Obfuscating_Programs","4355093_Complexity_classes_in_communication_complexity_Theory","261455354_How_to_Compute_in_the_Presence_of_Leakage","242412005_On_the_Impossibility_of_Obfuscating_Programs_Extended_Abstract","238831383_On_the_Compressibility_of_mathcalNP_Instances_and_Cryptographic_Applications","226375948_Lower_bounds_on_the_size_of_bounded_depth_circuits_over_a_complete_basis_with_logical_addition","226226622_Lecture_Notes_in_Computer_Science","225679785_Physically_Observable_Cryptography","224354130_Leakage-Resilient_Cryptography","221591112_On_the_randomness_complexity_of_efficient_sampling","221590273_Secure_computation_with_information_leaking_to_an_adversary","221590182_Algebraic_Methods_in_the_Theory_of_Lower_Bounds_for_Boolean_Circuit_Complexity","221499438_Complexity_classes_in_communication_complexity_theory_preliminary_version","221355111_Protecting_Cryptographic_Keys_against_Continual_Leakage","221354783_Securing_Computation_against_Continuous_Leakage","221354194_Simultaneous_Hardcore_Bits_and_Cryptography_against_Memory_Attacks","221354076_Physically_Observable_Cryptography_Extended_Abstract","221348450_Protecting_Circuits_from_Leakage_the_Computationally-Bounded_and_Noisy_Cases","220336250_Overcoming_the_Hole_In_The_Bucket_Public-Key_Cryptography_Resilient_to_Continual_Memory_Leakage","220138613_On_the_Compressibility_of_NP_Instances_and_Cryptographic_Applications","4186671_On_the_impossibility_of_obfuscation_with_auxiliary_input","2750408_Lower_Bounds_for_the_Size_of_Circuits_of_Bounded_Depth_in_Basis","2578573_Differential_Power_Analysis","2415823_Private_Circuits_Securing_Hardware_against_Probing_Attacks"]}