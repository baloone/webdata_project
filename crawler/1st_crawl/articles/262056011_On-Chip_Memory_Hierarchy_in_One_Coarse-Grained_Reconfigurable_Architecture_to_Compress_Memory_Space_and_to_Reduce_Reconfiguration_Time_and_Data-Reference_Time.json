{"id":"262056011_On-Chip_Memory_Hierarchy_in_One_Coarse-Grained_Reconfigurable_Architecture_to_Compress_Memory_Space_and_to_Reduce_Reconfiguration_Time_and_Data-Reference_Time","abstract":"The coarse-grained reconfigurable architecture (CGRA) is proven to be energy efficient in several specific domains. In CGRAs, the on-chip memory hierarchy, which contains the context memory and the data memory organizations, should be well considered to achieve appropriate tradeoffs among three aspects: 1) performance; 2) area; and 3) power. In this paper, two techniques called the hierarchical configuration context (HCC) and the lifetime-based data-memory organization (LDO) focusing on the context memory and the data memory organizations are proposed to compress the on-chip memory space and to reduce the reconfiguration time and the data-reference time. In the HCC, the contexts are constructed in a hierarchical fashion to completely eliminate the repetitive portions of the contexts, not only reducing the overall context storage, but also alleviating the context transportation overhead. A fast context-indexing mechanism in the HCC is proposed to achieve fast reconfiguration, as the hierarchically organized contexts can be located and accessed conveniently. In the LDO, the on-chip data are classified into two types, based on the lifetime of data. The short-lifetime data are stored in the first in first out to increase the reuse ratio of memory space automatically, whereas the long-lifetime data are stored in the radom access memory for several time references. The HCC and the LDO are used in a CGRA core called as reconfigurable processing unit (RPU). Two RPUs are integrated in a reconfigurable computing processor (RCP) called as REconfigurable MUlti-media System, High-Performance Processor (REMUS_HPP). Because of the HCC, compared with a traditional nonhierarchical system, the total context storage required in H.264 decoding is reduced by 77%. Because of the LDO, the normalized on-chip data memory size at same performance level in the REMUS_HPP is only 23.8% and 14.8% of those in XPP-III (a high-performance RCP) and ADRES (a low-power RCP). REMUS_HPP is implemented - n a 48.9- ${rm mm}^{2}$ silicon with TSMC 65-nm technology, using a 200-MHz working frequency to achieve 1920 $,times,$ 1088 at 30 fps H.264 high-profile decoding. Compared with XPP-III, the performance of the REMUS_HPP is 1.81 $,times$ boosted, whereas the energy efficiency is 4.75 $,times$ higher.","authors":["Yansheng Wang","Leibo Liu","Shouyi Yin","Min Zhu"],"meta":["May 2014IEEE Transactions on Very Large Scale Integration (VLSI) Systems 22(5):983-994","DOI:10.1109/TVLSI.2013.2263155"],"references":["226964235_Implementation_of_a_Coarse-Grained_Reconfigurable_Media_Processor_for_AVC_Decoder","224159088_A_Heterogeneous_Digital_Signal_Processor_for_Dynamically_Reconfigurable_Computing","221340098_A_dynamically_adaptive_DSP_for_heterogeneous_reconfigurable_platforms","4290212_Dynamic_Cache_Switching_in_Reconfigurable_Embedded_Systems","3893143_A_decade_of_reconfigurable_computing_A_visionary_retrospective","224634525_A_cost-effective_context_memory_structure_for_dynamically_reconfigurable_processors","224586164_A_Self-Reconfigurable_Platform_for_Scalable_DCT_Computation_Using_Compressed_Partial_Bitstreams_and_BlockRAM_Prefetching","224056615_A_Multi-Context_Pipelined_Array_for_Embedded_Systems","221131410_Mapping_of_the_AES_cryptographic_algorithm_on_a_Coarse-Grain_reconfigurable_array_processor","220759543_H_264_Decoder_at_HD_Resolution_on_a_Coarse_Grain_Dynamically_Reconfigurable_Architecture","220238748_Parallelization_of_Computing-Intensive_Tasks_of_the_H264_High_Profile_Decoding_Algorithm_on_a_Reconfigurable_Multimedia_System","4375287_Instruction_buffer_mode_for_multi-context_Dynamically_Reconfigurable_Processors","4341732_Mapping_of_40_MHz_MIMO_SDM-OFDM_baseband_processing_on_multi-processor_SDR_platform","4216644_Mapping_a_multiple_antenna_SDM-OFDM_receiver_on_the_ADRES_coarse-grained_reconfigurable_processor","4178781_Mapping_an_H264AVC_decoder_onto_the_ADRES_reconfigurable_architecture","3420338_Splitting_the_data_cache_A_survey","3337860_Integrating_Physical_Constraints_in_HW-SW_Partitioning_for_Architectures_With_Partial_Dynamic_Reconfiguration","3044818_Implementing_an_OFDM_receiver_on_the_RaPiD_reconfigurable_architecture","2998517_Database_Optimizations_for_Modern_Hardware","2885903_The_General_Rapid_Architecture_Description","2484700_Reconfigurable_Computing_A_Survey_of_Systems_and_Software"]}