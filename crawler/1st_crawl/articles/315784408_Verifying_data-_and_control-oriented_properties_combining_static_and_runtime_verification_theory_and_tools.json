{"id":"315784408_Verifying_data-_and_control-oriented_properties_combining_static_and_runtime_verification_theory_and_tools","abstract":"Static verification techniques are used to analyse and prove properties about programs before they are executed. Many of these techniques work directly on the source code and are used to verify data-oriented properties over all possible executions. The analysis is necessarily an over-approximation as the real executions of the program are not available at analysis time. In contrast, runtime verification techniques have been extensively used for control-oriented properties, analysing the current execution path of the program in a fully automatic manner. In this article, we present a novel approach in which data-oriented and control-oriented properties may be stated in a single formalism amenable to both static and dynamic verification techniques. The specification language we present to achieve this that of ppDATEs, which enhances the control-oriented property language of DATEs, with data-oriented pre/postconditions. For runtime verification of ppDATE specifications, the language is translated into a DATE. We give a formal semantics to ppDATEs, which we use to prove the correctness of our translation from ppDATEs to DATEs. We show how ppDATE specifications can be analysed using a combination of the deductive theorem prover KeY and the runtime verification tool LARVA. Verification is performed in two steps: KeY first partially proves the data-oriented part of the specification, simplifying the specification which is then passed on to LARVA to check at runtime for the remaining parts of the specification including the control-oriented aspects. We show the applicability of our approach on two case studies.","authors":["Wolfgang Ahrendt","Jesus Mauricio Chimento","Gordon J. Pace","Gerardo Schneider"],"meta":["August 2017Formal Methods in System Design 51(2â€“3)","DOI:10.1007/s10703-017-0274-y","Project: StaRVOOrS"],"references":["308894417_StaRVOOrS_-_Episode_II","295375264_StaRVOOrS_A_Tool_for_Combined_Static_and_Runtime_Verification_of_Java","293755702_A_Specification_Language_for_Static_and_Runtime_Verification_of_Data_and_Control_Properties","321538005_Deductive_Software_Verification_-_The_KeY_Book_From_Theory_to_Practice","308347255_An_Overview_of_MarQ","296676619_Zero_Overhead_Runtime_Monitoring","291200231_jUnitRV-Adding_Runtime_Verification_to_jUnit","290141238_Combining_Testing_and_Runtime_Verification_Techniques","279352964_The_Science_of_Programming","271737416_KIV_overview_and_VerifyThis_competition"]}