{"id":"315750698_Miscomputation_in_software_Learning_to_live_with_errors","abstract":"Computer programs do not always work as expected. In fact, ominous warnings about the desperate state of the software industry continue to be released with almost ritualistic regularity. In this paper, we look at the 60 years history of programming and at the different practical methods that software community developed to live with programming errors. We do so by observing a class of students discussing different approaches to programming errors. While learning about the different methods for dealing with errors, we uncover basic assumptions that proponents of different paradigms follow. We learn about the mathematical attempt to eliminate errors through formal methods, scientific method based on testing, a way of building reliable systems through engineering methods, as well as an artistic approach to live coding that accepts errors as a creative inspiration. This way, we can explore the differences and similarities among the different paradigms. By inviting proponents of different methods into a single discussion, we hope to open potential for new thinking about errors. When should we use which of the approaches? And what can software development learn from mathematics, science, engineering and art? When programming or studying programming, we are often enclosed in small communities and we take our basic assumptions for granted. Through the discussion in this paper, we attempt to map the large and rich space of programming ideas and provide reference points for exploring, perhaps foreign, ideas that can challenge some of our assumptions.","authors":["Tomas Petricek"],"meta":["March 2017The Art Science and Engineering of Programming 1(2)","DOI:10.22152/programming-journal.org/2017/1/14"],"references":["308857081_What_is_DevOps_A_Systematic_Mapping_Study_on_Definitions_and_Practices","272294893_The_Curse_of_the_Excluded_Middle","268332734_On_Malfunctioning_Software","235917206_A_Taxonomy_of_Errors_for_Information_Systems","220997262_Run_Your_Research_On_the_Effectiveness_of_Lightweight_Mechanization","220422795_Using_the_New_ACM_Code_of_Ethics_in_Decision_Making","2449938_QuickCheck_A_Lightweight_Tool_for_Random_Testing_of_Haskell_Programs","329747894_Using_the_New_ACM_Code_of_Ethics_in_Decision_Making","318494293_The_Programming_Language_as_a_Musical_Instrument","311476196_Better_science_through_art","305389454_Institutional_Ecology_'Translations'_and_Boundary_Objects_Amateurs_and_Professionals_in_Berkeley's_Museum_of_Vertebrate_Zoology","300289277_On_the_Mathematical_Powers_of_the_Calculating_Engine","288545498_Defamiliarization_Flarf_conceptual_writing_and_using_flawed_software_tools_as_creative_partners","287219829_Technical_perspective_big_data_needs_approximate_computing","285827880_Thinking_Fast_and_Slow","278630094_The_CompCert_C_verified_compiler_Documentation_and_user's_manual","275984877_Proofs_and_Refutations_The_Logic_of_Mathematical_Discovery","273188598_Big_Data_Needs_Approximate_Computing","270187343_The_Logic_of_Scientific_Discovery","270162336_In_The_Structure_of_Scientific_Revolutions","269444381_Representing_and_Intervening_Introductory_Topics_in_the_Philosophy_of_Natural_Science","268540872_Lakatos_on_proof_and_on_mathematics","267437355_Certified_programming_with_dependent_types_A_pragmatic_introduction_to_the_Coq_proof_assistant","266955077_A_science_of_operations_Machines_logic_and_the_invention_of_programming","266316410_The_Computer_Boys_Take_Over_Computers_Programmers_and_the_Politics_of_Technical_Expertise_History_of_Computing","265776385_Proof_and_other_dilemmas_Mathematics_and_philosophy","262008066_Institutional_Ecology_Translations'_and_Boundary_Objects_Amateurs_and_Professionals_in_Berkeley's_Museum_of_Vertebrate_Zoology_1907-39","259437263_Idris_a_general-purpose_dependently_typed_programming_language_Design_and_implementation","258168790_Mechanistic_Miscomputation_a_Reply_to_Fresco_and_Primiero","248673574_Software_Craftsman_-_ship_The_New_Imperative","246750221_Making_reliable_distributed_systems_in_the_presence_of_sodware_errors","243476256_What_is_This_Thing_Called_Science","224043878_Falsification_and_the_Methodology_of_Scientific_Research_Programme","221331659_Towards_a_Mathematical_Science_of_Computation","221321312_Acceptability-oriented_computing","221268187_How_Did_Software_Get_So_Reliable_Without_Proof","221148176_Energy_Aware_Algorithm_Design_via_Probabilistic_Computing_From_Algorithms_and_Models_to_Moore's_Law_and_Novel_Semiconductor_Devices","220676549_The_view_from_the_left","220440378_Craftsmanship_versus_engineering_Computer_programming_-_An_art_or_a_science","213877944_Test_Driven_Development_By_Example","37595172_Acceptability-Oriented_Computing"]}