{"id":"258052654_Bin_Packing_and_Related_Problems_General_Arc-flow_Formulation_with_Graph_Compression","abstract":"We present an exact method, based on an arc-flow formulation with side\nconstraints, for solving bin packing and cutting stock problems --- including\nmulti-constraint variants --- by simply representing all the patterns in a very\ncompact graph. Our method includes a graph compression algorithm that usually\nreduces the size of the underlying graph substantially without weakening the\nmodel. As opposed to our method, which provides strong models, conventional\nmodels are usually highly symmetric and provide very weak lower bounds.\nOur formulation is equivalent to Gilmore and Gomory's, thus providing a very\nstrong linear relaxation. However, instead of using column-generation in an\niterative process, the method constructs a graph, where paths from the source\nto the target node represent every valid packing pattern.\nThe same method, without any problem-specific parameterization, was used to\nsolve a large variety of instances from several different cutting and packing\nproblems. In this paper, we deal with vector packing, graph coloring, bin\npacking, cutting stock, cardinality constrained bin packing, cutting stock with\ncutting knife limitation, cutting stock with binary patterns, bin packing with\nconflicts, and cutting stock with binary patterns and forbidden pairs. We\nreport computational results obtained with many benchmark test data sets, all\nof them showing a large advantage of this formulation with respect to the\ntraditional ones.","authors":["Filipe Brand√£o","Joao Pedro Pedroso"],"meta":["October 2013Computers & Operations Research","DOI:10.1016/j.cor.2015.11.009","SourcearXiv"],"references":["266478800_A_Linear_Programming_Approach_to_the_Cutting_Stock_Problem_I","265461353_A_Linear_Programming_Approach_to_the_Cutting_Stock_Problem-Part_II","259333638_Cutting_Stock_with_Binary_Patterns_Arc-flow_Formulation_with_Graph_Compression","238836618_A_New_Linear_Programming_Approach_to_the_Cutting_Stock_Problem","228701797_Bin_Packing_with_Conflicts_A_Generic_Branch-and-Price_Algorithm","220669121_Algorithms_for_the_Bin_Packing_Problem_with_Conflicts","312600697_Algorithm_457_Finding_all_cliques_of_an_undirected_graph","268534266_Valid_Inequalities_Covering_Problems_and_Discrete_Dynamic_Programs","259298225_Multiple-choice_Vector_Bin_Packing_Arc-flow_Formulation_with_Graph_Compression","250955709_Integer_Rounding_for_Polymatroid_and_Branching_Optimization_Problems","238832707_Exact_solution_of_bin-packing_problems_using_column_generation_and_branch-and-bound","232896670_The_decomposition_principle_for_linear_programs","229706937_The_Bin-Packing_Problem_A_Problem_Generator_and_Some_Numerical_Experiments_with_FFD_Packing_and_MTP","229131537_Properties_of_Some_ILP_Formulations_of_a_Class_of_Partitioning_Problems","228057735_Computers_And_Intractability_A_Guide_to_the_Theory_of_NP-Completeness","227673867_One-dimensional_relaxations_and_LP_bounds_for_orthogonal_packing","225858913_Heuristics_for_the_integer_one-dimensional_cutting_stock_problem_A_computational_study","223636040_LP_models_for_bin_packing_and_cutting_stock_problem","222815232_An_improved_typology_of_cutting_and_packing_problems","222689003_Lower_bounds_and_algorithms_for_the_2-dimensional_vector_packing_problem","222633674_BISON_A_fast_hybrid_procedure_for_exactly_solving_the_one-dimensional_bin_packing_problem","220695890_Computers_and_Intracdtability_A_Guide_to_the_Theory_of_NP-Completeness","220690835_Network_Flows_Theory_Algorithms_and_Applications","220669073_Heuristic_and_Metaheuristic_Approaches_for_a_Class_of_Two-Dimensional_Bin_Packing_Problems","220423131_Finding_All_Cliques_of_an_Undirected_Graph","200031745_Strong_NP-Completeness_Results_Motivation_Examples_and_Implications","4942586_CUTGEN1_A_problem_generator_for_the_standard_one-dimensional_cutting_stock_problem","2602866_A_Hybrid_Grouping_Genetic_Algorithm_for_Bin_Packing","2251422_Constructing_School_Timetables_Using_Simulated_Annealing_Sequential_and_Parallel_Algorithms","1960422_Improved_Results_for_a_Memory_Allocation_Problem"]}