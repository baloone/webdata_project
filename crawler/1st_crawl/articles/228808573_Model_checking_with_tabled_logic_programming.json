{"id":"228808573_Model_checking_with_tabled_logic_programming","abstract":"This article presents a tutorial overview of using Tabled Logic Programming for model check-ing finite-state systems. In this article, we mainly focus on the work done by the LMC group in Stony Brook, pointing out the relevant related works along the way. We describe a com-plete model checkers for the computation tree logic (CTL), the modal mu-calculus, the linear temporal logic (LTL) and a value-passing version of modal mu-calculus with data variables. Each of these model checkers and equivalence checkers is derived more or less directly from the semantics of the logic. We encode the semantic equations or tableau rules as a logic program and use query evaluation to answer the model checking question. We indicate optimizations and transformations of the resulting logic program that help make the model checker efficient. The model checkers derived this way, when evaluated on the XSB tabled logic programming system have shown performance that is comparable to tools built using specialized algorithms and data structures in low-level languages. We also present a short exposition on bisimulation checking for finite-state systems, to complete our tour of finite-state system verification using logic programming. Many of the techniques described here have been adapted to the verification of infinite-state systems as well, and will be described in future articles in this newletter.","authors":["C R Ramakrishnan"],"meta":[],"references":["284044719_AUTOMATA-THEORETIC_APPROACH_TO_AUTOMATIC_PROGRAM_VERIFICATION","220986961_Alternating_Fixed_Points_in_Boolean_Equation_Systems_as_Preferred_Stable_Models","2411587_Justifying_Proofs_using_Memo_Tables","246105883_Fully_local_and_efficient_evaluation_of_alternating_fixed_points","225595690_Tools_and_algorithms_for_the_construction_and_analysis_of_systems","225544261_Specification_and_verification_of_concurrent_systems_in_CESAR","225152409_XMC_A_Logic-Programming-Based_Verification_Toolset","221403655_Automated_Inductive_Verification_of_Parameterized_Protocols","220851949_Resource-Constrained_Model_Checking_of_Recursive_Programs","3656808_Efficient_on-the-fly_model_checking_for_CTL","2417960_Model_Checking_for_Timed_Logic_Processes","2396231_Transforming_a_Proof_System_into_Prolog_for_Verifying_Security_Protocols","2365917_Lecture_Notes_in_Computer_Science"]}