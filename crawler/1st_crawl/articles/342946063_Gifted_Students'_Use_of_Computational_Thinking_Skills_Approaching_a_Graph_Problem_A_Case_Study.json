{"id":"342946063_Gifted_Students'_Use_of_Computational_Thinking_Skills_Approaching_a_Graph_Problem_A_Case_Study","abstract":"Although many countries have not yet included Computational Thinking (CT) into their national school curricula, CT is an integral skill to obtain for young people in the 21st century. Key aspects of CT encompass – but are not limited to – abstraction, algorithmic thinking, debugging and generalization. In countries where teaching CT is not mandatory in K-12 education, students might acquire these skills only implicitly, for example in STEM classes.\n\nIndividually interviewing three students from a local German enrichment program for gifted school students in the field of computer science, we aimed to analyze which, if any, CT related skills can be identified in their approach to a graph problem. Their heightened interest in computer science lead us to the assumption that they would demonstrate at least basic skills in each targeted area of CT. During the interview, the students worked with a street map. They were asked a series of questions ranging from simple descriptive tasks (“What can you see in the picture?”) to complex problem-centered questions (“Can you name a strategy to find the shortest path between any two cities?”).\n\nAll three students struggled to remove unnecessary details from the map to find a more general representation, e.g. in the form of a graph. When asked to find a strategy for the shortest path, one of their first approaches was to compare all possibilities, however, they realized that this was not an efficient solution. All three participants were able to refine their first idea during the course of the interview and, to some extent, correct wrong assumptions they had made at first. At the end, one student even intuitively described a procedure resembling the steps of Dijkstra’s Algorithm. In sum, the participants demonstrated advanced skills in algorithmic thinking, debugging and generalization but only basic abstraction skills.","authors":["Sina Wetzel","Gregor Milicic","Matthias Ludwig"],"meta":["July 2020","DOI:10.21125/edulearn.2020.1797","Conference: EDULEARN 20"],"references":["334055518_Undergraduate_Students'_Solutions_of_Modeling_Problems_in_Algorithmic_Graph_Theory","312039564_Developing_Computational_Thinking_in_Compulsory_Education_Implications_for_policy_and_practice","306347785_Teaching_and_Learning_Mathematical_Modelling_Approaches_and_Developments_from_German_Speaking_Countries","282603860_Computational_thinking_in_compulsory_education_Towards_an_agenda_for_research_and_practice","339248122_Preparing_for_Life_in_a_Digital_World_IEA_International_Computer_and_Information_Literacy_Study_2018_International_Report","249752481_Reducing_Abstraction_when_Learning_Graph_Theory","247442902_Introduction_To_Algorithms","227182361_Graph_theory_in_the_elementary_school","226201914_Reducing_Abstraction_Level_When_Learning_Abstract_Algebra_Concepts","215908073_Teaching_Graph_Algorithms_with_Visage"]}