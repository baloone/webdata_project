{"id":"317869142_Enumeration_et_numeration","abstract":"Ce mémoire aborde et résout des problèmes assez différents, ayant tous trait à la numération, avec une certaine unité conceptuelle quant aux moyens mis en œuvre pour les résoudre: la théorie des automates. Nous considérons d'abord les bases entières et présentons un algorithme quasi-linéaire et structurel permettant de décider si le langage accepté par un automate donné est la représentation d'un ensemble ultimement périodique d'entiers. Ensuite, nous étudions la base rationnelle p/q et particulièrement le langage L_p/q des représentations des entiers dans cette base. Il s'agit d'un langage relativement complexe selon la théorie classique des langages formels : il ne satisfait aucune forme de lemme d’itération. Nous montrons que chaque monoïde finiment engendré est représenté par un langage aussi complexe que L_p/q. Nous prenons ensuite une perspective différente pour étudier L_p/q : à chaque entier est associé un mot infini, dit minimal, et l'on étudie la fonction qui associe le mot minimal d'un entier n à celui de son successeur (n+1) ; nous montrons en particulier que cette fonction est réalisée par un transducteur infini dont la structure est très proche de celle du langage L_p/q.Enfin, nous décrivons une manière de sérialiser les arbres infinis et les langages en des mots, appelés signatures, par le moyen d'un parcours en largeur. On remarque d'abord que les langages réguliers sont associés aux mots morphiques, ce qui rejoint le lien entre les systèmes de numération abstraits réguliers et les systèmes de numération morphiques (aussi dit de Dumont-Thomas). On traite ensuite le cas des signatures périodiques et l'on montre qu'elles sont liées aux bases rationnelles ; ceci donne également une procédure pour construire L_p/q de façon très simple. Enfin, nous définissons une transformation d'automate, la surminimisation, qui réduit le nombre d'états d'un automate au delà de ce que permet la minimisation classique ; en contrepartie, un automate et sa surminimisation n'acceptent pas le même langage, mais seulement des langages avec le même arbre ordonné sous-jacent.","authors":["Victor Marsault"],"meta":["March 2016"],"references":["285487067_Digital_sum_moments_and_substitutions","268634473_Number_representation_and_finite_automata","268552928_Representation_des_nombres_naturels_par_une_somme_de_nombres_de_Fibonacci_ou_de_nombres_de_Lucas","267003457_Systemes_de_numeration_et_fonctions_fractales_relatifs_aux_substitutions_Numeration_systems_and_fractal_functions_related_to_substitutions","265868207_Rational_base_number_systems_for_p-adic_numbers","264929373_Systems_of_Numeration","256258149_Digital_sum_problems_and_substitutions_on_a_finite_alphabet","243784753_An_nlogn_algorithm_for_minimizing_the_states_of_a_nite_automaton","242552512_Finite_Automata_and_Representation_of_Events","241636526_Systems_of_numeration","236955132_Auto-similarity_in_Rational_Base_Number_Systems","239041872_Canonical_regular_expressions_and_minimal_state_graphs_for_definite_events","237639445_Langages_formels_Calculabilite_Complexite","230876336_Gedanken-Experiments_on_Sequential_Machines","230875835_On_Formal_Properties_of_Simple_Phrase_Structure_Grammars"]}