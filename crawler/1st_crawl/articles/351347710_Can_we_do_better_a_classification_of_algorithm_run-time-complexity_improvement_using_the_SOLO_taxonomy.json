{"id":"351347710_Can_we_do_better_a_classification_of_algorithm_run-time-complexity_improvement_using_the_SOLO_taxonomy","abstract":"Improving code while preserving its functionality is a common task in the hi-tech industry. Yet students have difficulties improving an algorithm’s run-time complexity by an order of magnitude. The paper focuses on assessing students’ abilities in this area. We designed a Structure of the Observed Learning Outcome (SOLO) taxonomy, using software quality factors, to assess students’ cognitive ability while improving complexity. The research was conducted with college students studying for their bachelor’s degree in engineering. We established a classification based on their solutions for a given task. Later, we used the same task to validate our classification with another group of engineering students. We then compared the previous average grades of the second group of students with their SOLO levels. The results show that the higher the students’ previous average grades, the greater the probability that their solutions would be classified at higher taxonomic levels. These results indicate that our SOLO classification is indeed accurate. The paper presents our novel SOLO taxonomic levels for tasks improving run-time complexity and offers several suggestions to assist students and enhance the teaching process.","authors":["Lior Aronshtam","Tammar Shrot","Ronit Shmallo"],"meta":["September 2021Education and Information Technologies 26(5):1-22","DOI:10.1007/s10639-021-10532-0"],"references":["342882337_The_effect_of_computational_thinking_skill_program_design_developed_according_to_interest_driven_creator_theory_on_prospective_teachers","326918081_Towards_an_Analysis_of_Program_Complexity_From_a_Cognitive_Perspective","321481768_Students_Learning_to_Program_by_Developing_Games_Results_of_a_Year-long_Project_in_Primary_School_Settings","320507815_Investigating_high-achieving_students'_code-writing_abilities_through_the_SOLO_taxonomy","339721537_Teaching_Abstraction_in_Computer_Science_to_7th_Grade_Students","320850142_Designing_a_multi-faceted_SOLO_taxonomy_to_track_program_design_skills_through_an_entire_course","319770825_Growing_object-oriented_software_guided_by_tests","318035766_Syntax_Predicates_Idioms_-_What_Really_Affects_Code_Complexity","313099966_The_Power_of_the_Solo_Model_to_Address_Fundamental_Measurement_Issues","312181036_Iteratively_Intervening_with_the_Most_Difficult_Topics_of_an_Algorithms_and_Complexity_Course","310792373_Analyzing_students'_software_redesign_strategies","307569213_A_Study_of_Code_Design_Skills_in_Novice_Programmers_using_the_SOLO_taxonomy","306152131_Comparing_internal_and_external_software_quality_measurements","294733933_How_Difficult_Are_Novice_Code_Writing_Tasks_A_Software_Metrics_Approach","284825981_Beyond_traditional_literacy_Learning_and_transformative_practices_using_ICT"]}