{"id":"337401411_Combinatorial_n-fold_integer_programming_and_applications","abstract":"Many fundamental \\(\\mathsf {NP}\\)-hard problems can be formulated as integer linear programs (ILPs). A famous algorithm by Lenstra solves ILPs in time that is exponential only in the dimension of the program, and polynomial in the size of the ILP. That algorithm became a ubiquitous tool in the design of fixed-parameter algorithms for \\(\\mathsf {NP}\\)-hard problems, where one wishes to isolate the hardness of a problem by some parameter. However, in many cases using Lenstra’s algorithm has two drawbacks: First, the run time of the resulting algorithms is often double-exponential in the parameter, and second, an ILP formulation in small dimension cannot easily express problems involving many different costs. Inspired by the work of Hemmecke et al. (Math Program 137(1–2, Ser. A):325–341, 2013), we develop a single-exponential algorithm for so-called combinatorialn-fold integer programs, which are remarkably similar to prior ILP formulations for various problems, but unlike them, also allow variable dimension. We then apply our algorithm to many relevant problems problems like Closest String, Swap Bribery, Weighted Set Multicover, and several others, and obtain exponential speedups in the dependence on the respective parameters, the input size, or both. Unlike Lenstra’s algorithm, which is essentially a bounded search tree algorithm, our result uses the technique of augmenting steps. At its heart is a deep result stating that in combinatorial n-fold IPs, existence of an augmenting step implies existence of a “local” augmenting step, which can be found using dynamic programming. Our results provide an important insight into many problems by showing that they exhibit this phenomenon, and highlights the importance of augmentation techniques.","authors":["Dusan Knop","Martin Koutecký","Matthias Mnich"],"meta":["November 2019Mathematical Programming 184(39)","DOI:10.1007/s10107-019-01402-2"],"references":["326592454_Parameterized_complexity_of_machine_scheduling_15_open_problems","323747023_On_Integer_Programming_and_Convolution","323257086_A_Parameterized_Strongly_Polynomial_Algorithm_for_Block_Structured_Integer_Programs","320763296_Simplified_Algorithmic_Metatheorems_Beyond_MSO_Treewidth_and_Neighborhood_Diversity","317101064_Combinatorial_n-fold_Integer_Programming_and_Applications","301839252_Scheduling_meets_n-fold_Integer_Programming","301648404_About_the_Structure_of_the_Integer_Cone_and_its_Application_to_Bin_Packing","270883320_Multivariate_Algorithmics_for_NP-Hard_String_Problems","258566684_Scheduling_Meets_Fixed-Parameter_Tractability","255787103_Parameterized_Algorithms_for_Modular-Width","250613759_Polynomiality_for_Bin_Packing_with_a_Constant_Number_of_Item_Types","228325311_Graver_basis_and_proximity_techniques_for_block-structured_separableconvex_integer_minimization_problems","226240465_Swap_Bribery","226139858_Lecture_Notes_in_Computer_Science","221580069_Why_Large_Closest_String_Instances_Are_Easy_to_Solve_in_Practice","221543071_Graph_Layout_Problems_Parameterized_by_Vertex_Cover","221530317_More_Efficient_Algorithms_for_Closest_String_and_Substring_Problems","344846036_Scheduling_and_fixed-parameter_tractability","342373569_Voting_and_Bribing_in_Single-Exponential_Time","323276634_Faster_Algorithms_for_Integer_Programs_with_Block_Structure","322320058_The_Complexity_Landscape_of_Decompositional_Parameters_for_ILP","322219952_Proximity_results_and_faster_algorithms_for_Integer_Programming_using_the_Steinitz_Lemma","318121229_Proximity_Results_and_Faster_Algorithms_for_Integer_Programming_Using_the_Steinitz_Lemma","316823782_Algorithms_and_Combinatorics","315597033_Parameterized_complexity_of_distance_labeling_and_uniform_channel_assignment_problems","313903170_Parameterized_Algorithms","312077614_About_the_Structure_of_the_Integer_Cone_and_its_Application_to_Bin_Packing","303753419_On_polynomial_kernels_for_sparse_integer_linear_programs","300551264_Elections_with_Few_Candidates_Prices_Weights_and_Covering_Problems","300155038_Advanced_kernelization_algorithms","299546832_A_Polynomial-Time_Descent_Method_for_Separable_Convex_Optimization_Problems_with_Linear_Constraints","283471530_Parameterized_Integer_Quadratic_Programming_Variables_and_Coefficients","279310040_A_Structural_Approach_to_Kernels_for_ILPs_Treewidth_and_Total_Unimodularity","270515170_Huge_Unimodular_N-Fold_Programs","267663990_On_the_Efficiency_of_the_Hamming_C-Centerstring_Problems","267440218_Parameterized_Complexity_Analysis_for_the_Closest_String_with_Wildcards_Problem","266009692_Nonlinear_discrete_optimization_An_algorithmic_theory","265883425_Enumerating_Neighbour_and_Closest_Strings","264924560_A_Multivariate_Complexity_Analysis_of_Lobbying_in_Multiple_Referenda","263773671_Parameterized_Algorithmics_for_Computational_Social_Choice_Nine_Research_Challenges","262361792_Enumerative_Lattice_Algorithms_in_Any_Norm_via_M-Ellipsoid_Coverings","262108642_Huge_Multiway_Table_Problems","246835147_Minkowski's_Convex_Body_Theorem_and_Integer_Programming","243774146_Condorcet_Social_Choice_Functions","242438198_Algebraic_and_Geometric_Ideas_in_the_Theory_of_Discrete_Optimization","239694037_Some_String_Problems_in_Computational_Biology","235601912_On_Polynomial_Kernels_for_Sparse_Integer_Linear_Programs","227103434_On_Covering_Problems_of_Codes","225104327_Algorithmic_Meta-theorems_for_Restrictions_of_Treewidth","222657536_Distinguishing_String_Selection_Problems","220992943_Multivariate_Complexity_Analysis_of_Swap_Bribery","221220008_A_Linear-Time_Algorithm_for_the_1-Mismatch_Problem","220617250_Closest_Substring_Problems_with_Small_Distances","220483310_Algorithms_for_Temperature-Aware_Task_Scheduling_in_Microprocessor_Systems","220431358_Convex_Separable_Optimization_Is_Not_Much_Harder_than_Linear_Optimization"]}