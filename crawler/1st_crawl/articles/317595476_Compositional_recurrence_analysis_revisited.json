{"id":"317595476_Compositional_recurrence_analysis_revisited","abstract":"Compositional recurrence analysis (CRA) is a static-analysis method based on a combination of symbolic analysis and abstract interpretation. This paper addresses the problem of creating a context-sensitive interprocedural version of CRA that handles recursive procedures. The problem is non-trivial because there is an âimpedance mismatchâ between CRA, which relies on analysis techniques based on regular languages (i.e., Tarjanâs path-expression method), and the context-free-language underpinnings of context-sensitive analysis.\nWe show how to address this impedance mismatch by augmenting the CRA abstract domain with additional operations. We call the resulting algorithm Interprocedural CRA (ICRA). Our experiments with ICRA show that it has broad overall strength compared with several state-of-the-art software model checkers.","authors":["Zachary Kincaid","Jason Breck","Ashkan Forouhi Boroujeni","Thomas William Reps"],"meta":["June 2017","DOI:10.1145/3062341.3062373","Conference: the 38th ACM SIGPLAN Conference"],"references":["303698409_Newtonian_program_analysis_via_tensor_product","302196610_Underapproximation_of_procedure_summaries_for_integer_programs","301819252_Munchausen_Iteration","264674666_Abstract_Acceleration_in_Linear_Relation_Analysis","258247646_Abstract_Acceleration_of_General_Linear_Loops","225574570_Reducing_Concurrent_Analysis_Under_a_Context_Bound_to_Sequential_Analysis","225142568_Z3_an_efficient_SMT_solver","222503071_A_Direct_Symbolic_Approach_to_Model_Checking_Pushdown_Systems_Extended_Abstract","221403556_Improving_Pushdown_System_Model_Checking","221027009_Loop_Summarization_Using_Abstract_Transformers","220997507_Abstract_Interpretation_A_Unified_Lattice_Model_for_Static_Analysis_of_Programs_by_Construction_or_Approximation_of_Fixpoints","220851990_Interprocedural_Analysis_of_Concurrent_Programs_Under_a_Context_Bound","220752401_The_Reachability-Bound_Problem","220431044_Newtonian_Program_Analysis","31025186_Regular_Algebra_Applied_to_Path-finding_Problems","2946139_Reachability_Analysis_of_Pushdown_Automata_Application_to_Model-Checking","2813026_Path_Problems_in_Graphs","2534894_Automatic_Discovery_of_Linear_Restraints_Among_Variables_of_a_Program","336939896_Ultimate_Automizer_with_SMTInterpol","319857986_Compositional_recurrence_analysis_revisited","315598610_Newtonian_Program_Analysis_via_Tensor_Product","306113046_Compositional_recurrence_analysis","300651111_The_SeaHorn_Verification_Framework","282485063_Compositional_Certified_Resource_Bounds","281768852_Program_Analysis_with_Local_Policy_Iteration","268433585_Amortized_Resource_Analysis","267555249_Loop_Leaping_with_Closures","266193429_Graphs_Dioids_and_Semirings_New_Models_and_Algorithms","262171509_Ultimate_Automizer_with_SMTInterpol","243785971_An_Algebra_for_Network_Routing_Problems","222506415_Program_analysis_via_graph_reachability","222193909_Weighted_Pushdown_Systems_and_Their_Application_to_Interprocedural_Dataflow_Analysis","221477155_Accelerated_Data-Flow_Analysis","220997413_SPEED_Precise_and_Efficient_Static_Estimation_of_Program_Computational_Complexity","220997408_A_Unified_Approach_to_Global_Program_Optimization","220566293_Elimination_Algorithms_for_Data_Flow_Analysis","220430565_Fast_Algorithms_for_Solving_Path_Problems","220369074_A_direct_symbolic_approach_to_model_checking_pushdown_systems","213893922_Two_approaches_to_interprocedural_data_flow_analysis","23962329_CPAchecker_A_Tool_for_Configurable_Software_Verification"]}