{"id":"285203223_Move_Based_Algorithm_for_Runtime_Mapping_of_Dataflow_Actors_on_Heterogeneous_MPSoCs","abstract":"Considering the evolution towards highly variable data flow applications based on an increasing impact of dynamic actors, we must target at runtime the best matching between dataflow graphs and heterogeneous multiprocessor platforms. Thus the mapping must be dynamically adapted depending on data and on communication loads between the computation cores. This is typically the case for mobile devices that run multimedia applications. The problem of mapping a dataflow application, e.g. a network of computational actors, on a multiprocessor platform can be modeled as a problem of partitioning where the cells are the dataflow actors and the partitions are the processors. While the benefit of executing a computational part by one processor rather than another one is usually well shown, the migration overhead is also usually not considered. This paper presents a dynamic mapping algorithm that is performed at runtime, based on a single-move possibility that jointly considers the cost and benefit of possible migrations. The method is first applied on a set of randomly generated benchmarks with different features and different scenarios. Then it is applied to a MPEG4 simple profile video decoder with different input sequences. The results systematically show that the runtime mapping significantly improves the initial mapping. It is fast enough to be executed at runtime in order to track the best mapping according to data variations. The other observation is that not considering the migration cost of the new mapping could lead to worst performance than the original one.","authors":["Thanh Dinh Ngo","Kevin J. M. Martin","Jean-Philippe Diguet"],"meta":["April 2017Journal of Signal Processing Systems 87(1)","DOI:10.1007/s11265-015-1088-z"],"references":["278798185_Classification-Based_Optimization_of_Dynamic_Dataflow_Programs","276315839_A_Hybrid_Task_Mapping_Algorithm_for_Heterogeneous_MPSoCs","273477304_Embedded_Multi-Core_Systems_Dedicated_to_Dynamic_Dataflow_Programs","313192135_Exploring_trade-offs_in_buffer_requirements_and_throughput_constraints_for_synchronous_dataflow_graphs","287847159_Practical_Problems_in_VLSI_Physical_Design_Automation","281184377_From_dataflow-based_video_coding_tools_to_dedicated_embedded_multi-core_platforms","280752056_Communication-model_based_Embedded_Mapping_of_Dataflow_Actors_on_Heterogeneous_MPSoC","264585073_Dynamic_task_mapping_for_MPSoCs","262247263_Accelerating_Throughput-Aware_Runtime_Mapping_for_Heterogeneous_MPSoCs","262215710_Mapping_on_multimany-core_systems_Survey_of_current_and_emerging_trends","261687455_Scenario-Based_Design_Flow_for_Mapping_Streaming_Applications_onto_On-Chip_Many-Core_Systems","261499807_A_scenario-based_run-time_task_mapping_algorithm_for_MPSoCs","261084886_Efficient_run-time_resource_management_of_a_manycore_accelerator_for_stream-based_applications","260585546_An_Iterative_Computational_Technique_for_Performance_Evaluation_of_Networks-on-Chip","260541961_MAPS_Mapping_Concurrent_Dataflow_Applications_to_Heterogeneous_MPSoCs"]}