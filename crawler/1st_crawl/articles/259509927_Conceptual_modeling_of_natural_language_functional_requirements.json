{"id":"259509927_Conceptual_modeling_of_natural_language_functional_requirements","abstract":"Requirements analysts consider a conceptual model to be an important artifact created during the requirements analysis phase of a software development life cycle (SDLC). A conceptual, or domain model is a visual model of the requirements domain in focus. Owing to its visual nature, the model serves as a platform for the deliberation of requirements by stakeholders and enables requirements analysts to further refine the functional requirements. Conceptual models may evolve into class diagrams during the design and execution phases of the software project. Even a partially automated conceptual model can save significant time during the requirements phase, by quickening the process of graphical communication and visualization.\nThis paper presents a system to create a conceptual model from functional specifications, written in natural language in an automated manner. Classes and relationships are automatically identified from the functional specifications. This identification is based on the analysis of the grammatical constructs of sentences, and on Object Oriented principles of design. Extended entity-relationship (EER) notations are incorporated into the class relationships. Optimizations are applied to the identified entities during a post-processing stage, and the final conceptual model is rendered.\nThe use of typed dependencies, combined with rules to derive class relationships offers a granular approach to the extraction of the design elements in the model. The paper illustrates the model creation process using a standard case study, and concludes with an evaluation of the usefulness of this approach for the requirements analysis. The analysis is conducted against both standard published models and conceptual models created by humans, for various evaluation parameters.","authors":["Vidhu Bhala Vidya Sagar","Abirami Murugappan"],"meta":["February 2014Journal of Systems and Software 88(1):25â€“41","DOI:10.1016/j.jss.2013.08.036"],"references":["30508781_Graphviz_-_Open_Source_Graph_Drawing_Tools","3246958_Understanding_Quality_in_Conceptual_Modeling_IEEE_Software_11242-49","280113549_Speech_and_Language_Processing","254036307_Effective_visualization_of_conceptual_class_diagrams","234799022_Applying_OMT_A_Practical_Step-by-Step_Guide_to_Using_the_Object_Modeling_Technique","234125556_Elements_of_UML_20_Style","232616142_Extracting_Software_Functional_Requirements_from_Free_Text_Documents","229032267_A_systematic_review_of_transformation_approaches_between_user_requirements_and_analysis_models","224197792_A_requirement_framework_for_enablement_of_automatic_generation_of_domain_model","222712640_Applying_UML_and_Patterns_An_Introduction_to_Object-Oriented_Analysis_and_Design_and_Iterative_Development","220695893_Object-Oriented_Modeling_And_Design","220631556_Object-Oriented_Analysis_and_Design_with_Applications","220377175_Parsed_use_case_descriptions_as_a_basis_for_object-oriented_class_model_generation","220136158_On_the_Systematic_Analysis_of_Natural_Language_Requirements_with_CIRCE"]}