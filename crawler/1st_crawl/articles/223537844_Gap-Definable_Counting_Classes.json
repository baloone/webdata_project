{"id":"223537844_Gap-Definable_Counting_Classes","abstract":"The function class #P lacks an important closure property: it is not closed under subtraction. To remedy this problem, we introduce the function class GapP as a natural alternative to #P. GapP is the closure of #P under subtraction and has all the other useful closure properties of #P as well. We show that most previously studied counting classes, including PP, C=P, and ModkP, are “gap-definable,” i.e., definable using the values of GapP functions alone. We show that there is a smallest gap-definable class, SPP, which is still large enough to contain Few. We also show that SPP consists of exactly those languages low for GapP, and thus SPP languages are low for any gap-definable class. These results unify and improve earlier disparate results of J. Cai and L. Hemachandra (Math. Systems Theory23, No. 2 (1990), 95–106) and J. Köbler et al. (J. Comput. System Sci.44, No. 2 (1992), 272–286). We show further that any countable collection of languages is contained in a unique minimum gap-definable class, which implies that the gap-definable classes form a lattice under inclusion. Subtraction seems necessary for this result, since nothing similar is known for the #P-definable classes.","authors":["Stephen A. Fenner","Lance Fortnow","Stuart A. Kurtz"],"meta":["February 1994Journal of Computer and System Sciences 48(1):116-148","DOI:10.1016/S0022-0000(05)80024-8","SourceCiteSeer"],"references":["226508658_On_counting_and_approximation","220467792_Arithmetization_A_New_Method_in_Structural_Complexity_Theory","29529590_Graph_isomorphism_is_low_for_PP","2683427_Gap-Definability_as_a_Closure_Property","318520494_Turing_machines_with_few_accepting_computations_and_low_sets_for_PP","267552124_Applications_of_Kolmogorov_Complexity_to_Graphs","247931082_Introduction_to_automata_theory_languages_and_computation_-_2_ed","243734199_Computational_complexity_of_probabilistic_complexity_classes","242445277_Recursively_Enumerable_Sets_and_Degrees","235426683_Counting_Classes_Are_at_Least_as_Hard_as_the_Polynomial-Time_Hierarchy","228057764_Introduction_To_Automata_Theory_Languages_And_Computation","228057693_Concrete_Mathematics","226136842_On_the_power_of_parity_polynomial_time","225795414_Counting_classes_Thresholds_parity_mods_and_fewness","225725972_On_the_power_of_parity_polynomial_time","223088917_PP_Is_Closed_under_Intersection","222808307_The_Complexity_of_Computing_the_Permanent","222459053_The_polynomial_hierarchy","222451183_Probabilistic_complexity_classes_and_lowness","220995279_Counting_Classes_Thresholds_Parity_Mods_and_Fewness","220854895_Two_remarks_on_the_power_of_counting","220694144_Strukturelle_Komplexitat_von_Anzahlproblemen","220616368_PP_is_as_Hard_as_the_Polynomial-Time_Hierarchy","220268326_Computational_Complexity_of_Probabilistic_Turing_Machines","220197737_The_Complexity_of_Combinatorial_Problems_with_Succinct_Input_Representation","220152867_On_the_Construction_of_Parallel_Computers_from_Various_Bases_of_Boolean_Functions","35207567_On_some_central_problems_in_computational_complexity","30874399_The_Theory_of_Recursive_Functions_and_Effective_Computability","3514124_Perceptrons_PP_and_the_polynomial_hierarchy","3509290_Counting_Classes_are_at_Least_as_Hard_as_the_Polynomial-Time_Hierarchy","3509281_A_complexity_theory_for_feasible_closure_properties","3509275_The_power_of_witness_reduction","3501871_On_the_computational_power_of_PP_and_P","3501229_Turing_Machines_With_Few_Accepting_Computations_And_Low_Sets_For_PP","2364487_Gap-Definability_as_a_Closure_Property","2324019_Graph_Isomorphism_Is_Low_For_Pp"]}