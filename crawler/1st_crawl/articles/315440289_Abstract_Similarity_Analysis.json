{"id":"315440289_Abstract_Similarity_Analysis","abstract":"Code similarity is an important component of program analysis that finds application in many fields of computer science. Graph based representations of programs, such as control flow graphs and dependency graphs, are often used as a basis for deciding code similarity. Indeed, many similarity algorithms observe particular properties of these graph-based representations of programs in order to decide whether two programs are similar or not. In this work we propose a general framework for similarity analysis where the similarity of programs is expressed in terms of abstractions of their control flow graphs representation. In particular, we consider abstractions of the basic blocks of a control flow graph.","authors":["Mila Dalla Preda","Vanessa Vidali"],"meta":["March 2017Electronic Notes in Theoretical Computer Science 331:87-99","DOI:10.1016/j.entcs.2017.02.006"],"references":["266654613_Measuring_similarity_of_android_applications_via_reversing_and_K-gram_birthmarking","243479478_Abstract_interpretation_a_unified_framework_for_static_analysis_of_programs_by_construclion_of_approximation_of_fixpoints","221394377_Detecting_Self-mutating_Malware_Using_Control-Flow_Graph_Matching","313661341_Effects_of_code_obfuscation_on_android_app_similarity_analysis","298850080_Using_slicing_to_identify_duplication_in_source_code","284043515_Polymorphic_worm_detection_using_structural_information_of_executables","282795226_Abstract_Symbolic_Automata_Mixed_syntacticsemantic_similarity_analysis_of_executables","262158457_Fast_location_of_similar_code_fragments_using_semantic_'juice'","228328445_MOSS_A_System_for_Detecting_Software_Plagiarism","222488987_Authorship_analysis_Identifying_the_author_of_a_program"]}