{"id":"282925970_Test_case_generation_and_prioritization_based_on_UML_behavioral_models","abstract":"Test case prioritization (TCP) techniques have been proven to be beneficial for improving testing activities. Prioritized test suites are found using different techniques of prioritization. While code coverage based prioritization techniques are found to be used by most scholars, test case prioritization based on UML behavioral models has not been given much attention so far. We propose a novel approach for generating and prioritizing test cases using UML sequence and interaction overview diagrams. First, we convert the interaction overview diagram to interaction Graph (IG) and sequence diagram to Message Sequence Dependency Graph (MSDG). An intermediate graph known as Sequence Interaction Graph (SIG) is generated by combining MSDG and IG. From SIG, we generate the test scenarios and subsequently the test cases. For test case prioritization, the first task is to convert the SIG into another graph known as Dependency Graph (DG). Then, we assign weights to each node of the DG according to its impact using backward slices and based on condition criticality. Further, we calculate the weights of each basic path. According to these weights, finally, we prioritize the test cases. We have used the impact, complexity and criticality of the elements present in the model for the prioritization of test cases. The results obtained by our approach indicates that the proposed technique is efficient and effective in prioritizing (ordering) the test cases using UML models. Our proposed approach achieves higher Average Percentage of Fault Detection (APFD) compared to other related approaches.","authors":["A.K. Jena","S.K. Swain","Durga Prasad Mohapatra"],"meta":["August 2015Journal of Theoretical and Applied Information Technology 78(3):336-352"],"references":["220166288_An_Overview_of_Slicing_Techniques_for_Object-Oriented_Programs","262315186_Prioritize_Code_for_Testing_to_Improve_Code_Coverage_of_Complex_Software","224586980_Prioritization_of_Scenarios_Based_on_UML_Activity_Diagrams","223868670_Conditioned_program_slicing","222953507_Code-coverage_guided_prioritized_test_generation","221307522_Test_Prioritization_Using_System_Models","221307486_Using_the_Case-Based_Ranking_Methodology_for_Test_Case_Prioritization","221268332_Model-Based_Testing_in_Practice","221027735_Test_Case_Prioritization_Using_Relevant_Slices","220516172_System_testing_for_object-oriented_systems_with_test_case_prioritization","3895397_Incorporating_varying_test_costs_and_fault_severities_into_test_case_prioritization","3188187_Prioritizing_test_cases_for_regression_testing","2348071_Prioritizing_Test_Cases_for_Regression_Testing"]}