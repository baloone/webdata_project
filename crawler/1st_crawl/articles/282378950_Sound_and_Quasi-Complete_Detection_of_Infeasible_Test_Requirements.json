{"id":"282378950_Sound_and_Quasi-Complete_Detection_of_Infeasible_Test_Requirements","abstract":"In software testing, coverage criteria specify the requirements to be covered by the test cases. However, in practice such criteria are limited due to the well-known infeasibility problem, which concerns elements/requirements that cannot be covered by any test case. To deal with this issue we revisit and improve state-of-the-art static analysis techniques, such as Value Analysis and Weakest Precondition calculus. We propose a lightweight greybox scheme for combining these two techniques in a complementary way. In particular we focus on detecting infeasible test requirements in an automatic and sound way for condition coverage, multiple condition coverage and weak mutation testing criteria. Experimental results show that our method is capable of detecting almost all the infeasible test requirements, 95% on average, in a reasonable amount of time, i.e., less than 40 seconds, making it practical for unit testing.","authors":["Sébastien Bardin","Mickaël Delahaye","Robin David","Nikolai Kosmatov"],"meta":["May 2015","DOI:10.1109/ICST.2015.7102607","Project: Ltest: a Criterion-Independant White-Box Testing Toolbox"],"references":["281584658_Trivial_Compiler_Equivalence_A_Large_Scale_Empirical_Study_of_a_Simple_Fast_and_Effective_Equivalent_Mutant_Detection_Technique","279773187_Overcoming_the_Equivalent_Mutant_Problem_A_Systematic_Literature_Review_and_a_Comparative_Experiment_of_Second_Order_Mutation","279063667_MuJava_A_Mutation_System_for_Java","269305034_Efficient_Leveraging_of_Symbolic_Execution_to_Advanced_Coverage_Criteria","268212797_An_All-in-One_Toolkit_for_Automated_White-Box_Testing","266656267_A_study_of_equivalent_and_stubborn_mutation_operators_using_human_analysis_of_equivalence","316985252_A_Study_of_Equivalent_and_Stubborn_Mutation_Operators_using_Human_Analysis_of_Equivalence","278646722_CUTE","267455849_Mitigating_the_effects_of_equivalent_mutants_with_mutant_classification_strategies","264487477_Covering_and_Uncovering_Equivalent_Mutants"]}