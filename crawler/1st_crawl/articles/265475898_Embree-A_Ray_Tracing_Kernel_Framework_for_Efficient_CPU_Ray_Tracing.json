{"id":"265475898_Embree-A_Ray_Tracing_Kernel_Framework_for_Efficient_CPU_Ray_Tracing","abstract":"We describe Embree, an open source ray tracing framework for x86 CPUs. Embree is explicitly designed to achieve high performance in professional rendering environments in which complex geometry and incoherent ray distributions are common. Embree consists of a set of low-level kernels that maximize utilization of modern CPU architectures, and an API which enables these kernels to be used in existing renderers with minimal programmer effort. In this paper, we describe the design goals and software architecture of Embree, and show that for secondary rays in particular, the performance of Embree is competitive with (and often higher than) existing state-of-the-art methods on CPUs and GPUs.","authors":["Ingo Wald","Sven Woop","Carsten Benthin","Gregory S. Johnson"],"meta":["August 2014ACM Transactions on Graphics 33(4)","DOI:10.1145/2601097.2601199","Conference: ACM SIGGRAPH 2014"],"references":["243785155_A_Flexible_and_Scalable_Rendering_Engine_for_Interactive_3D_Graphics","243134376_Multi-Level_Ray_Tracing_Algorithm","227653438_Fast_BVH_construction_on_gpus","288492333_OptiX","266436696_An_Introduction_to_Ray_Tracing","265110515_ispc_A_SPMD_Compiler_for_High-_Performance_CPU_Programming","262312981_Megakernels_considered_harmful_Wavefront_path_tracing_on_GPUs","262216722_Fast_parallel_construction_of_high-quality_bounding_volume_hierarchies","261095337_ispc_A_SPMD_compiler_for_high-performance_CPU_programming","232618536_Optimizing_Ray-Triangle_Intersection_via_Automated_Search","221248962_Efficient_Ray_Traced_Soft_Shadows_using_Multi-Frusta_Tracing","220800174_Distributed_Interactive_Ray_Tracing_of_Dynamic_Scenes","221249082_Understanding_the_Efficiency_of_Ray_Traversal_on_GPUs","221249070_MSBVH_An_Efficient_Acceleration_Data_Structure_for_Ray_Traced_Motion_Blur","221248997_Spatial_splits_in_bounding_volume_hierarchies"]}