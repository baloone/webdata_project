{"id":"280039741_Parallel_Image_Gradient_Extraction_Core_For_FPGA-based_Smart_Cameras","abstract":"One of the biggest efforts in designing pervasive Smart Camera Networks (SCNs) is the implementation of complex and\ncomputationally intensive computer vision algorithms on resource constrained embedded devices. For low-level processing FPGA devices are excellent candidates because they support massive and fine grain data parallelism with high data\nthroughput. However, if FPGAs offers a way to meet the\nstringent constraints of real-time execution, their exploitation often require significant algorithmic reformulations.\nIn this paper, we propose a reformulation of a kernel-based\ngradient computation module specially suited to FPGA implementations. This resulting algorithm operates on-the-fly,\nwithout the need of video buffers and delivers a constant\nthroughput. It has been tested and used as the first stage of\nan application performing extraction of Histograms of Oriented Gradients (HOG). Evaluation shows that its performance and low memory requirement perfectly matches low\ncost and memory constrained embedded devices.","authors":["Luca Maggiani","Cédric Bourrasset","François Berry","Jocelyn Sérot"],"meta":["September 2015","DOI:10.1145/2789116.2789139","Conference: ACM Int. Conference on Distributed Smart CameraAt: Sevilla"],"references":["265397119_Reconfigurable_architecture_for_computing_histograms_in_real-time_tailored_to_FPGA-based_smart_camera","261285146_FPGA-based_Real-Time_Pedestrian_Detection_on_High-Resolution_Images","257743954_A_Survey_on_Various_Edge_Detector_Techniques","243763293_SVMLight_Support_Vector_Machine","319770820_Histograms_of_Oriented_Gradients_for_Human_Detection","281327886_Histograms_of_Oriented_Gradients_for_Human_Detection","262212408_Recognizing_actions_using_depth_motion_maps-based_histograms_of_oriented_gradients","261484850_Architectural_Study_of_HOG_Feature_Extraction_Processor_for_Real-Time_Object_Detection","257132055_SVM-Light_Support_Vector_Machine","247927761_The_CORDIC_computing_technique"]}