{"id":"220071223_The_Domain_Theory_for_Requirements_Engineering","abstract":"Retrieval, validation, and explanation tools are described for\ncooperative assistance during requirements engineering and are\nillustrated by a library system case study. Generic models of\napplications are reused as templates for modeling and critiquing\nrequirements for new applications. The validation tools depend on a\nmatching process which takes facts describing a new application and\nretrieves the appropriate generic model from the system library. The\nalgorithms of the matcher, which implement a computational theory of\nanalogical structure matching, are described. A theory of domain\nknowledge is proposed to define the semantics and composition of generic\ndomain models in the context of requirements engineering. A modeling\nlanguage and a library of models arranged in families of classes are\ndescribed. The models represent the basic transaction processing or `use\ncase' for a class of applications. Critical difference rules are given\nto distinguish between families and hierarchical levels. Related work\nand future directions of the domain theory are discussed","authors":["Alistair G. Sutcliffe","Neil A. M. Maiden"],"meta":["March 1998IEEE Transactions on Software Engineering 24(3):174-196","DOI:10.1109/32.667878","SourceDBLP"],"references":["250261116_ConceptBase_V31_User_Manual","242366361_Basic_Objects_in_Natural_Categories","271018597_Women_Fire_and_Dangerous_Things","270819375_Expertise_in_problem_solving","265340290_Conceptual_structures_information_processing_in_mind_and_machine","247746766_The_Adaptive_Character_of_Thought","244437488_A_Translation_Approach_to_Portable_Ontology_Specifications","243771900_Handling_conflict_between_domain_descriptions_with_computer-supported_negotiation1_2","242530285_Notes_on_a_schema_for_stories","240197867_Prototype_classification_and_logical_classification_The_two_systems"]}