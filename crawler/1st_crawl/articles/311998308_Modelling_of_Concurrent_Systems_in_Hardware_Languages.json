{"id":"311998308_Modelling_of_Concurrent_Systems_in_Hardware_Languages","abstract":"The modelling\ntechniques of the concurrent control systems in hardware description languages (HDLs) are presented in this chapter. Two modelling approaches are shown. The first one includes the traditional modelling concept of the concurrent system specified by an interpreted Petri net. The controller is simply described according to its behavior. Particular states (markings) of the system change due to the transitions firings. There is no decomposition nor division of the system into sub-modules. Therefore, there is no possibility of further partial reconfiguration of the prototyped controller. The second technique involves decomposition of the concurrent control system. Each of the achieved components is modelled separately as a sequential automaton (such as an FSM), however proper synchronization ought to be assured. The modular concept benefits in the possibility of the further partial reconfiguration (either static or dynamic) of the system (cf. Chap. 9).","authors":["Remigiusz Wi≈õniewski"],"meta":["January 2017","DOI:10.1007/978-3-319-45811-3_8","In book: Prototyping of Concurrent Control Systems Implemented in FPGA Devices (pp.117-137)"],"references":["261837911_Implementation_of_Algorithm_of_Petri_Nets_Distributed_Synthesis_into_FPGA","261096396_An_FPGA_Synthesis_of_the_Distributed_Control_Systems_Designed_with_Petri_Nets","4219150_A_Design_and_Validation_System_for_Asynchronous_Circuits","3867432_Concurrent_control_systems_From_Grafcet_to_VHDL","321617704_Hardware_Design_and_Petri_Nets","290346291_Specification_of_UML_24_hierarchical_state_machine_and_its_computer_based_implementation_by_means_of_verilog","286475916_Evolution_of_Programmable_Logic","285381748_Introduction_to_Petri_Nets","281598365_Synthesis_of_Compositional_Microprogram_Control_Unitsfor_Programmable_Devices","281598128_Synthesis_of_compositional_microprogram_control_units_for_programmable_devices","271477763_Petri_net_decomposition_approach_for_partial_reconfiguration_of_logic_controllers","259463146_Petri_Net_Dynamic_Partial_Reconfiguration_in_FPGA","251287484_Synthesis_of_control_units_with_field-programmable_logic_devices","243769298_Verilog_HDLDA_Guide_to_Digital_Design_and_Synthesis","230876336_Gedanken-Experiments_on_Sequential_Machines","224307553_From_Petri_net_models_to_VHDL_implementation_of_digital_controllers","220696440_Logic_Synthesis_for_FSM-Based_Control_Units","220692430_The_Verilog_Hardware_Description_Language","220055444_Area_and_speed_oriented_synthesis_of_FSMs_for_PAL-based_CPLDs","37534798_Digital_System_Design_with_VHDL","31761985_Fundamentals_of_Digital_Logic_with_VHDL_Design_SD_Brown_ZG_Vranesic","3844098_Automated_synthesis_of_micro-pipelines_from_behavioral_Verilog_HDL","2420892_Hardware_Design_And_Petri_Nets"]}