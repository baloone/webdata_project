{"id":"221431021_Assurance_Cases_in_Model-Driven_Development_of_the_Pacemaker_Software","abstract":"We discuss the construction of an assurance case for the pacemaker software. The software is developed following a model-based\ntechnique that combined formal modeling of the system, systematic code generation from the formal model, and measurement of\ntiming behavior of the implementation. We show how the structure of the assurance case reflects our development approach.","authors":["Eunkyoung Jee","Insup Lee","Oleg Sokolsky"],"meta":["October 2010Lecture Notes in Computer Science 6416:343-356","DOI:10.1007/978-3-642-16561-0_33","SourceDBLP","Conference: Leveraging Applications of Formal Methods, Verification, and Validation - 4th International Symposium on Leveraging Applications, ISoLA 2010, Heraklion, Crete, Greece, October 18-21, 2010, Proceedings, Part II","Project: Assurance Case"],"references":["235196260_Towards_an_Assurance_Case_Practice_for_Medical_Device","228990118_The_goal_structuring_notation-a_safety_argument_notation","221541337_Software_Certification_Is_There_a_Case_against_Safety_Cases","221224338_A_Tutorial_on_Uppaal","286143357_AiT_Worst-case_execution_time_prediction_by_static_program_analysis","245212506_Adelard_Safety_Case_Development_Manual","238850985_Semiflows_with_global_extensions","222001554_Lecture_Notes_in_Computer_Science","220673328_Code_Synthesis_for_Timed_Automata","46299391_aiT_Worst-Case_Execution_Time_Prediction_by_Static_Program_Analysis"]}