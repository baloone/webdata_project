{"id":"282925483_Probabilistic_termination_Soundness_completeness_and_compositionality","abstract":"We propose a framework to prove almost sure termination for probabilistic programs with real valued variables. It is based on ranking supermartingales, a notion analogous to ranking functions on nonprobabilistic programs. The framework is proven sound and complete for a meaningful class of programs involving randomization and bounded nondeterminism. We complement this foundational insight by a practical proof methodology, based on sound conditions that enable compositional reasoning and are amenable to a direct implementation using modern theorem provers. This is integrated in a small dependent type system, to overcome the problem that lexicographic ranking functions fail when combined with randomization. Among others, this compositional methodology enables the verification of probabilistic programs outside the complete class that admits ranking supermartingales. Copyright","authors":["L.M.F. Fioriti","H. Hermanns"],"meta":["January 2015Conference Record of the Annual ACM Symposium on Principles of Programming Languages 2015:489-501","DOI:10.1145/2676726.2677001"],"references":["262318310_Ramsey_vs_Lexicographic_Termination_Proving","262208025_PRINSYS_on_a_quest_for_probabilistic_loop_invariants","257563490_Analyzing_probabilistic_pushdown_automata","227273905_Proving_Positive_Almost-Sure_Termination","225141692_Termination_Analysis_with_Compositional_Transition_Invariants","224014351_Proving_Termination_of_Probabilistic_Programs_Using_Patterns","221477569_An_Abstract_Analysis_of_the_Probabilistic_Termination_of_Programs","221477532_Linear-Invariant_Generation_for_Probabilistic_Programs_Automated_Support_for_Proof-Based_Methods","221403538_Linear_Ranking_with_Reachability","220997744_Variance_analyses_from_invariance_analyses","220898499_The_Polyranking_Principle","220896170_The_Dependency_Pair_Framework_Combining_Techniques_for_Automated_Termination_Proofs","220654086_Abstraction_and_refinement_in_probabilistic_systems","2454160_The_Size-Change_Principle_for_Program_Termination","2378274_A_General_Framework_for_Automatic_Termination_Analysis_of_Logic_Programs","304628693_Operational_versus_weakest_pre-expectation_semantics_for_the_probabilistic_guarded_command_language","277065078_Probabilistic_Non-Determinism","266657651_Slicing_Probabilistic_Programs","266657500_Probabilistic_programming","266066629_Competitive_Markov_Decision_Processes","261843926_Probabilistic_Program_Analysis_with_Martingales","259510432_Operational_Versus_Weakest_Precondition_Semantics_for_the_Probabilistic_Guarded_Command_Language","247931359_Probability_with_Martingales","242502673_Assigning_Meanings_to_Programs","225899236_Synthesis_of_Linear_Ranking_Functions","222460459_Semantics_of_probabilistic_programs","221559481_Termination_Detection_in_Logic_Programs_using_Argument_Sizes","221551051_A_Complete_Method_for_the_Synthesis_of_Linear_Ranking_Functions","221336485_Induction_for_Positive_Almost_Sure_Termination","220933771_Proving_Termination_One_Loop_at_a_Time","220852114_Synthesis_of_Linear_Ranking_Functions","220617639_Concurrent_Probabilistic_Programs_Or_How_to_Schedule_If_You_Must","220404262_Termination_of_Probabilistic_Concurrent_Program","220198446_A_Closer_Look_at_Termination","47861473_A_Complete_Method_for_the_Synthesis_of_Linear_Ranking_Functions","38367374_On_Stochastic_Matrices_Associated_with_Certain_Queueing_Processes","4085197_Transition_invariants"]}