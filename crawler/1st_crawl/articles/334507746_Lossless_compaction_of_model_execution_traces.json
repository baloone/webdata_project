{"id":"334507746_Lossless_compaction_of_model_execution_traces","abstract":"Dynamic verification and validation (V&V) techniques are used to verify and validate the behavior of software systems early in the development process. In the context of model-driven engineering, such behaviors are usually defined using executable domain-specific modeling languages (xDSML). Many V&V techniques rely on execution traces to represent and analyze the behavior of executable models. Traces, however, tend to be overwhelmingly large, hindering effective and efficient analysis of their content. While there exist several trace metamodels to represent execution traces, most of them suffer from scalability problems. In this paper, we present a generic compact trace representation format called generic compact trace metamodel (CTM) that enables the construction and manipulation of compact execution traces of executable models. CTM is generic in the sense that it supports a wide range of xDSMLs. We evaluate CTM on traces obtained from real-world fUML models. Compared to existing trace metamodels, the results show a significant reduction in memory and disk consumption. Moreover, CTM offers a common structure with the aim to facilitate interoperability between existing trace analysis tools.","authors":["Fazilat Hojaji","Bahman Zamani","Abdelwahab Hamou-Lhadj","Tanja Mayerhofer"],"meta":["January 2020Software and Systems Modeling 19(1)","DOI:10.1007/s10270-019-00737-w","Project: Model Execution Tracing"],"references":["331176640_Model_execution_tracing_a_systematic_mapping_study","324417098_Execution_of_UML_models_a_systematic_review_of_research_and_practice","321030770_Omniscient_Debugging_for_Executable_DSLs","320891282_Discovering_More_Precise_Process_Models_from_Event_Logs_by_Filtering_Out_Chaotic_Activities","320299262_How_to_Efficiently_Build_a_Front-End_Tool_for_UPPAAL_A_Model-Driven_Approach","319198685_Event_Abstraction_for_Process_Mining_Using_Supervised_Learning_Techniques","318041923_Analyzing_Complex_Data_in_Motion_at_Scale_with_Temporal_Graphs","317212286_Advanced_and_efficient_execution_trace_management_for_executable_domain-specific_modeling_languages","315737187_ProMoBox_A_Framework_for_Generating_Domain-Specific_Property_Languages","315953486_Model-Driven_Software_Engineering_in_Practice_Second_Edition","312416419_Towards_a_tracing_framework_for_Model-Driven_software_systems","308901511_Execution_framework_of_the_GEMOC_studio_tool_demo","308008689_Analyzing_execution_traces_critical-path_analysis_and_distance_analysis","313755129_Abstractions_in_process_mining_A_taxonomy_of_patterns","309496277_Verifying_Linear_Temporal_Logic_Properties_in_UMLOCL_Class_Diagrams_Using_Filmstripping"]}