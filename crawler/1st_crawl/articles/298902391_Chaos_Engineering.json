{"id":"298902391_Chaos_Engineering","abstract":"Modern software-based services are implemented as distributed systems with complex behavior and failure modes. Many large tech organizations are using experimentation to verify such systems' reliability. Netflix engineers call this approach chaos engineering. They've determined several principles underlying it and have used it to run experiments. This article is part of a theme issue on DevOps.","authors":["Ali Basiri","Niosha Behnam","Ruud de Rooij","Lorin Hochstein"],"meta":["January 2016IEEE Software 33(3):1-1","DOI:10.1109/MS.2016.60"],"references":["278273603_Resilience_Engineering_Learning_to_Embrace_Failure","266722925_Simple_Testing_Can_Prevent_Most_Critical_Failures_---_An_Analysis_of_Production_Failures_in_Distributed_Data-intensive_Systems","309050324_Simple_testing_can_prevent_most_critical_failures_An_analysis_of_production_failures_in_distributed_data-intensive_systems","246137624_Experimental_and_Quasi-Experimental_Designs_For_Generalized_Causal_Inference","220960900_Why_Do_Computers_Stop_and_What_Can_Be_Done_About_It","51993098_Quasi-Experimental_Designs_for_Generalized_Causal_Inference"]}