{"id":"313096723_Approximate_String_Matching_Theory_and_Applications_La_Recherche_Approch'ee_de_Motifs_Th'eorie_et_Applications","abstract":"The approximate string matching is a fundamental and recurrent problem that arises in most computer science fields. This problem can be defined as follows: Let $D=\\{x_1,x_2,\\ldots x_d\\}$ be a set of $d$ words defined on an alphabet $\\Sigma$, let $q$ be a query defined also on $\\Sigma$, and let $k$ be a positive integer. We want to build a data structure on $D$ capable of answering the following query: find all words in $D$ that are at most different from the query word $q$ with $k$ errors. In this thesis, we study the approximate string matching methods in dictionaries, texts, and indexes, to propose practical methods that solve this problem efficiently. We explore this problem in three complementary directions: 1) The approximate string matching in the dictionary. We propose two solutions to this problem, the first one uses hash tables for $k \\geq 2$, the second uses the Trie and reverse Trie, and it is restricted to (k = 1). The two solutions are adaptable, without loss of performance, to the approximate string matching in a text. 2) The approximate string matching for \\textit{autocompletion}, which is, find all suffixes of a given prefix that may contain errors. We give a new solution better in practice than all the previous proposed solutions. 3) The problem of the alignment of biological sequences can be interpreted as an approximate string matching problem. We propose a solution for peers and multiple sequences alignment. \\medskip All the results obtained showed that our algorithms, give the best performance on sets of practical data (benchmark from the real world). All our methods are proposed as libraries, and they are published online.","authors":["Ibrahim Chegrane"],"meta":["January 2017","Project: Approximate String Matching: Theory and Applications"],"references":["319394814_Algorithms_on_strings_trees_and_sequences_computer_science_and_computational_biology","312600900_A_New_Approach_to_Text_Searching","308730647_DNA_multiple_alignment_problem_with_the_new_DiaWay_algorithm","303167148_CLUSTAL_W_Improving_the_sensitivity_of_progressive_multiple_sequence_alignment_through_sequence_weighting_position-specific_gap_penalties_and_weight_matrix_choice","302558561_Graphs_and_Hypergraphs","292692829_Wunsch_A_general_method_applicable_to_the_search_for_similarities_in_the_amino_acid_sequence_of_two_proteins","292020261_Introduction_to_Algorithms","290055316_An_Introduction_to_Parallel_Programming","284650481_Improved_Tools_for_Biological_Sequence_Comparison","284283936_Diagonal_Consistency_Problem_Resolution_in_DIALIGN_Algorithm","281657889_The_inputoutput_complexity_of_sorting_and_related_problems","281234447_Multiple_string_matching_on_a_GPU_using_CUDA","280750899_Plasma_un_nouvel_algorithme_progressif_pour_l'alignement_multiple_de_sequences","282204052_Approximate_dictionary_queries","280300442_Dynamic_Programming_and_Lagrange_Multipliers"]}