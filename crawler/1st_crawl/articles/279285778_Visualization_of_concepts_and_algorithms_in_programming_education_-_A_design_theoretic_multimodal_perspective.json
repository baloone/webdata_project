{"id":"279285778_Visualization_of_concepts_and_algorithms_in_programming_education_-_A_design_theoretic_multimodal_perspective","abstract":"Programming is an important core subject in most Computer science programmes at university level but many students have difficulties to learn the necessary combination of knowledge and skills. Code concepts and algorithms are abstract and dynamic entities, where teachers face problems with the transfer of theoretical concepts as well as with the explanation of more practical programming techniques. Software visualization with the multimodal combination of graphical, audial and textual representations aims to facilitate learning and understanding of programming. Software visualization can further be divided into program visualization and algorithm visualization. This study presents a design theoretic multimodal approach where software visualization is introduced and evaluated as an extra communication channel between teachers and students in programming courses. Two visualization prototypes have been designed and developed for evaluation in lectures for an experimental group. Data has been gathered by handing out questionnaires to students in the experimental group and to students in a control group. Both groups had attended the same lecture setup, with identical learning content but only the experimental group had access to the multimodal program visualization and algorithm visualization prototypes. 85% in the experimental group and 62% in the control group stated that they did understand where the focus of the code executing was all through the prototype for algorithm visualization. For the other prototype, visualizing object‐oriented concepts, 60% in the experimental group and 54% in the control group stated that they understood where the focus of the code executing was all through the multimodal animation. Findings indicate that programming lecturing using multimodal explanations as additional learning tools is a promising path to enhance programming education in the 21 st century. Guided by multimodal design theory, we can better understand how appropriate activities for novice student's learning of programming concepts should be implemented. A problem with the evaluated prototypes that was identified is focus overload during execution of object‐oriented animations. One possible solution to address this issue might be to divide the object visualization into two parts, where one is dealing with concepts and the other is illustrating dynamics.","authors":["Marie Olsson","Peter Mozelius"],"meta":["June 2015","Conference: ICEL 2015, 10th International Conference on e-LearningAt: Nassau, Bahamas"],"references":["234811464_Visual_programming_programming_by_example_and_program_visualization_A_taxonomy","228774613_Novice_programming_students'_learning_of_concepts_and_practise","220586589_Visualizing_Roles_of_Variables_in_Program_Animation","220422224_Why_Looking_Isn't_Always_Seeing_Readership_Skills_and_Graphical_Programming","289921573_Multimodality_A_Social_Semiotic_Approach_to_Contemporary_Communication","280832329_Design_for_larande_-_ett_multimodalt_perspektiv","222408779_A_Meta-Study_of_Algorithm_Visualization_Effectiveness","220578937_A_Principled_Taxonomy_of_Software_Visualization","42425502_The_fundamental_design_issues_of_Jeliot_3","2954247_Taxonomy_of_program_visualization_systems"]}