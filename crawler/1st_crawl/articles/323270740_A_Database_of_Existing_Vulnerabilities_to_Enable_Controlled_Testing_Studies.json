{"id":"323270740_A_Database_of_Existing_Vulnerabilities_to_Enable_Controlled_Testing_Studies","abstract":"From holding worldwide companies' information hostage to keeping several distributed systems down for hours, the last years were marked by several security attacks which are the result of complex software and its fast production. There are already tools which can be used to help companies detect vulnerabilities responsible for such attacks. However, their reliability is still not the best and well discriminated. In software testing, researchers tend to use hand-seeded test cases or mutations due to the challenges involved in the extraction or reproduction of real test cases which might not be suitable for testing techniques, since both approaches can create samples that inadvertently differ from the real vulnerabilities and thus might lead to misleading assessments of the tools' capabilities. The lack of databases of real security vulnerabilities is an issue since it hampers the tools' evaluation and categorization. To study these tools, the researchers created a database of 682 real test cases which is the outcome of mining 248 repositories for 16 different vulnerability patterns.","authors":["Sofia Rei","Rui Abreu"],"meta":["July 2017International Journal of Secure Software Engineering 8(3):1-23","DOI:10.4018/IJSSE.2017070101"],"references":["277664637_Are_Mutants_a_Valid_Substitute_for_Real_Faults_in_Software_Testing","266659285_Defects4J_a_database_of_existing_faults_to_enable_controlled_testing_studies_for_Java_programs","220631552_Empirical_studies_of_software_testing_techniques_Challenges_practical_strategies_and_future_research","318575147_Evaluating_and_Improving_Fault_Localization","282461509_On_the_capability_of_static_code_analysis_to_detect_security_vulnerabilities","220277799_Supporting_Controlled_Experimentation_with_Testing_Techniques_An_Infrastructure_and_its_Potential_Impact","4279016_A_Critical_Analysis_of_Empirical_Research_in_Software_Testing"]}