{"id":"321481768_Students_Learning_to_Program_by_Developing_Games_Results_of_a_Year-long_Project_in_Primary_School_Settings","abstract":"Aim/Purpose: The purpose of this study was to examine whether the authoring of computer games in a mainstream primary school setting can support the learning of game design and programming concepts.\n\nBackground: Despite the benefits for students when they learn how to program and the significant body of research regarding this matter, these benefits are still under debate, and the teaching of programming has a relatively undeveloped pedagogy. With this in mind, a project was designed and implemented, having constructionism as its theoretical framework. Also, Microsoft’s Kodu Game Lab was used for the development of students’ games.\n\nMethodology: The project lasted for almost a school year (fifty two-hour sessions) and the target group was fifth-grade students (ages 10-11). A total of 138 students participated, coming from five schools in Athens, Greece. Students were divided into three groups. While all groups worked in pairs, to the first there was no teachers’ guidance, to the second there was limited teachers’ guidance, and to the third, a combination of teacher-led and pair work was used. Each group developed three games of escalating complexity and a total of 207 games were analyzed. Data were collected by analyzing students’ games and with a short questionnaire.\n\nContribution: The study contributes to the debate surrounding the pedagogy of computer game authoring as a tool for teaching programming. That is because few studies have examined the above in mainstream settings, having as a target group primary school students. Furthermore, the present study is in contrast to most studies which involved intensive research projects, since it lasted for almost a school year.\n\nFindings: It was found that the most commonly used programming concept was conditions, followed by variables and loops, while Boolean logic and functions were the least used ones. The most problematic concepts proved to be Boolean logic and loops, closely followed by functions. The least problematic concepts were conditions and variables. Also, the number of programming concepts that were used was increasing in each game, while the errors were decreasing. All in all, students’ final games fall into the relational level according to a modified version of the SOLO taxonomy.\nWhile the findings indicated that, as well as learning some basic programming concepts, students enjoyed the activity and demonstrated positive attitudes to learning programming by developing games; it was also found that the teaching method did not have any effect on the learning outcomes nor in their views for game authoring.\n\nRecommendations for Practitioners: Extended projects can be considered for teaching programming to primary school students, using visual programming tools that allow the development of games. The classes’ teachers can undertake the task to teach programming if they are properly trained. The SOLO taxonomy can be used for assessing students’ games.\n\nFuture Research: Future studies can examine a variety of game-like programming environments and the target group can be older or younger students. The assessment of students’ games is also an interesting topic. Finally, research can be conducted by using other devices and compare the results.","authors":["Emmanuel Fokides"],"meta":["December 2017Journal of Information Technology Education:Research 16(1):475-505","DOI:10.28945/3893","Project: Digital educational games and serious games"],"references":["324720733_Redefining_the_framework_for_teaching_programming_to_primary_school_students","315117288_Increasing_self-efficacy_in_learning_to_program_exploring_the_benefits_of_explicit_instruction_for_problem_solving","344836617_GameMath_Embedding_Secondary_Mathematics_into_a_Game-making_Curriculum","338743979_Teaching_Computational_Thinking_and_Coding_in_Primary_Schools","321275099_Research_design_qualitative_quantitative_and_mixed_methods_approaches","317953571_Qualitative_inquiry_research_design_Choosing_among_five_approaches","317953561_Mind_in_society_The_development_of_higher_psychological_processes","313139940_Constructivist_Computer_Science_Education_Reconstructed","311473849_Analyzing_CS_competencies_using_the_SOLO_taxonomy","302989325_Consequences_offailuretomeetassumptionsunderlying_thefixed_effects_analyses_of_variance_and_covariance","294733475_Going_SOLO_to_assess_novice_programmers","298972479_Learning_Computer_Science_Concepts_with_Scratch","283190988_Narrative_Threads_A_Tool_to_Support_Young_People_in_Creating_Their_Own_Narrative-Based_Computer_Games","282748526_Integrating_computational_thinking_across_the_K-8_curriculum","279910364_The_Auxiliary_Role_of_Information_Technology_in_Teaching_Enhancing_Programming_Course_Using_Alice"]}