{"id":"350129183_Conceptual_Framework_for_Programming_Skills_Development_Based_on_Microlearning_and_Automated_Source_Code_Evaluation_in_Virtual_Learning_Environment","abstract":"Understanding how software works and writing a program are currently frequent requirements when hiring employees. The complexity of learning programming often results in educational failures, student frustration and lack of motivation, because different students prefer different learning paths. Although e-learning courses have led to many improvements in the methodology and the supporting technology for more effective programming learning, misunderstanding of programming principles is one of the main reasons for students leaving school early. Universities face a challenging task: how to harmonise students’ education, focusing on advanced knowledge in the development of software applications, with students’ education in cases where writing code is a new skill. The article proposes a conceptual framework focused on the comprehensive training of future programmers using microlearning and automatic evaluation of source codes to achieve immediate feedback for students. This framework is designed to involve students in the software development of virtual learning environment software that will provide their education, thus ensuring the sustainability of the environment in line with modern development trends. The paper’s final part is devoted to verifying the contribution of the presented elements through quantitative research on the introductory parts of the framework. It turned out that although the application of interactive features did not lead to significant measurable progress during the first semester of study, it significantly improved the results of students in subsequent courses focused on advanced programming.","authors":["Ján Skalka","Martin Drlík","Ľubomír Benko","Jozef Kapusta"],"meta":["March 2021Sustainability 13(6):3293","DOI:10.3390/su13063293","Project: FITPED - Work-Based Learning in Future IT Professionals Education (Erasmus+ Programme)"],"references":["354342713_Tri-Lua_Using_Gamification_as_Support_Learning_Programming_Language","347424956_Java_fundamental","347129317_Enhancing_Students'_Ability_in_Learning_Process_of_Programming_Language_using_Adaptive_Learning_Systems_A_Literature_Review","344227884_Automated_Assessment_in_Programming_Courses_A_Case_Study_during_the_COVID-19_Era","342582889_Automated_Assessment_and_Microlearning_Units_as_Predictors_of_At-Risk_Students_and_Students'_Outcomes_in_the_Introductory_Programming_Courses","338945122_The_Conceptual_Framework_of_Online_Problem-Based_Learning_Towards_Problem-Solving_Ability_and_Programming_Skills","336413265_Effect_of_an_Instructor-Centered_Tool_for_Automatic_Assessment_of_Programming_Assignments_on_Students'_Perceptions_and_Performance","334401054_Results_of_Pilot_Study_into_the_Application_of_MicroLearning_in_Teaching_the_Subject_Computer_Architecture_and_Operating_System_Basics","335324085_Cooperative_Thinking_Analyzing_a_New_Framework_for_Software_Engineering_Education","334781989_Learning_Design_and_Technology_in_South_Korea_a_Report_on_the_AECT-_Korean_Society_for_Educational_Technology_KSET_Panel_Discussion"]}