{"id":"326840117_Key_issues_of_low-level_parallel_programming_in_the_individual_projects_for_graduate_students","abstract":"This paper presents the research project based methodology of teaching parallel programming to master’s students in a High Performance Computing program. The requirements for completing a master’s degree state that all students should be able to develop computer simulation programs using parallel and distributed computing technologies, regardless of students’ background and their preferences for in-depth study of high or low-level programming, administration, and information security. Creating computer simulations based on high-performance computing is impossible without the experience of solving such key issues of low-level parallel programming as the data flow management, synchronization, load balancing and fault tolerance. We believe that the best way to explore these issues is phased implementation of appropriate algorithms in the application, and then carrying out computational experiments. Therefore, as a main tool for the practical study, we offer the implementation of special project tasks. While developing the course tasks, we have used not only our teaching experience of parallel programming for undergraduate and graduate students, but we also relied on the existing practice of the development of distributed computing systems. In addition to the classic tasks, students explored pairing algorithms, load balancing and fault tolerance through implementation in distributed applications and testing in computational experiments. Our experience has shown that this approach to teaching parallel programming, which includes modeling and simulations, enabled students to proceed gradually from classic tasks to the implementation of full-scale research projects.","authors":["I. Zakharova","A. Zakharov"],"meta":["January 2018International Journal of Engineering Education 34(4):1250-1260"],"references":[]}