{"id":"261028741_Analysing_Student_Programs_in_the_PHP_Intelligent_Tutoring_System","abstract":"Programming is a subject that many beginning students find difficult. The PHP Intelligent Tutoring System (PHP ITS) has been designed with the aim of making it easier for novices to learn the PHP language in order to develop dynamic web pages. Programming requires practice. This makes it necessary to include practical exercises in any ITS that supports students learning to program. The PHP ITS works by providing exercises for students to solve and then providing feedback based on their solutions. The major challenge here is to be able to identify many semantically equivalent solutions to a single exercise. The PHP ITS achieves this by using theories of Artificial Intelligence (AI) including first-order predicate logic and classical and hierarchical planning to model the subject matter taught by the system. This paper highlights the approach taken by the PHP ITS to analyse studentsâ€™ programs that include a number of program constructs that are used by beginners of web development. The PHP ITS was built using this model and evaluated in a unit at the Queensland University of Technology. The results showed that it was capable of correctly analysing over 96 % of the solutions to exercises supplied by students.","authors":["Dinesha Weragama","Jim Reye"],"meta":["June 2014International Journal of Artificial Intelligence in Education 24(2)","DOI:10.1007/s40593-014-0014-z"],"references":["240948260_Befriending_Computer_Programming_A_Proposed_Approach_to_Teaching_Introductory_Programming","236345709_Program_Representation_for_Automatic_Hint_Generation_for_a_Data-Driven_Novice_Programming_Tutor","221574039_A_Web_Based_Environment_for_Learning_to_Program","221413311_Knowledge_Representation_Requirements_for_Intelligent_Tutoring_Systems","220117738_Constraint-based_knowledge_representation_for_individualized_instruction","215835935_Cognitive_Tutors_Lessons_Learned","38319356_J-Latte_a_Constraint-Based_Tutor_for_Java","29487431_Fidelity_and_Efficiency_of_Knowledge_Representations_for_Intelligent_Tutoring_Systems","26557161_Developing_an_Intelligent_Tutoring_System_For_Students_Learning_To_Program_in_C","2348090_Granularity_in_Reverse_Engineering","290628811_The_PHP_Intelligent_Tutoring_System","284340561_Cognitive_tutors_Lessons_learned","262409470_Design_of_a_Knowledge_Base_to_Teach_Programming","262291613_A_Canonicalizing_Model_for_Building_Programming_Tutors","262177928_Designing_the_Knowledge_Base_for_a_PHP_Tutor","260790396_Developmental_Process_Model_for_the_Java_Intelligent_Tutoring_System","242503038_User_Modeling_2001_8th_International_Conference_UM_2001_Sonthofen_Germany_July_13-17_2001_Proceedings","233897052_Interaction_Between_Learning_and_Development","228522178_Towards_Automatic_Hint_Generation_for_a_Data-Driven_Novice_Programming_Tutor","226150456_Automatic_debugging_of_Prolog_programs_in_a_Prolog_Intelligent_Tutoring_System","225268682_Learning_Prolog_in_a_schema-based_environment","223773945_An_Intelligent_Tutoring_System_for_Introductory_C_Language_Course","223543341_Guided_programming_and_automated_error_analysis_in_an_intelligent_Prolog_tutor","222469385_Granularity_hierarchies","221413474_Student_Modeling_and_Mastery_Learning_in_a_Computer-Based_Proramming_Tutor","221260759_Cognitive_Computer_Tutors_Solving_the_Two-Sigma_Problem","220545771_Understanding_and_Debugging_Novice_Programs_ABSTRACT","220541858_Automatic_Program_Debugging_for_Intelligent_Tutoring_Systems","220377003_An_empirical_study_of_iteration_in_applications_software","35052798_Intelligent_tutoring_system","32229638_Student_Modelling_based_on_Belief_Networks","27481707_Learning_to_Program_in_a_Web_Environment","3188683_PROUST_Knowledge-based_program_understanding"]}