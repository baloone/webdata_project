{"id":"318380670_Automatically_Repairing_Web_Application_Firewalls_Based_on_Successful_SQL_Injection_Attacks","abstract":"Testing and fixing WAFs are two relevant and complementary challenges for security analysts. Automated testing helps to cost-effectively detect vulnerabilities in a WAF by generating effective test cases, i.e., attacks. Once vulnerabilities have been identified, the WAF needs to be fixed by augmenting its rule set to filter attacks without blocking legitimate requests. However, existing research suggests that rule sets are very difficult to understand and too complex to be manually fixed. In this paper, we formalise the problem of fixing vulnerable WAFs as a combinatorial optimisation problem. To solve it, we propose an automated approach that combines machine learning with multi-objective genetic algorithms. Given a set of legitimate requests and bypassing SQL injection attacks, our approach automatically infers regular expressions that, when added to the WAF's rule set, prevent many attacks while letting legitimate requests go through. Our empirical evaluation based on both open-source and proprietary waf shows that the generated filter rules are effective at blocking previously identified and successful SQL injection attacks (recall between 54.6% and 98.3%), while triggering in most cases no or few false positives (false positive rate between 0% and 2%).","authors":["Dennis Appelt","Annibale Panichella","Lionel Briand"],"meta":["October 2017","DOI:10.1109/ISSRE.2017.28","Conference: IEEE International Symposium on Software Reliability Engineering (ISSRE)At: Toulouse, France"],"references":["311175259_A_tutorial_on_tbe_performance_assessment_of_stochastic_multiobjective_optimizers","265176571_Assessing_the_Impact_of_Firewalls_and_Database_Proxies_on_SQL_Injection_Testing","310824195_SOFIA_an_automated_security_oracle_for_black-box_testing_of_SQL-injection_vulnerabilities","303099276_A_practical_guide_to_select_quality_indicators_for_assessing_pareto-based_search_algorithms_in_search-based_software_engineering","291916359_SQL_Injection_Attacks_and_Defense","289554838_Inference_of_Regular_Expressions_for_Text_Extraction_from_Examples","280314810_Behind_an_Application_Firewall_Are_We_Safe_from_SQL_Injection_Attacks","280301441_Redesigning_the_jMetal_Multi-Objective_Optimization_Framework","262395872_Random_Search_for_Hyper-Parameter_Optimization","262395024_Search-Based_Software_Engineering_Trends_Techniques_and_Applications"]}