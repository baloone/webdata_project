{"id":"262604923_MulticoreBSP_for_C_A_High-Performance_Library_for_Shared-Memory_Parallel_Programming","abstract":"The bulk synchronous parallel (BSP) model, as well as parallel programming interfaces based on BSP, classically target distributed-memory parallel architectures. In earlier work, Yzelman and Bisseling designed a MulticoreBSP for Java library specifically for shared-memory architectures. In the present article, we further investigate this concept and introduce the new high-performance MulticoreBSP for C library. Among other features, this library supports nested BSP runs. We show that existing BSP software performs well regardless whether it runs on distributed-memory or shared-memory architectures, and show that applications in MulticoreBSP can attain high-performance results. The paper details implementing the Fast Fourier Transform and the sparse matrixâ€“vector multiplication in BSP, both of which outperform state-of-the-art implementations written in other shared-memory parallel programming interfaces. We furthermore study the applicability of BSP when working on highly non-uniform memory access architectures.","authors":["Albert-Jan Nicholas Yzelman","R. H. Bisseling","Dirk Roose","Karl Meerbergen"],"meta":["August 2014International Journal of Parallel Programming 42(4)","DOI:10.1007/s10766-013-0262-9"],"references":["228572920_Hybrid_bulk_synchronous_parallelism_library_for_clustered_SMP_architectures","224586591_Discrete_Fourier_transform_on_multicore","221257316_Parallel_sparse_matrix-vector_and_matrix-transpose-vector_multiplication_using_compressed_sparse_blocks","221199071_OSL_Optimized_Bulk_Synchronous_Parallel_Skeletons_on_Distributed_Arrays","220951985_Reduced-Bandwidth_Multithreaded_Algorithms_for_Sparse_Matrix-Vector_Multiplication","220857740_Bulk_Synchronous_Parallel_ML_Modular_Implementation_and_Performance_Prediction","220439974_High-Level_Parallel_Software_Development_with_Python_and_BSP","50910616_A_Two-Dimensional_Data_Distribution_Method_For_Parallel_Sparse_Matrix-Vector_Multiplication","277296279_Discrete_Fourier_Transform_on_Multicore_--_A_review_of_optimizations_necessary_for_good_multicore_performance","265002571_AN_OBJECT-ORIENTED_BULK_SYNCHRONOUS_PARALLEL_LIBRARY_FOR_MULTICORE_PROGRAMMING","260708037_High-Level_Strategies_for_Parallel_Shared-Memory_Sparse_Matrix-Vector_Multiplication","260329376_An_object-oriented_bulk_synchronous_parallel_library_for_multicore_programming","253842059_Advanced_Parallel_Processing_Technologies","222821293_A_Bridging_Model_for_Multi-core_Computing","222515921_The_Paderborn_university_BSP_PUB_library","222506723_BSPlib_the_BSP_programming_library","221235785_High_performance_RDMA-based_MPI_implementation_over_InfiniBand","220768150_Submachine_Locality_in_the_Bulk_Synchronous_Setting_Extended_Abstract","220752062_A_fast_Fourier_transform_compiler_with_retrospective","220693929_Parallel_scientific_computation_A_structured_approach_using_BSP_and_MPI","220419823_A_Bridging_Model_for_Parallel_Computation","220359028_NestStep_Nested_Parallelism_and_Virtual_Shared_Memory_for_the_BSP_Model","220276184_Two-dimensional_cache-oblivious_sparse_matrix-vector_multiplication","46626711_Parallel_Scientific_Computation_with_BSP","46609284_A_simple_and_efficient_parallel_FFT_algorithm_using_the_BSP_model","2901840_High_Performance_RDMA-Based_MPI_Implementation_over","2635457_A_Fast_Fourier_Transform_Compiler"]}