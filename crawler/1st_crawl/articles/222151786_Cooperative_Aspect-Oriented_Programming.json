{"id":"222151786_Cooperative_Aspect-Oriented_Programming","abstract":"Aspect-oriented programming (AOP) seeks to improve software modularity via the separation of cross-cutting concerns. AOP proponents often advocate a development strategy where programmers write the main application (base code), ignoring cross-cutting concerns, and then aspect programmers, domain experts in their specific concerns, weave in the logic for these more specialized cross-cutting concerns. This purely oblivious strategy, however, has empirically been shown to tightly couple aspects to base code in many cases, hindering aspect modularity and reuse. In essence, the more intricate the weaving between the cross-cutting concern and the base code (lexically and/or semantically), the harder it becomes to: (a) robustly specify how to weave the aspects in at the required points, (b) capture interactions between aspects and base code, and (c) preserve the correct weaving as the base code evolves.","authors":["Kevin Hoffman","Patrick Eugster"],"meta":["March 2009Science of Computer Programming 74(5-6):333-354","DOI:10.1016/j.scico.2009.01.003","SourceDBLP"],"references":["244446214_Towards_a_Pragmatic_Composition_Model_of_CORBA_Services_Based_on_AspectJ","228812108_Obliviousness_modular_reasoning_and_the_behavioral_subtyping_analogy","228737182_On_the_reuse_and_maintenance_of_aspect-oriented_software_An_assessment_framework","228598498_Measuring_the_effects_of_software_aspectization","226790099_A_Trace_Semantics_for_Long-Running_Transactions","225454715_abc_The_AspectBench_Compiler_for_AspectJ","224001215_The_Java_Language_Specification","221560723_Information_hiding_interfaces_for_aspect-oriented_design","221560538_Exceptions_and_aspects_The_devil_is_in_the_details","221555269_Towards_reusable_components_with_aspects_An_empirical_study_on_modularity_and_obliviousness","221496629_On_the_Impact_of_Aspectual_Decompositions_on_Design_Stability_An_Empirical_Study","221303066_Bridging_Java_and_AspectJ_through_explicit_join_points","221014779_Composing_design_patterns_A_scalability_study_of_aspect-oriented_programming","221014733_Abc_An_extensible_AspectJ_compiler","220403676_Mixin_layers_An_object-oriented_implementation_technique_for_refinements_and_collaboration-based_designs","200085877_On_the_Criteria_To_Be_Used_in_Decomposing_Systems_into_Modules","200040350_Modularizing_design_patterns_with_aspects_A_quantitative_study","4200501_Classpects_Unifying_aspect-_and_object-oriented_language_design","4200498_Aspect-oriented_programming_and_modular_reasoning","3248323_Modular_software_design_with_crosscutting_interfaces","3188516_Refactoring_the_aspectizable_interfaces_An_empirical_assessment","3188426_Automatic_detection_and_masking_of_nonatomic_exception_handling","312943824_AOP_-_Does_It_Make_Sense_The_Case_of_Concurrency_and_Failures","312915591_Aspect-Oriented_Programming_Invited_Talk","305296096_Towards_a_Metrics_Suite_for_Object_Oriented_Design","269159254_A_metrics_suit_for_object_oriented_design","262355992_Using_Pointcut_Delta_Analysis_to_Support_Evolution_of_Aspect-Oriented_Software","245733477_Composing_Design_Patterns_A_Scalability_Study_of_AOP","243782207_Extreme_Programming-Embrace_Change","242506294_AspectJ_in_Action_Practical_Aspect-Oriented_Programming","238750489_Irwin_aspect-oriented_programming","237132364_The_Java_Language_Specification_Se_cond_Edition","230629686_Aspect-Oriented_Programming","228874717_AspectWerkz-dynamic_AOP_for_Java","226119721_AOP_Does_it_Make_Sense_The_Case_Of_Concurrency_and_failures","225385024_Separation_of_Concerns_in_Multi-agent_Systems_An_Empirical_Study","224773145_Design_Patterns_Elements_of_Reusable_Object-Oriented_Software","224646822_Adding_Self-Healing_Capabilities_into_Legacy_Object_Oriented_Application","224001212_Communicating_Sequential_Processes","222588438_On_communicating_sequential_processes","222405634_Exceptions_and_side-effects_in_atomic_blocks","221014812_Quantifying_Aspects_in_Middleware_Platforms","220404062_Software_Engineering_for_Multi-Agent_Systems","220280522_A_middleware-transparent_approach_to_developing_distributed_applications","200040511_Batory_D_Mixin_layers_An_object-oriented_implementation_technique_for_refinements_and_collaboration-based_designs_ACM_Trans_Softw_Eng_Methodol_TOSEM_112_215-255","200040253_Open_Modules_Modular_Reasoning_About_Advice","34732706_Efficient_implementation_of_around-advice_for_the_AspectBench_Compiler","34568573_A_metrics_suite_for_object_oriented_software_design","30870069_Design_Patterns_Elements_of_Reusable_Object-Oriented_Software","3556833_Programming_heterogeneous_transactions_for_software_developmentenvironments","3187649_Kemerer_CF_A_metric_suite_for_object_oriented_design_IEEE_Trans_Softw_Eng_206_476-493","2932317_Measuring_Coupling_in_Aspect-Oriented_Systems","2379923_Addressing_Practical_Software_Development_Issues_in_AspectJ_with_a_Pointcut_Interface","2955158_Beck_K_Embracing_Change_with_Extreme_Programming_IEEE_Computer_3210_70-77","2555938_Towards_Widespread_Adoption_of_AOSD"]}