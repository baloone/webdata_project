{"id":"327396842_Formal_Specification_of_Memory_Coherence_Protocol","abstract":"Memory coherence is the most fundamental requirement in a shared virtual memory system where there are concurrent as well as loosely coupled processes. These processes can demand a page for reading or writing. The memory is called coherent if the last update in a page remains constant for each process until the owner of that page does not change it. The ownership is transferred to a process interested to update that page. In [Kai LI, and Paul Hudak. Memory Coherence in Shared Virtual Memory Systems, 1986. Proc. of Fifth Annual ACM Symposium on Principles of Distributed Computing.], algorithms ensuring memory coherence are given. We formally specify these protocols and report the improvements through formal analysis. The protocols are specified in UPPAAL, i.e., a tool for modeling, validation and verification of real-time systems. Â© 2018 International Journal of Advanced Computer Science and Applications.","authors":["Jahanzaib Khan","Muhammad Atif","Muhammad Khurram","Muhammad Sohaib"],"meta":["January 2018International Journal of Advanced Computer Science and Applications 9(8)","DOI:10.14569/IJACSA.2018.090881"],"references":["320970395_An_explicit_transition_system_construction_approach_to_LTL_satisfiability_checking","303678101_Experience_Report_Formal_Verification_and_Testing_in_the_Development_of_Embedded_Software","280070019_Analyzing_Industrial_Architectural_Models_by_Simulation_and_Model-Checking","303510649_Statistical_and_exact_schedulability_analysis_of_hierarchical_scheduling_systems","261463476_Compositional_verification_of_sensor_software_using_UPPAAL","220439413_Memory_Coherence_in_Shared_Virtual_Memory_Systems"]}