{"id":"220377941_A_new_approach_for_component's_port_modeling_in_software_architecture","abstract":"The component's interaction points with the external world play a fundamental role in the specification of an application's architecture. Current software architecture approaches consider an interaction point as an atomic element in the specification of interconnections, despite the complexity of its structure and the attached behavior. It is not possible in current component models to deal separately with an element of an interaction point when such an element is needed alone for specifying a specific logic. To support such logic and the specification of a wide range of early ideas in the process of elaborating a software system, the Integrated Approach to Software Architecture (IASA) uses an interaction point model which provides facilities to manipulate any structural or behavioral element defining an interaction point. In addition, such facilities represent the fundamental foundation of the native support by IASA of Aspect Oriented Software Architectures (AOSA) specifications.","authors":["Djamal Bennouar","Tahar Khammaci","A. Henni"],"meta":["August 2010Journal of Systems and Software 83(8):1430-1442","DOI:10.1016/j.jss.2010.03.005","SourceDBLP"],"references":["284313499_The_Fractal_Component_Model_and_its_Support_in_Java_Software_Practice_and_Experience","238328124_Survey_of_aspect-oriented_analysis_and_design_approaches","235037593_A_Basis_for_Composition_Language_CL","228676179_Towards_an_integrated_aspect-oriented_modeling_approach_for_software_architecture_design","228636357_Aspectual_connectors_Supporting_the_seamless_integration_of_aspects_and_ADLs","226266722_A_Component_Model_for_Control-Intensive_Distributed_Embedded_Systems","226012298_AO-ADL_An_ADL_for_describing_aspect-oriented_architectures","221563892_A_Catalog_of_Techniques_for_Resolving_Packaging_Mismatch","221105800_On_the_Modular_Representation_of_Architectural_Aspects","221014882_JAsCo_An_Aspect-Oriented_approach_tailored_for_Component_Based_Software_Development","220883440_Self-healing_Strategies_For_Component_Integration_Faults","220882654_Safe_Integration_of_New_Concerns_in_a_Software_Architecture","220404231_Protocol_Specifications_and_Component_Adaptors","29637404_A_Component_Model_Engineered_with_Components_and_Aspects","3864292_Towards_a_taxonomy_of_software_connectors","3633435_Abstractions_and_implementations_for_architectural_connections","3407262_Structuring_parallel_and_distributed_programs","281884828_An_Explicit_Definition_of_Connectors_for_Component-Based_Systems","280681599_Behavioural_Contracts_for_Components","277056596_JbossR_40_the_official_guide","258969590_A_Classification_and_Comparison_Framework_for_Software_Architecture_Description_Languages","257364766_The_FRACTAL_Component_Model_and_Its_Support_in_Java_Experiences_With_Auto-adaptive_and_Reconfigurable_Systems","250225809_Runtime_Concepts_of_Hierarchical_Software_Components","247381529_Relating_Software_Component_Models","246844423_Model-Driven_Architecture_Vision_Standards_And_Emerging_Technologies","245805381_Communicating_Sequential_Processes","242408077_Aspects_and_Software_Components_A_case_study_of_the_Fractal_Component_Model","239352965_A_Temporal_Logic_Approach_for_Component_Based_System_Specification_and_Reasoning","238708373_Acme_architectural_description_of_component-based_systems","234805606_Ajax_the_definitive_guide","233341484_Composing_Web_services_with_the_Integrated_Approach_to_Software_Architecture","228650081_Scalable_element-based_connectors","228391560_Connectors_in_software_architectures","225568316_On_the_Modular_Representation_of_Architectural_Aspects","224674234_Self-Management_of_COTS_Component-Based_Systems_Using_Wrappers","223245255_The_SAVE_approach_to_component-based_development_of_vehicular_systems","221555210_Multi-view_Software_Component_Modeling_for_Dependability","220964182_A_Compositional_Approach_to_Active_and_Passive_Components","220882994_An_Explicit_Definition_of_Connectors_for_Component-Based_Software_Architecture","220695904_Communicating_Sequential_Processes","220691568_AspectJ_cookbook_-_real-world_aspect-oriented_programming_with_Java","200040253_Open_Modules_Modular_Reasoning_About_Advice","33820895_A_Formal_Approach_to_Software_Architecture","4322328_Using_Types_to_Enforce_Architectural_Structure","4229950_Microcomponent-based_component_controllers_A_foundation_for_component_aspects","3247107_Architectural_Mismatch_Why_Reuse_Is_So_Hard","3188277_Behavior_Protocols_for_Software_Component","3188055_Architecture_de-scription_languages","3187716_Specification_analysis_of_system_architecture_using_Rapide","2905160_Using_Types_to_Enforce_Architectural_Structure","2496079_Aspect_Oriented_Software_Architecture_a_Structural_Perspective","2448143_Architecturing_and_Configuring_Distributed_Application_with_Olan","2512638_Architecture-Based_Specification-Time_Software_Evolution","2355277_Aspect-Oriented_Programming_is_Quantification_and_Obliviousness"]}