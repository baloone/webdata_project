{"id":"331338200_user2code2vec_Embeddings_for_Profiling_Students_Based_on_Distributional_Representations_of_Source_Code","abstract":"In this work, we propose a new methodology to profile individual students of computer science based on their programming design using a technique called embeddings. We investigate different approaches to analyze user source code submissions in the Python language. We compare the performances of different source code vectorization techniques to predict the correctness of a code submission. In addition, we propose a new mechanism to represent students based on their code submissions for a given set of laboratory tasks on a particular course. This way, we can make deeper recommendations for programming solutions and pathways to support student learning and progression in computer programming modules effectively at a Higher Education Institution. Recent work using Deep Learning tends to work better when more and more data is provided. However, in Learning Analytics, the number of students in a course is an unavoidable limit. Thus we cannot simply generate more data as is done in other domains such as FinTech or Social Network Analysis. Our findings indicate there is a need to learn and develop better mechanisms to extract and learn effective data features from students so as to analyze the students' progression and performance effectively.","authors":["David Azcona","Piyush Arora","I-Han Hsiao","Alan F. Smeaton"],"meta":["March 2019","DOI:10.1145/3303772.3303813","Conference: the 9th International Conference"],"references":["325723603_A_general_path-based_representation_for_predicting_program_properties","324055953_code2vec_Learning_Distributed_Representations_of_Code","317946670_Innovative_Learning_Analytics_Research_at_a_data-driven_HEI","277145158_Learning_Program_Embeddings_to_Propagate_Feedback_on_Student_Code","265908651_Convolutional_Neural_Network_over_Tree_Structures_for_Programming_Language_Processing","265603211_Building_Program_Vector_Representations_for_Deep_Learning","260250447_Learning_Natural_Coding_Conventions","257882504_Distributed_Representations_of_Words_and_Phrases_and_their_Compositionality","221618573_A_Neural_Probabilistic_Language_Model","2413241_A_Neural_Probabilistic_Language_Model","329406081_A_General_Path-Based_Representation_for_Predicting_Program_Properties","327004676_An_Exploratory_Study_on_Student_Engagement_with_Adaptive_Notifications_in_Programming_Courses_13th_European_Conference_on_Technology_Enhanced_Learning_EC-TEL_2018_Leeds_UK_September_3-5_2018_Proceedin","326567811_Enriched_event_streams_a_general_dataset_for_empirical_studies_on_in-IDE_activities_of_software_developers","325866826_Modelling_Math_Learning_on_an_Open_Access_Intelligent_Tutor","319770439_Efficient_Estimation_of_Word_Representations_in_Vector_Space","319473015_Targeting_At-risk_Students_Using_Engagement_and_Effort_Predictors_in_an_Introductory_Computer_Programming_Course","318739282_Abstract_Syntax_Networks_for_Code_Generation_and_Semantic_Parsing","316471427_Abstract_Syntax_Networks_for_Code_Generation_and_Semantic_Parsing","306281778_Tensor_Factorization_for_Student_Modeling_and_Performance_Prediction_in_Unstructured_Domain","303413564_A_dataset_of_simplified_syntax_trees_for_C","301875222_A_Convolutional_Attention_Network_for_Extreme_Summarization_of_Source_Code","292059685_Pattern_Recognition","277676893_Example-based_feedback_provision_using_structured_solution_spaces","270877599_Don't_count_predict_A_systematic_comparison_of_context-counting_vs_context-predicting_semantic_vectors","224881862_Mixtures_of_Probabilistic_Principal_Component_Analysers","221657099_Understanding_source_code_evolution_using_abstract_syntax_tree_matching","200773081_A_Vector_Space_Model_for_Automatic_Indexing","4771963_Probabilistic_Principal_Component_Analysis"]}