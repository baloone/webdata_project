{"id":"319519842_Software_Quality_Attributes","abstract":"Architects must expend a lot of effort precisely understanding quality attributes, so that a design can be conceived to address them. Part of the difficultly is that quality attributes are not always explicitly stated in the requirements, or adequately captured by the requirements engineering team. Thatâ€™s why an architect must be associated with the requirements gathering exercise for system, so that they can ask the right questions to expose and nail down the quality attributes that must be addressed.\nOf course, understanding the quality attribute requirements is merely a necessary prerequisite to designing a solution to satisfy them. Conflicting quality attributes are a reality in every application of even mediocre complexity. Creating solutions that choose a point in the design space that adequately satisfies these requirements is remarkably difficult, both technically and socially. The latter involves communications with stakeholders to discuss design tolerances, discovering scenarios when certain quality requirements can be safely relaxed, and clearly communicating design compromises so that the stakeholders understand what they are signing up for.","authors":["Ian Gorton"],"meta":["January 2006","DOI:10.1007/3-540-28714-0_3","In book: Essential Software Architecture"],"references":["4200539_Tool_support_for_just-in-time_architecture_reconstruction_and_evaluation_an_experience_report","265780327_Non-Functional_Requirements_in_Software_Engineering"]}