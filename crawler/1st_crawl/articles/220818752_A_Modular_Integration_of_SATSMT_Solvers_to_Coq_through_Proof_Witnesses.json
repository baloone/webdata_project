{"id":"220818752_A_Modular_Integration_of_SATSMT_Solvers_to_Coq_through_Proof_Witnesses","abstract":"We present a way to enjoy the power of SAT and SMT provers in Coq without compromising soundness. This requires these provers to return not only a yes/no answer, but also a proof witness that can be independently rechecked. We present such a checker, written and fully certified in Coq. It is conceived in a modular way, in order to tame the proofs' complexity and to be extendable. It can currently check witnesses from the SAT solver ZChaff and from the SMT solver veriT. Experiments highlight the efficiency of this checker. On top of it, new reflexive Coq tactics have been built that can decide a subset of Coq's logic by calling external provers and carefully checking their answers.","authors":["MichaÃ«l Armand","Germain Faure","Benjamin Gregoire","Chantal Keller"],"meta":["December 2011","DOI:10.1007/978-3-642-25379-9_12","SourceDBLP","Conference: Certified Programs and Proofs - First International Conference, CPP 2011, Kenting, Taiwan, December 7-9, 2011. Proceedings"],"references":["222429599_Cooperating_theorem_provers_A_case_study_combining_HOL-light_and_CVC_lite","221234915_Fast_LCF-Style_Proof_Reconstruction_for_Z3","277470672_Solving_SAT_and_SAT_Modulo_Theories","251734653_Extended_Abstract_Combining_a_Logical_Framework_with_an_RUP_Checker_for_SMT_Proofs","248686067_Interactive_Theorem_Proving_with_Cambridge_LCF","242358312_Automation_of_reasoning--classical_papers_on_computational_logic","234792468_Interactive_theorem_proving","221255163_Improving_Coq_Propositional_Reasoning_Using_a_Lazy_CNF_Conversion_Scheme","221186640_Fast_Reflexive_Arithmetic_Tactics_the_Linear_Case_and_Beyond","220852105_Expressiveness_Automation_Soundness_Towards_Combining_SMT_Solvers_and_Interactive_Proof_Assistants","220430573_Solving_SAT_and_SAT_Modulo_Theories_From_an_abstract_Davis--Putnam--Logemann--Loveland_procedure_to_DPLL","45193287_Extending_Coq_with_Imperative_Features_and_Its_Application_to_SAT_Verification","2508612_Autarkic_Computations_in_Formal_Proofs","36419498_SAT-based_Finite_Model_Generation_for_Higher-Order_Logic"]}