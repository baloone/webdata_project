{"id":"315853226_A_Relational_Shape_Abstract_Domain","abstract":"Static analyses aim at inferring semantic properties of programs. While many analyses compute an over-approximation of reachable states, some analyses compute a description of the input-output relations of programs. In the case of numeric programs, several analyses have been proposed that utilize relational numerical abstract domains to describe relations. On the other hand, designing abstractions for relations over memory states and taking shapes into account is challenging. In this paper, we propose a set of novel logical connectives to describe such relations, which are inspired by separation logic. This logic can express that certain memory areas are unchanged, freshly allocated, or freed, or that only part of the memory was modified. Using these connectives, we build an abstract domain and design a static analysis that over-approximates relations over memory states containing inductive structures. We implement this analysis and report on the analysis of a basic library of list manipulating functions.","authors":["Hugo Illous","Matthieu Lemerre","Xavier Rival"],"meta":["April 2017Lecture Notes in Computer Science","DOI:10.1007/978-3-319-57288-8_15","Conference: NASA Formal Methods Symposium"],"references":["305793183_Automatically_learning_shape_specifications","283715852_Modularity_in_Lattices_A_Case_Study_on_the_Correspondence_Between_Top-Down_and_Bottom-Up_Analysis","263052122_Frama-c_a_Software_Analysis_Perspective","325656375_Frama-C_A_software_analysis_perspective","314854334_Precise_and_compact_modular_procedure_summaries_for_heap_manipulating_programs","303773727_Automatically_learning_shape_specifications","295104415_Shape_Analysis_via_Second-Order_Bi-Abduction","279258409_Desynchronized_Multi-State_Abstractions_for_Open_Programs_in_Dynamic_Languages","266660662_A_Relational_Framework_for_Higher-Order_Shape_Analysis","248434881_Who_is_Pointing_When_to_Whom"]}