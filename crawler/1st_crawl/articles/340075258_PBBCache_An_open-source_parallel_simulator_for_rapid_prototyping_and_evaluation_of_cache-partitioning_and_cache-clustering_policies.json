{"id":"340075258_PBBCache_An_open-source_parallel_simulator_for_rapid_prototyping_and_evaluation_of_cache-partitioning_and_cache-clustering_policies","abstract":"Chip multicore processors (CMPs) constitute the architecture of choice for a wide spectrum of computing systems, ranging from power-efficient mobile devices to high-performance server platforms. Despite their benefits, the contention that appears when multiple applications compete for the use of shared resources among cores, such as the last-level cache (LLC), may lead to substantial performance degradation. This may have a negative impact on key system metrics such as throughput and fairness. Partitioning of the LLC (i.e., assigning a separate cache partition with a certain size to each application) has been proven effective to mitigate contention-related effects.\nIn this article we propose a parallel simulator that makes it possible to quickly compare the effectiveness of different cache-partitioning policies with the optimal solution for different optimization objectives. The simulator can obtain the optimal solution for any point during the execution of a multi-program workload where each application goes through a certain program phase. Our proposal leverages a slowdown-prediction model that accounts for degradation due to cache sharing and memory-bandwidth contention, which constitute the major factors of shared-resource contention on current CMPs. To determine the optimal solution for two optimization objectives (throughput and fairness optimization), we leverage a novel distributed-memory parallel branch-and-bound strategy specifically designed to efficiently distribute the computation across multiple processing cores.","authors":["Adrian Garcia-Garcia","Juan Carlos Saez","Jos√© Luis Risco-Martin","Manuel Prieto Matias"],"meta":["March 2020Journal of Computational Science 42(1):101102","DOI:10.1016/j.jocs.2020.101102"],"references":["325240802_Contention-Aware_Fair_Scheduling_for_Asymmetric_Single-ISA_Multicore_Systems","324100978_KPart_A_Hybrid_Cache_Partitioning-Sharing_Technique_for_Commodity_Multicores","314510535_On_parallel_Branch_and_Bound_frameworks_for_Global_Optimization","314352438_A_Survey_of_Techniques_for_Cache_Partitioning_in_Multicore_Processors","307954620_PMCTrack_Delivering_Performance_Monitoring_Counter_Support_to_the_OS_Scheduler","286988442_PALLOC_DRAM_bank-aware_memory_allocator_for_performance_isolation_on_multicore_platforms","263550736_A_Parallel_Algorithm_for_Game_Tree_Search_Using_GPGPU","228913104_Bob_a_Framework_for_Exact_Combinatorial_Optimization_Methods_on_Parallel_Machines","3216507_System-Level_Performance_Metrics_for_Multiprogram_Workloads","334686113_LFOC_A_Lightweight_Fairness-Oriented_Cache_Clustering_Policy_for_Commodity_Multicores","321299018_GPU-accelerated_backtracking_using_CUDA_Dynamic_Parallelism","320832087_Application_Clustering_Policies_to_Address_System_Fairness_with_Intel's_Cache_Allocation_Technology","317789632_Solving_combinatorial_problems_using_a_parallel_framework","311488243_The_application_slowdown_model_quantifying_and_controlling_the_impact_of_inter-application_interference_at_shared_caches_and_main_memory","311476203_Providing_fairness_on_shared-memory_multiprocessors_via_process_scheduling","303905128_Whirlpool_Improving_Dynamic_Cache_Management_with_Static_Data_Classification","301762745_EFS_Energy-Friendly_Scheduler_for_memory_bandwidth_constrained_systems","299641401_Modeling_cache_performance_beyond_LRU","292950384_A_GPU-based_Branch-and-Bound_algorithm_using_Integer-Vector-Matrix_data_structure","262222663_Survey_of_Scheduling_Techniques_for_Addressing_Shared_Resources_in_Multicore_Processors","238836727_Parallel_Branch-and-Branch_Algorithms_Survey_and_Synthesis","237201837_Parallel_Branch_and_Bound_Algorithms","221062562_Off-chip_memory_bandwidth_minimization_through_cache_partitioning_for_multi-core_platforms","221005367_Utility-Based_Cache_Partitioning_A_Low-Overhead_High-Performance_Runtime_Mechanism_to_Partition_Shared_Caches","220938794_Fairness_via_Source_Throttling_A_Configurable_and_High-Performance_Fairness_Substrate_for_Multi-Core_Memory_Systems"]}