{"id":"221291657_On_the_Power_of_Bitslice_Implementation_on_Intel_Core2_Processor","abstract":"This paper discusses the state-of-the-art fast software implementation of block ciphers on Intel’s new microprocessor Core2, particularly concentrating on “bitslice implementation”. The bitslice parallel encryption technique, initially proposed by Biham for speeding-up DES, has been successful on RISC processors with many long registers, but on the other side bitsliced ciphers are not widely used in real applications on PC platforms, because in many cases they were actually not very fast on previous PC processors. Moreover the bitslice mode requires a non-standard data format and hence an additional format conversion is needed for compatibility with an existing parallel mode of operation, which was considered to be expensive.\nThis paper demonstrates that some bitsliced ciphers have a remarkable performance gain on Intel’s Core2 processor due to its enhanced SIMD architecture. We show that KASUMI, a UMTS/GSM mobile standard block cipher, can be four times faster when implemented using a bitslice technique on this processor. Also our bitsliced AES code runs at the speed of 9.2 cycles/byte, which is the performance record of AES ever made on a PC processor. Next we for the first time focus on how to optimize a conversion algorithm between a bitslice format and a standard format on a specific processor. As a result, the bitsliced AES code can be faster than a highly optimized “standard AES” code on Core2, even taking an overhead of the conversion into consideration. This means that in the CTR mode, bitsliced AES is not only fast but also fully compatible with an existing implementation and moreover secure against cache timing attacks, since a bitsliced cipher does not use any lookup tables with key/data-dependent address.","authors":["Mitsuru Matsui","Junko Nakajima"],"meta":["September 2007","DOI:10.1007/978-3-540-74735-2_9","SourceDBLP","Conference: Cryptographic Hardware and Embedded Systems - CHES 2007, 9th International Workshop, Vienna, Austria, September 10-13, 2007, Proceedings"],"references":["225127628_A_Compact_Rijndael_Hardware_Architecture_with_S-Box_Optimization","221291621_A_very_compact_S-box_for_AES","221291619_Lecture_Notes_in_Computer_Science","221208406_A_Systematic_Evaluation_of_Compact_Hardware_Implementations_for_the_Rijndael_S-Box","2557526_Efficient_Galois_Field_Arithmetic_on_SIMD_Architectures","2552799_Efficient_Implementation_of_Rijndael_Encryption_With_Composite_Field_Arithmetic","287745471_The_128-bit_block_cipher_Camellia","278912518_FEDERAL_INFORMATION-PROCESSING_STANDARDS","265006501_Instruction_latencies_and_throughput_for_AMD_and_Intel_x86_processors","239954254_Efficient_Rijndael_implementation_with_composite_field_arithmetic","225206017_How_Far_Can_We_Go_on_the_x64_Processors","225201197_Improved_fast_software_implementation_of_block_ciphers_Extended_abstract","221257104_Efficient_galois_field_arithmetic_on_SIMD_architectures","220942529_New_Security_Proofs_for_the_3GPP_Confidentiality_and_Integrity_Algorithms","220942476_New_block_encryption_algorithm_MISTY","220739246_Improved_fast_software_implementation_of_block_ciphers","2824292_Fast_Software_Implementations_of_MISTY1_on_Alpha_Processors","2643039_Serpent_A_Proposal_for_the_Advanced_Encryption_Standard","2416974_A_Fast_New_DES_Implementation_in_Software"]}