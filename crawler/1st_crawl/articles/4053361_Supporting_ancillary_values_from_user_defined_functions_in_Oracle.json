{"id":"4053361_Supporting_ancillary_values_from_user_defined_functions_in_Oracle","abstract":"Most commercial SQL database systems support user-defined functions that can be used in WHERE clause filters, SELECT list items, or in sorting/grouping clauses. Often, user-defined functions are used as inexact search filters and then the filtered rows are sorted by a relevance measure. This is commonplace in Web search engines, multimedia, and personalization applications. We refer to the values, such as relevance measure, associated with the filtered rows as ancillary values, and address the problem of efficiently and expressively supporting queries involving them in Oracle. In our approach, the filtering operator is designated as the primary operator, and the associated ancillary values are modeled by additional operators that are declared to be ancillary to the primary operator. An ancillary operator can represent any auxiliary value for the filtered rows, including relevance values (e.g. a score which describes how well a document matches the text search query) and additional properties (e.g. the nature of spatial relationship for objects that overlap a given region). The query execution is optimized by allowing the primary and ancillary operator invocations to share computations via a shared context. Also, queries involving ancillary values can exploit user defined indexes and their capability to return results in the order of ancillary values. We present the key concepts, describes our implementation scheme and optimization techniques, and discusses alternative approaches for supporting ancillary values. Finally, we provide an experimental study that illustrates the scalability and effectiveness of our approach.","authors":["Ravi Murthy","Seema Sundara","Nipun Agarwal","Y. Hu"],"meta":["April 2003","DOI:10.1109/ICDE.2003.1260789","SourceIEEE Xplore","Conference: Data Engineering, 2003. Proceedings. 19th International Conference on"],"references":["221309719_Integrating_SQL_Databases_with_Content-Specific_Search_Engines","221215010_Indexing_Images_in_Oracle8i","242616719_Using_the_new_db2","234827890_Heterogeneous_Query_Processing_through_SQL_Table_Functions","233967787_Information_retrieval_Data_structures_and_algorithms","221310068_High_Level_Indexing_of_User-Defined_Types","220966113_Extensible_Indexing_A_Framework_for_Integrating_Domain-Specific_Indexing_Schemes_into_Oracle8i","220688796_Using_the_New_DB2_IBM's_Object-Relational_Database_System","220225702_Optimization_Techniques_for_Queries_with_Expensive_Methods","3792336_Heterogeneous_query_processing_through_SQL_table_functions","2799013_Inclusion_Of_New_Types_In_Relational_Data_Base_Systems","2721587_Combining_Fuzzy_Information_From_Multiple_Systems","2478235_Optimizing_Queries_over_Multimedia_Repositories","2459360_Optimization_of_Queries_with_User-defined_Predicates"]}