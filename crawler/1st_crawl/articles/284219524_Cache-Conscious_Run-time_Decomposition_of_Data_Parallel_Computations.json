{"id":"284219524_Cache-Conscious_Run-time_Decomposition_of_Data_Parallel_Computations","abstract":"Multi-core architectures feature an intricate hierarchy of cache memories,\nwith multiple levels and sizes. To adequately decompose an application\naccording to the traits of a particular memory hierarchy is a cumbersome task\nthat may be rewarded with significant performance gains. The current\nstate-of-the-art in memory-hierarchy-aware parallel computing delegates this\nendeavour on the programmer, demanding from him deep knowledge of both parallel\nprogramming and computer architecture. In this paper we propose the shifting of\nthese memory-hierarchy-related concerns to the run-time system, which then\ntakes on the responsibility of distributing the computation's data across the\ntarget memory hierarchy. We evaluate our approach from a performance\nperspective, comparing it against the common cache-neglectful data\ndecomposition strategy.","authors":["Herv√© Paulino","Nuno Delgado"],"meta":["August 2017The Journal of Supercomputing 73(8)","DOI:10.1007/s11227-016-1721-z","SourcearXiv"],"references":["259346506_Heterogeneous_Programming_with_Single_Operation_Multiple_Data","235663691_Towards_an_Adaptable_Middleware_for_Parallel_Computing_in_Heterogeneous_Environments","313135583_Sequoia_Programming_the_memory_hierarchy","312775005_MapReduce_Simplified_data_processing_on_large_clusters","284568228_Hierarchical_Computation_in_the_SPMD_Programming_Model","274454103_Programming_the_memory_hierarchy_revisited","262327728_Language_Support_for_Dynamic_Hierarchical_Data_Partitioning","262288718_HJ-Hadoop_an_optimized_mapreduce_runtime_for_multi-core_systems","246680985_Cache-Oblivious_Algorithms_Extended_Abstract","228818367_Phoenix_Modular_MapReduce_for_shared-memory_systems"]}