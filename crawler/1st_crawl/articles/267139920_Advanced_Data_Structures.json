{"id":"267139920_Advanced_Data_Structures","abstract":"Advanced Data Structures presents a comprehensive look at the ideas, analysis, and implementation details of data structures as a specialized topic in applied algorithms. Data structures are how data is stored within a computer, and how one can go about searching for data within. This text examines efficient ways to search and update sets of numbers, intervals, or strings by various data structures, such as search trees, structures for sets of intervals or piece-wise constant functions, orthogonal range search structures, heaps, union-find structures, dynamization and persistence of structures, structures for strings, and hash tables. This is the first volume to show data structures as a crucial algorithmic topic, rather than relegating them as trivial material used to illustrate object-oriented programming methodology, filling a void in the ever-increasing computer science market. Numerous code examples in C and more than 500 references make Advanced Data Structures an indispensable text. topic. Numerous code examples in C and more than 500 references make Advanced Data Structures an indispensable text.","authors":["Peter Brass"],"meta":["January 2008","DOI:10.1017/CBO9780511800191"],"references":["262253387_Tree_rebalancing_in_optimal_time_and_space","234827785_Dynamic_hashing","234815310_Dense_Multiway_Trees","234777555_Algorithms_for_trie_compaction","291630500_Eine_neue_Klasse_von_ausgeglichenen_Binarbaumen","288492510_Correspondence-Based_Data_Structures_For_Double-Ended_Priority_Queues","288231259_Efficiency_of_equivalence_algorithms","285935885_Linearity_and_Unprovability_of_Set_Union_Problem_Strategies_I_Linearity_of_Strong_Postorder","285916066_Balancing_a_binary_tree","284664233_A_note_on_dynamic_range_searching","282204052_Approximate_dictionary_queries","281007406_Use_of_tree_structures_for_processing_files","271606842_On_the_average_performance_of_orthogonal_range_search_in_multidimensional_data_structures","268755623_A_New_Class_of_Balanced_Search_Trees_Half_Balanced_Binary_Search_Trees","266362596_Near_optimal_b_heap","265371407_On_Worst-Case_Robin_Hood_Hashing","264944483_On_String_Concepts_and_Their_Implementation","262249524_What_is_a_Pointer_Machine","257428397_Linear_Bidirectional_On-Line_Construction_of_Affix_Trees","257000569_Theory_of_2-3_Heaps","256720654_Dynamic_suffix_tree_and_two-dimensional_texts_management","256181857_A_note_on_the_construction_of_the_data_structure_deap","256181771_General_methods_for_'all_elements'_and_'all_pairs'_problems","245311810_A_O1_average_time_update_scheme_for_balanced_binary_search_trees","242914290_Dividedk-d_trees","242793234_On_the_number_of_range_queries_in_k-space","242791480_On_the_relationship_between_son-trees_and_symmetric_binary_b-trees","242637887_Computer_science_and_its_relation_to_mathematics_The_American_Mathematical_Monthly_814_323-343","234831457_An_Optimal_Method_for_Deletion_in_One-Sided_Height-Balanced_Trees","234814477_Reciprocal_Hashing_A_Method_for_Generating_Minimal_Perfect_Hashing_Functions","234810826_Quintary_Trees_A_File_Structure_for_Multidimensional_Database_Systems","234801832_Upper_Bounds_for_the_Total_Path_Length_of_Binary_Trees","234796846_On-the-fly_optimization_of_data_structures","234794728_Binary_Search_Trees_and_File_Organization","234785939_Performance_of_Height-Balanced_Trees","234785388_Uniform_Hashing_Is_Optimal","234781744_Analysis_of_Uniform_Hashing","234778170_An_insertion_technique_for_one-sided_height-balanced_trees","232871089_Deletion_in_One-Sided_Height_Balanced_Search_Trees","227173071_A_backtracking_method_for_constructing_perfect_hash_functions_from_a_set_of_mapping_functions","227143099_Bounds_for_min-max_heaps","227076467_Analysis_of_an_algorithm_for_priority_queue_administration","227029457_The_Effect_of_Table_Expansion_on_the_Program_Complexity_of_Perfect_Hash_Funtions","226775469_Time_optimal_left_to_right_construction_of_position_trees","226609319_Maintaining_order_in_a_generalized_linked_list","226535963_External_segment_trees","226440176_Efficient_worst-case_data_structures_for_range_searching","226145492_An_algorithm_for_merging_meaps","226096051_Dynamic_hashing","226087374_A_balanced_search_tree_with_O1_worst-case_update_time","225886581_Analysis_of_grid_file_algorithms","226066355_Fractional_Cascading_II_Applications","225997790_The_nearest_common_ancestor_in_a_dynamic_tree","225841831_Simple_Confluently_Persistent_Catenable_Lists","225785180_An_Explanation_of_Splaying"]}