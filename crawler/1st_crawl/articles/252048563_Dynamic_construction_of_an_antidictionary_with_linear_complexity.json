{"id":"252048563_Dynamic_construction_of_an_antidictionary_with_linear_complexity","abstract":"An antidictionary is in particular useful for data compression. Static construction algorithms of antidictionaries with linear complexity have been proposed. However, the con- struction algorithms do not work in a dynamic manner with linear complexity. In this paper, we propose a dynamic construc- tion algorithm of an antidictionary with linear complexity. The proposed algorithm uses two linear construction algorithms of suffix trees proposed by Weiner and Ukkonen, individually. It is proved that the proposed algorithm works with linear complexity. Moreover, its effectiveness is demonstrated by simulation results.","authors":["Takahiro Ota","Hiroyoshi Morita","Hirotada Fukae"],"meta":["July 2011","DOI:10.1109/ISIT.2011.6033999"],"references":["229067733_Linear_Pattern_Matching_Algorithm","221313686_A_Trie-Based_Approach_for_Compacting_Automata","220238124_On-Line_Electrocardiogram_Lossless_Compression_Using_Antidictionary_Codes_for_a_Finite_Alphabet","220110473_Automata_and_Forbidden_Words","31333393_On_the_Construction_of_an_Antidictionary_with_Linear_Complexity_Using_the_Suffix_Tree","2985762_Data_compression_using_antidictionaries","261233904_On_fast_and_memory-efficient_construction_of_an_antidictionary_array","229067720_On-Line_Construction_of_Suffix_Trees","225636001_From_Ukkonen_to_McCreight_and_Weiner_A_Unifying_View_of_Linear-Time_Suffix_Tree_Construction","224578608_Length_of_Minimal_Forbidden_Words_on_a_Stationary_Ergodic_Source","224199389_On_the_adaptive_antidictionary_code_using_minimal_forbidden_words_with_constant_lengths","223316549_The_smallest_automaton_recognizing_the_subwords_of_a_text","221579984_On_Suffix_Extensions_in_Suffix_Trees","220692224_An_Introduction_to_the_Analysis_of_Algorithms","4332111_On_the_On-line_Arithmetic_Coding_Based_on_Antidictionaries_with_Linear_Complexity","4328330_DCA_using_suffix_arrays","2702058_A_Block-Sorting_Lossless_Data_Compression_Algorithm"]}