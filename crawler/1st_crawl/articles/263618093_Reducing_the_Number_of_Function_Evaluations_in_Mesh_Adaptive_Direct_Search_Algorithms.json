{"id":"263618093_Reducing_the_Number_of_Function_Evaluations_in_Mesh_Adaptive_Direct_Search_Algorithms","abstract":"The mesh adaptive direct search (Mads) class of algorithms is designed for nonsmooth optimization, where the objective function and constraints are typically computed by launching a time-consuming computer simulation. Each iteration of a Mads algorithm attempts to improve the current best-known solution by launching the simulation at a finite number of trial points. Common implementations of Mads generate 2n trial points at each iteration, where $n$ is the number of variables in the optimization problem. The objective of the present work is to dynamically reduce that number. We present an algorithmic framework that reduces the number of simulations to exactly $n+1$, without impacting the theoretical guarantees from the convergence analysis. Numerical experiments are conducted for several different contexts; the results suggest that these strategies allow the new algorithms to reach a better solution with fewer function evaluations.\n\nRead More: http://epubs.siam.org/doi/abs/10.1137/120895056","authors":["Andrea Ianni","Charles Audet","Sébastien Le Digabel","Christophe Tribes"],"meta":["April 2014SIAM Journal on Optimization 24(2):621–642","DOI:10.1137/120895056"],"references":["325314308_Test_Problems_for_Nonsmooth_Unconstrained_and_Linearly_Constrained_Optimization","277393380_Algorithm_909","262956696_Convergence_Results_for_Generalized_Pattern_Search_Algorithms_are_Tight_Surrogate_Optimization_Guest_Editors_Charles_Audet_John_E_Dennis_and_Luis_N_Vicente","313189460_Direct_search_solution_of_numerical_and_statistical_problems","290487562_Nonlinear_programming_without_a_penalty_function","270253803_Evolutionary_Operation_A_Method_for_Increasing_Industrial_Productivity","261592543_Evolutionary_Operation_A_Method_for_Increasing_Industrial_Productivity","247074436_Optimization_and_NonSmooth_Analysis","245379036_Analysis_of_generalized_search_patterns","242502547_A_Progressive_Barrier_for_Derivative-Free_Nonlinear_Programming"]}