{"id":"300789111_Succinct_Non-overlapping_Indexing","abstract":"Given a text \\(\\mathsf {T}\\) having \\(n\\) characters, we consider the non-overlapping indexing problem defined as follows: pre-process \\(\\mathsf {T}\\) into a data-structure, such that whenever a pattern \\(P\\) comes as input, we can report a maximal set of non-overlapping occurrences of \\(P\\) in \\(\\mathsf {T}\\). The best known solution for this problem takes linear space, in which a suffix tree of \\(\\mathsf {T}\\) is augmented with \\(O(n)\\)-word data structures. A query \\(P\\) can be answered in optimal \\(O(|P|+\\mathsf {nocc})\\) time, where \\(\\mathsf {nocc}\\) is the output size [Cohen and Porat, ISAAC 2009]. We present the following new result: let \\(\\mathsf {CSA}\\) (not necessarily a compressed suffix array) be an index of \\(\\mathsf {T}\\) that can compute (i) the suffix range of \\(P\\) in \\(\\mathsf {search}(P)\\) time, and (ii) a suffix array or an inverse suffix array value in \\(\\mathsf {t_{SA}}\\) time; then by using \\(\\mathsf {CSA}\\) alone, we can answer a query \\(P\\) in \\(O(\\mathsf {search}(P)+ \\mathsf {nocc}\\cdot \\mathsf {t_{SA}})\\) time. Additionally, we present an improved result for a generalized version of this problem called range non-overlapping indexing.","authors":["Arnab Ganguly","Rahul Shah","Sharma V. Thankachan"],"meta":["June 2015","DOI:10.1007/978-3-319-19929-0_16","Conference: Annual Symposium on Combinatorial Pattern Matching"],"references":["229067733_Linear_Pattern_Matching_Algorithm","224775631_Sorted_Range_Reporting","221220163_Lecture_Notes_in_Computer_Science","220430619_Indexing_compressed_text","220268305_Optimal_static_range_reporting_in_one_dimension","45874842_Range_Non-Overlapping_Indexing","3880887_New_data_structures_for_orthogonal_range_searching","2573702_Compressed_Suffix_Arrays_and_Suffix_Trees_with_Applications_to_Text_Indexing_and_String_Matching_Extended_Abstract","2411024_Optimal_Static_Range_Reporting_in_One_Dimension","2392427_New_Data_Structures_for_Orthogonal_Range_Searching","284471379_Range_non-overlapping_indexing_and_successive_list_indexing","257640653_On_position_restricted_substring_searching_in_succinct_space","229067720_On-Line_Construction_of_Suffix_Trees","224960000_A_Fast_String_Searching_Algorithm","224103840_Efficient_randomized_pattern-matching_algorithms","222516401_Replacing_Suffix_Trees_with_Enhanced_Suffix_Arrays","220994452_Improved_Algorithms_for_the_Range_Next_Value_Problem_and_Applications","220980228_Lecture_Notes_in_Computer_Science","220779327_Suffix_Arrays_a_New_Method_for_On-Line_String_Searches","220770796_Alphabet-Independent_Compressed_Text_Indexing","220618247_Fast_Pattern_Matching_in_Strings","220617310_Suffix_Arrays_A_New_Method_for_On-Line_String_Searches","220555899_Algorithms_on_Stings_Trees_and_Sequences_Computer_Science_and_Computational_Biology","40884230_Compressed_Full-Text_Indexes"]}