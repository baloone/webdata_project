{"id":"328795930_Monitoring_Smart_Contracts_ContractLarva_and_Open_Challenges_Beyond_18th_International_Conference_RV_2018_Limassol_Cyprus_November_10-13_2018_Proceedings","abstract":"Smart contracts present new challenges for runtime verification techniques, due to features such as immutability of the code and the notion of gas that must be paid for the execution of code. In this paper we present the runtime verification tool ContractLarva and outline its use in instrumenting monitors in smart contracts written in Solidity, for the Ethereum blockchain-based distributed computing platform. We discuss the challenges faced in doing so, and how some of these can be addressed, using the ERC-20 token standard to illustrate the techniques. We conclude by proposing a list of open challenges in smart contract and blockchain monitoring.","authors":["Shaun Azzopardi","Joshua Ellul","Gordon J. Pace"],"meta":["November 2018","DOI:10.1007/978-3-030-03769-7_8","In book: Runtime Verification (pp.113-137)"],"references":["328643359_Contracts_over_Smart_Contracts_Recovering_from_Violations_Dynamically","328511070_MadMax_surviving_out-of-gas_conditions_in_Ethereum_smart_contracts","323082969_Introduction_to_Runtime_Verification","345396329_Finding_The_Greedy_Prodigal_and_Suicidal_Contracts_at_Scale","328591842_A_formal_verification_tool_for_Ethereum_VM_bytecode","326523404_Foundations_and_Tools_for_the_Static_Analysis_of_Ethereum_Smart_Contracts_30th_International_Conference_CAV_2018_Held_as_Part_of_the_Federated_Logic_Conference_FloC_2018_Oxford_UK_July_14-17_2018_Proc","323821756_Towards_verifying_ethereum_smart_contract_bytecode_in_IsabelleHOL","323257355_Finding_The_Greedy_Prodigal_and_Suicidal_Contracts_at_Scale","323248811_ZEUS_Analyzing_Safety_of_Smart_Contracts","322191075_Towards_verifying_ethereum_smart_contract_bytecode_in_IsabelleHOL"]}