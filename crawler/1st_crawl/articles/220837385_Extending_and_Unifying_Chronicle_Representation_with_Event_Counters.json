{"id":"220837385_Extending_and_Unifying_Chronicle_Representation_with_Event_Counters","abstract":"This paper is dedicated to the chronicle recognition approach used to design an evolution monitoring system for supervising dynamic systems for which time information is relevant. We propose to extend and also to unify the chronicle represen- tation through event counters. The main motivation of such an ex- tension of the chronicle representation arises from alarm process- ing: counting the occurrences of alarms can be useful to evaluate the severity of a problem and also to discriminate some kind of faults. The paper describes the representation and the corresponding al- gorithms for processing this extension according to the purpose of supervision in terms of performance. In this paper, we understand an evolution monitoring system as one that has to maintain through its observations a consistent interpreta- tion of what is going on and the chronicle model representation is used for the recognition of relevant pieces of evolution of the moni- tored system. While expert systems base their reasoning on rules, relegating time information to the background, recognition of chronicles is based on diagrams of evolution in which time is fundamental. Chroniclesare temporal patterns that represent possible evolutions of the observed system. A chronicle is a set of events, linked together by time constraints. In the monitoring framework, these events could be alarms referring to the supervised system. The available time in- formation would allow their ordering and the specification of time spans between two occurrences. The approach used here is a chronicle recognition approach very similar to (1): the chronicle recognition system receives as input a stream of time-stamped events. It performs recognition of chronicles as they develop, and generates as output the recognized chronicles (i.e. sets of matched input events). It is mainly a temporal reason- ing system based on the complete prediction of the possible arrival dates for each expected event; the set of all these values (called time window) is reduced by propagation of the dates of observed events through the graph of the time constraints of the chronicle model. The recognition process is incremental - each event is integrated as soon as it occurs - and it is performed over a single reading of the input stream. This method has a high-performance algorithm, partly due to a stage of chronicle compilation which propagates the time con- straints and checks the consistency of the resulting time graph (2). But, as we will see, this chronicle formalism is not well-suited to take into account transient phenomena that become relevant only when they occur frequently and, moreover, when some faults could only be discriminated by counting alarms. So, we propose to intro- duce counters of events as an extension of the chronicle formalism. The next section gives an overview of the chronicle representation and a snapshot of the recognition process. The third section defines the representation of counters of events and the new predicate used in chronicle models. The fourth section details the corresponding algo- rithms for processing this extension according to the purpose of su- pervision. Then, just before conclusion, we will propose first results about comparison between the old and the new chronicle recognition system.","authors":["Christophe Dousson"],"meta":["January 2002","SourceDBLP","Conference: Proceedings of the 15th Eureopean Conference on Artificial Intelligence, ECAI'2002, Lyon, France, July 2002"],"references":["221442555_A_Model-Based_Approach_for_Learning_to_Identify_Cardiac_Arrhythmias","220816094_Situation_Recognition_Representation_and_Algorithms"]}