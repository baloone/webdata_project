{"id":"303968960_A_Bisimulation_for_Type_Abstraction_and_Recursion","abstract":"We present a sound, complete, and elementary proof method, based on bisimulation, for contextual equivalence in a λ-calculus with full universal, existential, and recursive types. Unlike logical relations (either semantic or syntactic), our development is elementary, using only sets and relations and avoiding advanced machinery such as domain theory, admissibility, and TT-closure. Unlike other bisimulations, ours is complete even for existential types. The key idea is to consider sets of relations—instead of just relations—as bisimulations.","authors":["Eijiro Sumii","Benjamin C. Pierce"],"meta":["January 2005"],"references":["226469119_Genericity_and_the_p-Calculus","223214520_Bisimilarity_as_a_Theory_of_Functional_Programming","222553933_Syntactic_Logical_Relations_for_Polymorphic_and_Recursive_Types","220369849_Operational_Properties_of_Lily_a_Polymorphic_Linear_Lambda_Calculus_with_Recursion","3811842_Proof_techniques_for_cryptographic_processes","2899355_An_Indexed_Model_of_Impredicative_Polymorphism_and_Mutable_References","2492932_The_Lazy_Lambda_Calculus","292449098_Expressing_mobility_in_process_algebras_first-order_and_higher-order_paradigms","246086293_Erratum_of_Proof_techniques_for_cryptographic_processes","245624208_CCS-A_Calculus_for_Communicating_Systems","242591782_Operational_equivalences_for_untyped_and_polymorphic_object_calculi","235191692_HOOTS_II_Second_Workshop_on_Higher-Order_Operational_Techniques_in_Semantics_Volume_10","231905603_On_bisimulations_for_the_spi_calculus","226965679_On_Bisimulations_for_the_Spi_Calculus","224001269_Communication_and_Concurrency","223630020_A_bisimulation_for_dynamic_sealing","222506092_Relational_Interpretations_of_Recursive_Types_in_an_Operational_Setting","221570235_Genericity_and_the_pi-Calculus","220700882_The_Problem_of_Weak_Bisimulation_up_to''","220690524_Communicating_and_Mobile_Systems_The_p-Calculus","220688100_A_Calculus_of_Communicating_System","220673109_A_Bisimulation_Method_for_Cryptographic_Protocols","220425607_Protection_in_Programming_Languages","220404293_An_indexed_model_of_recursive_types_for_foundational_proof-carrying_code","213885330_Foundations_of_Programming_Languages","213881728_Mobile_Values_New_Names_and_Secure_Communication","3707384_Games_and_definability_for_system_F","2815373_Behavioral_Equivalence_in_the_Polymorphic_Pi-Calculus","2680387_Existential_Types_Logical_Relations_and_Operational_Equivalence","2593171_Notions_of_Computation_and_Monads","2577853_The_SLam_Calculus_Programming_with_Secrecy_and_Integrity","2493942_Bisimilarity_for_a_First-Order_Calculus_of_Objects_with_Subtyping","2427398_Proving_Congruence_of_Bisimulation_in_Functional_Programming_Languages","2290090_Operational_Reasoning_for_Functions_With_Local_State"]}