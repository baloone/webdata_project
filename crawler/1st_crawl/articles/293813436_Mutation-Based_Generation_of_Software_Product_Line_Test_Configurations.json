{"id":"293813436_Mutation-Based_Generation_of_Software_Product_Line_Test_Configurations","abstract":"Software Product Lines (SPLs) are families of software products that can be configured and managed through a combination of features. Such products are usually represented with a Feature Model (FM). Testing the entire SPL may not be conceivable due to economical or time constraints and, more simply, because of the large number of potential products. Thus, defining methods for generating test configurations is required, and is now a very active research topic for the testing community. In this context, mutation has recently being advertised as a promising technique. Mutation evaluates the ability of the test suite to detect defective versions of the FM, called mutants. In particular, it has been shown that existing test configurations achieving the mutation criterion correlate with fault detection. Despite the potential benefit of mutation, there is no approach which aims at generating test configurations for SPL with respect to the mutation criterion. In this direction, we introduce a search-based approach which explores the SPL product space to generate product test configurations with the aim of detecting mutants.","authors":["Christopher Henard","Mike Papadakis","Yves Le Traon"],"meta":["August 2014","DOI:10.1007/978-3-319-09940-8_7","Conference: International Symposium on Search Based Software Engineering"],"references":["263949597_Sampling_Program_Inputs_with_Mutation_Analysis_Going_Beyond_Combinatorial_Interaction_Testing","262345570_Multi-objective_test_generation_for_software_product_lines","294738102_On_the_Analysis_of_the_1_1_Evolutionary_Algorithm","289400619_Mutation-driven_generation_of_unit_tests_and_oracles","262349952_Evolutionary_Search-Based_Test_Generation_for_Software_Product_Line_Feature_Models","262293301_Strategies_for_testing_products_in_software_product_lines","262244378_Improving_logic-based_testing","262207145_Continuous_test_suite_augmentation_in_software_product_lines","262160994_Efficiency_and_early_fault_detection_with_lower_and_higher_strength_combinatorial_interaction_testing","261417218_Multi-Objective_Optimal_Test_Suite_Computation_for_Software_Product_Line_Pairwise_Testing"]}