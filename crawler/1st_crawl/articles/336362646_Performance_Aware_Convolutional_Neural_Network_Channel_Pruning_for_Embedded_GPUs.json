{"id":"336362646_Performance_Aware_Convolutional_Neural_Network_Channel_Pruning_for_Embedded_GPUs","abstract":"Convolutional Neural Networks (CNN) are becoming a common presence in many applications and services, due to their superior recognition accuracy. They are increasingly being used on mobile devices, many times just by porting large models designed for server space, although several model compression techniques have been considered. One model compression technique intended to reduce computations is channel pruning. Mobile and embedded systems now have GPUs which are ideal for the parallel computations of neural networks and for their lower energy cost per operation. Specialized libraries perform these neural network computations through highly optimized routines. As we find in our experiments, these libraries are optimized for the most common network shapes, making uninstructed channel pruning inefficient. We evaluate higher level libraries, which analyze the input characteristics of a convolutional layer, based on which they produce optimized OpenCL (Arm Compute Library and TVM) and CUDA (cuDNN) code. However, in reality, these characteristics and subsequent choices intended for optimization can have the opposite effect. We show that a reduction in the number of convolutional channels, pruning 12% of the initial size, is in some cases detrimental to performance, leading to 2x slowdown. On the other hand, we also find examples where performance-aware pruning achieves the intended results, with performance speedups of 3x with cuDNN and above 10x with Arm Compute Library and TVM. Our findings expose the need for hardware-instructed neural network pruning.","authors":["Valentin Radu","Kuba Kaszyk","Yuan Wen","Jack Turner"],"meta":["November 2019","DOI:10.1109/IISWC47752.2019.9042000","Conference: 2019 IEEE International Symposium on Workload Characterization (IISWC)At: Orlando, USA","Project: Bonseyes"],"references":["332682297_Full-System_Simulation_of_Mobile_CPUGPU_Platforms","330638173_Optimising_Convolutional_Neural_Networks_Inference_on_Low-Powered_GPUs","329654398_Profiling_DNN_Workloads_on_a_Volta-based_DGX-1_System","329651760_Characterising_Across-Stack_Optimisations_for_Deep_Convolutional_Neural_Networks","332676301_Analyzing_Machine_Learning_Workloads_Using_a_Detailed_GPU_Simulator","329740202_Squeeze-and-Excitation_Networks","329654928_Benchmarking_and_Analyzing_Deep_Neural_Network_Training","329649114_VComputeBench_A_Vulkan_Benchmark_Suite_for_GPGPU_on_Mobile_and_Embedded_GPUs","325703251_NUMA-Caffe_NUMA-Aware_Deep_Learning_Neural_Networks","322282895_Aging-Aware_Workload_Management_on_Embedded_GPU_Under_Process_Variation"]}