{"id":"311316874_Learning_principles_in_program_visualizations_A_systematic_literature_review","abstract":"Program visualizations help students understand the runtime behavior of other programs. They are educational tools to complement lectures or replace inefficient static drawings. A recent survey found 46 program visualizations developed from 1979 to 2012 reported that their effectiveness is unclear. They also evaluated learner engagement strategies implemented by visualization systems, but other learning principles were not considered. Learning principles are potential key factors in the success of program visualization as learning tools. In this paper, we identified 16 principles that may contribute to the effectiveness of a learning tool based on Vygotsky's learning theory. We hypothesize that some of these principles could be supported by incorporating visual concrete allegories and gamification. We conducted a literature review to know if these principles are supported by existing solutions. We found six new systems between 2012 and 2015. Very few systems consider a learning theory as theoretical framework. Only two out the 16 learning principles are supported by existing visualizations. All systems use unconnected visual metaphors, two use concrete visual metaphors, and one implemented a gamification principle. We expect that using concrete visual allegories and gamification in future program visualizations will significantly improve their effectiveness.","authors":["Jeisson Hidalgo-Céspedes","Gabriela Marín-Raventós","Vladimir Lara-Villagran"],"meta":["October 2016","DOI:10.1109/FIE.2016.7757692","Conference: 2016 IEEE Frontiers in Education Conference (FIE)","Project: Visual allegories and gamification on program visualizations"],"references":["312688996_Program_visualization_and_explanation_for_novice_C_programmers","308852646_Enhancing_object-oriented_programming_education_using_static_and_dynamic_visualization","289761997_A_C_Programming_Learning_Support_System_and_Its_Subjective_Assessment","271560168_Metaphor_in_Computer_Science","269304940_Visualization_of_Execution_of_Programming_Statements","269255342_Runtime_Error_Checking_for_Novice_C_Programmers","266657026_The_state_of_play_A_notional_machine_for_learning_programming","259998484_A_Review_of_Generic_Program_Visualization_Systems_for_Introductory_Programming_Education","259998409_Visual_Program_Simulation_in_Introductory_Programming_Education","259174985_The_design_and_implementation_of_a_notional_machine_for_teaching_introductory_programming","255964908_Using_Flowchart-based_Programming_Environments_for_Simplifying_Programming_and_Software_Engineering_Processes","249732127_Between_extended_metaphor_and_allegory_Is_blending_enough","234814597_Exploring_the_role_of_visualization_and_engagement_in_computer_science_education","234803199_Affective_effects_of_program_visualization","222362249_Animation_Metaphors_for_Object-Oriented_Concepts","220094505_A_Survey_of_Successful_Evaluations_of_Program_Visualization_and_Algorithm_Animation_Systems","26391080_Constructivism_Instructional_Design_and_Technology_Implications_for_Transforming_Distance_Learning","3958984_A_task_oriented_view_of_software_visualization","314722282_Program_animation_based_on_the_roles_of_variables","301428073_Are_visualization_tools_used_in_programming_education","300351336_Virtual-C_-_a_programming_environment_for_teaching_C_in_undergraduate_programming_courses","298041734_Novis_A_Notional_Machine_Implementation_for_Teaching_Introductory_Programming","279355975_Experimentation_in_Software_Engineering","275482661_A_Conveying_Semantics_through_Visual_Metaphor","273947281_The_gamification_of_learning_and_instruction_Game-based_methods_and_strategies_for_training_and_education_San_Francisco_CA_Pfeiffer","262331402_Metaphors_we_teach_by","262315826_Defining_and_evaluating_conflictive_animations_for_programming_education_The_case_of_Jeliot_ConAn","261423295_A_game_concept_using_conflictive_animations_for_learning_programming","257171364_Re-exploring_game-assisted_learning_research_The_perspective_of_learning_theoretical_bases","255896763_Trace-based_teaching_in_early_programming_courses","249933073_Metaphor_as_intellectual_history_Conceptual_categories_underlying_figurative_usage_in_American_English_from_1675-1975","242637318_Emerging_constructivist_forces_in_computer_science_education_shaping_a_new_future_in_t","242567023_The_Contemporary_Theory_of_Metaphor","238625650_PRODUCING_AN_EDUCATIONALLY_EFFECTIVE_AND_USABLE_TOOL_FOR_LEARNING_THE_CASE_OF_JELIOT_FAMILY","234788669_UUhistle_-_A_software_tool_for_visual_program_simulation","234717752_Cognitive_and_Social_Constructivism_Developing_Tools_for_an_Effective_Classroom","232494818_An_introduction_to_cognitive_dissonance_theory_and_an_overview_of_current_perspectives_on_the_theory","230854793_The_Gamification_of_Learning_and_Instruction_Game-based_Methods_and_Strategies_for_Training_and_Eduction","223413389_The_Black_Box_Inside_the_Glass_Box_Presenting_Computing_Concepts_to_Novices","223115349_Taxonomies_of_Visual_Programming_and_Program_Visualization","221537202_Visual_metaphors_for_teaching_programming_concepts","220955795_Program_Animation_Based_on_the_Roles_of_Variables","220578937_A_Principled_Taxonomy_of_Software_Visualization","200827826_Experimentation_In_Software_Engineering_An_Introduction"]}