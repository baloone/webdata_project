{"id":"282699568_Comparison_of_two_different_tree_algorithms","abstract":"The efficiency of two different algorithms of hierarchical force calculation is discussed. Both algorithms utilize the tree structure to reduce the cost of the force calculation from O(N2) to O(N log N). The only difference lies in the method of the construction of the tree. One algorithm uses the oct-tree, which is the recursive division of a cube into eight subcubes. The other method makes the tree by repeatedly replacing a mutually nearest pair in the system by a super-particle. Numerical experiments showed that the cost of the force calculation using these two schemes is quite similar for the same relative accuracy of the obtained force. The construction of the mutual-nearest-neighbor tree is more expensive than the construction of the oct-tree roughly by a factor of 10. On the conventional mainframes this difference is not important because the cost of the tree construction is only a small fraction of the total calculation cost. On vector processors, the oct-tree scheme is currently faster because the tree construction is relatively more expensive on the vector processors.","authors":["J. Making"],"meta":["June 1990Journal of Computational Physics 88(2):393-408","DOI:10.1016/0021-9991(90)90186-5"],"references":["260541931_A_Hierarchical_ON_log_N_Force-Calculation_Algorithm","256431406_Gravitational_N-body_algorithms_A_comparison_between_supercomputers_and_a_highly_parallel_computer","234250016_Error_analysis_of_a_tree_code","225092394_An_Efficient_Program_for_Many-Body_Simulation","225092360_Vectorization_of_Tree_Traversals","222795675_A_modified_tree_code_Don't_laugh_It_runs","222480874_Vectorization_of_a_treecode"]}