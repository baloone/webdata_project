{"id":"322879255_Developing_Assessments_to_Determine_Mastery_of_Programming_Fundamentals","abstract":"Current learning outcomes for introductory programming courses are relatively general, specifying tasks such as designing, implementing, testing and debugging programs that use some fundamental programming constructs. These outcomes impact what we teach, our expectations, and our assessments. Although prior work has demonstrated the utility of single concept assessments, most assessments used in formal examinations combine numerous heterogeneous concepts, resulting in complex and difficult tasks.\nAs a consequence, teachers may not be able to diagnose the actual difficulties faced by students and students are not provided with accurate feedback about their achievements. Such limitations on the nature and quality of feedback to teachers and students alike may contribute to the perceived difficulty and high dropout rates commonly observed in introductory programming courses.\nIn this paper we review the concepts that Computer Science education researchers have identified as important for novice programming. We survey expected learning outcomes for introductory programming courses, and analyse assessments designed for such courses to determine the individual components of syntax and semantics required to complete them. Having recognized the implicit and explicit expectations of novice programming courses, we look at the relationships between components, and progression between concepts. Finally, we demonstrate how some complex assessments can be decomposed into atomic elements that can be assessed independently.","authors":["Andrew Luxton-Reilly","Jacqueline L. Whalley","Brett A Becker","Cao Yingjun"],"meta":["January 2017","DOI:10.1145/3174781.3174784","Conference: the 2017 ITiCSE Conference"],"references":["313013464_The_Compound_Nature_of_Novice_Programming_Assessments","311491524_Developing_a_Computer_Science_Concept_Inventory_for_Introductory_Programming","310818888_Replication_Validation_and_Use_of_a_Language_Independent_CS1_Knowledge_Assessment","307569213_A_Study_of_Code_Design_Skills_in_Novice_Programmers_using_the_SOLO_taxonomy","313020851_Mastery_Learning_in_Introductory_Programming","311476259_Investigating_the_viability_of_mental_models_held_by_novice_programmers","311468612_Fork_diagrams_for_teaching_selection_in_CS_I","310792265_Revisiting_why_students_drop_CS1","310617832_Education_Growing_computer_science_education_into_a_STEM_education_discipline","307945768_Effectiveness_of_mastery_learning_programs_A_meta-analysis"]}