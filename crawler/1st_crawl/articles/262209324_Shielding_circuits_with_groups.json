{"id":"262209324_Shielding_circuits_with_groups","abstract":"We show how to efficiently compile any given circuit C into a leakage-resistant circuit C' such that any function on the wires of C' that leaks information during a computation C'(x) yields advantage in computing the product of |C'|Î©(1) elements of the alternating group Au. In combination with new compression bounds for Au products, also obtained here, C' withstands leakage from virtually any class of functions against which average-case lower bounds are known. This includes communication protocols, and AC0 circuits augmented with few arbitrary symmetric gates. If NC1 ' TC0 then then the construction resists TC0 leakage as well. We also conjecture that our construction resists NC1 leakage. In addition, we extend the construction to the multi-query setting by relying on a simple secure hardware component. We build on Barrington's theorem [JCSS '89] and on the previous leakage-resistant constructions by Ishai et al. [Crypto '03] and Faust et al. [Eurocrypt '10]. Our construction exploits properties of Au beyond what is sufficient for Barrington's theorem.","authors":["Eric Miles","Emanuele Viola"],"meta":["June 2013Proceedings of the Annual ACM Symposium on Theory of Computing","DOI:10.1145/2488608.2488640","Conference: Proceedings of the forty-fifth annual ACM symposium on Theory of computing"],"references":["227343735_Uniform_derandomization_from_pathetic_lower_bounds","220336924_On_the_Impossibility_of_Obfuscating_Programs","220138687_Uniform_Derandomization_from_Pathetic_Lower_Bounds","2562656_The_Division_Breakthroughs","267185998_How_to_Compute_under_calACsf0_Leakage_without_Secure_Hardware","262356200_Leakage-Resilient_Circuits_without_Computational_Assumptions","261455354_How_to_Compute_in_the_Presence_of_Leakage","261243918_New_Limits_to_Classical_and_Quantum_Instance_Compression","257283316_The_theory_of_finite_groups_An_introduction","238831383_On_the_Compressibility_of_mathcalNP_Instances_and_Cryptographic_Applications","237132254_The_communication_complexity_of_threshold_gates","234790546_Founding_crytpography_on_oblivious_transfer","228057650_Multiparty_Protocols_Pseudorandom_Generators_for_Logspace_and_Time-Space_Trade-offs","226964028_The_BNS-Chung_criterion_for_multi-party_communication_complexity","225679785_Physically_Observable_Cryptography","222450604_Bounded-width_polynomial-size_branching_programs_recognize_exactly_those_languages_in_NC1","222440655_Problems_complete_for_deterministic_logarithmic_space","221591793_A_minimal_model_for_secure_computation_extended_abstract","221591638_A_Deconstructive_approach_to_program_checking","221591112_On_the_randomness_complexity_of_efficient_sampling","221591039_Multi-Party_Protocols","221590339_Towards_Optimal_Simulations_of_Formulas_by_Bounded-Width_Programs","221580778_Norms_XOR_Lemmas_and_Lower_Bounds_for_GF2_Polynomials_and_Multiparty_Protocols","221355111_Protecting_Cryptographic_Keys_against_Continual_Leakage","221354783_Securing_Computation_against_Continuous_Leakage","221348450_Protecting_Circuits_from_Leakage_the_Computationally-Bounded_and_Noisy_Cases","220617752_Pseudorandom_Bits_for_Constant-Depth_Circuits_with_Few_Arbitrary_Symmetric_Gates","220617289_Subquadratic_Simulations_of_Balanced_Formulae_by_Branching_Programs","220616387_Cryptography_in_NC","220533693_Communication_Complexity_and_Quasi_Randomness","220138384_A_Deconstructive_Approach_to_Program_Checking","2891825_A_Minimal_Model_for_Secure_Computation","2477978_Physically_Observable_Cryptography"]}