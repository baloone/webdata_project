{"id":"345506840_String_Generation_for_Testing_Regular_Expressions","abstract":"Regular expressions have been widely studied due to their expressiveness and flexibility for various applications. A common yet challenging way to ensure the quality of regular expressions is regular expression testing. In this work, we study coverage criteria-based string generation for testing regular expressions. First, we propose a notion of pairwise coverage criterion for regular expressions and analyze the subsumption relationships with existing coverage criteria for both regular grammars and finite automata. Second, we design an algorithm that given as an input a regular expression, outputs a small set of strings that satisfies the pairwise coverage criterion. Third, we extend the coverage criterion and the generation algorithm to further deal with regular operators counting and interleaving. Fourth, we experimentally demonstrate the effectiveness and efficiency of our algorithms by testing element-type definitions of real-world XML schemas. Finally, we identify more applications of pairwise coverage and its corresponding generation algorithm and show that they can be used to generate characteristic samples for certain regular expression learning algorithms that follow Goldâ€™s learning paradigm of learning (identification) in the limit. These results are not only theoretically meaningful but also useful for practical applications involved with regular expressions.","authors":["Lixiao Zheng","Shuai Ma","Yuanyang Wang","Gang Lin"],"meta":["January 2019The Computer Journal 63(1)","DOI:10.1093/comjnl/bxy137"],"references":["234806396_Inference_of_Concise_Regular_Expressions_and_DTDs","220565910_Software_Unit_Test_Coverage_and_Adequacy","220403858_Towards_an_Engineering_Discipline_for_GRAMMARWARE","220357854_t-Covering_Arrays_Upper_Bounds_and_Poisson_Approximations","220169879_Taxonomy_of_XML_schema_languages_using_formal_language_theory","220130687_A_Toolkit_for_Generating_Sentences_from_Context-Free_Grammars","220123278_On_Lexicographic_Enumeration_Of_Regular_And_Context-Free_Langugages","220117954_On_Automata_and_Language_Based_Grammar_Metrics","2957629_Hints_on_Test_Data_Selection_Help_for_the_Practicing_Programmer","346784287_Fast_Learning_of_Restricted_Regular_Expressions_and_DTDs","323644331_Fault-based_test_generation_for_regular_expressions_by_mutation","290014851_Fault-based_test_of_XML_schemas","272011239_Systematic_rule_analysis_of_generative_design_grammars","236149083_A_new_dichotomic_algorithm_for_the_uniform_random_generation_of_words_in_regular_languages","229873991_Compiler_Testing_using_a_Sentence_Generator","228583312_Two-dimensional_Approximation_Coverage","226788973_A_sentence_generator_for_testing_parsers","222648275_Obtaining_shorter_regular_expressions_from_finite-state_automata","222445347_Language_Identification_in_the_Limit","222388275_Algorithms_for_learning_regular_expressions_from_positive_data","220674007_A_metrics_suite_for_grammar-based_software","220616787_Uniform_Random_Generation_of_Strings_in_a_Context-Free_Language","220566704_A_Survey_of_Combinatorial_Testing","220432484_Inference_of_Reversible_Languages","220280898_A_Tale_of_Two_Greps","220248593_A_Quasi-Polynomial-Time_Algorithm_for_Sampling_Words_From_a_Context-Free_Language","220224505_A_Linear_Algorithm_for_the_Random_Sampling_from_Regular_Languages","220154832_Efficient_Enumeration_of_Words_in_Regular_Languages","220152848_Succinctness_of_regular_expressions_with_interleaving_intersection_and_counting","3191828_Inference_of_k-Testable_Languages_in_the_Strict_Sense_and_Application_to_Syntactic_Pattern_Recognition","3186945_A_Comparison_of_Some_Structural_Testing_Strategies"]}