{"id":"220896176_A_Tactic_Language_for_the_System_Coq","abstract":"We propose a new tactic language for the system Coq, which is intended to enrich the current tactic combinators (tacticals).\nThis language is based on a functional core with recursors and matching operators for Coq terms but also for proof contexts.\nIt can be used directly in proof scripts or in toplevel definitions (tactic definitions). We show that the implementation\nof this language involves considerable changes in the interpretation of proof scripts, essentially due to the matching operators.\nWe give some examples which solve small proof parts locally and some others which deal with non-trivial problems. Finally,\nwe discuss the status of this meta-language with respect to the Coq language and the implementation language of Coq.","authors":["David Delahaye"],"meta":["November 2000Lecture Notes in Computer Science","DOI:10.1007/3-540-44404-1_7","SourceDBLP","Conference: Logic for Programming and Automated Reasoning, 7th International Conference, LPAR 2000, Reunion Island, France, November 11-12, 2000, Proceedings"],"references":["43140549_The_Coq_Proof_Assistant_Reference_Manual_Version_61","321876490_Edinburgh_LCF_A_Mechanised_Logic_of_Computation","267067214_Edinburgh_LCF_A_mechanized_logic_of_computation","242357860_A_mechanised_logic_of_computation","240320611_The_Mizar-QC6000_Logic_Information_Language","238679450_Isomorphisms_of_Types_from_l-calculus_to_information_retrieval_and_language_design","230625839_Introduction_to_HOL_A_Theorem_Proving_Environment_for_Higher_Order_Logic","220805811_PVS_A_Prototype_Verification_System","220718648_A_Natural_Language_Explanation_for_Formal_Proofs","220688092_Edinburgh_LCF"]}