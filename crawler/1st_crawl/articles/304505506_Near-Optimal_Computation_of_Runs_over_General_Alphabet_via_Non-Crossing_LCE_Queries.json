{"id":"304505506_Near-Optimal_Computation_of_Runs_over_General_Alphabet_via_Non-Crossing_LCE_Queries","abstract":"Longest common extension queries (LCE queries) and runs are ubiquitous in algorithmic stringology. Linear-time algorithms computing runs and preprocessing for constant-time LCE queries have been known for over a decade. However, these algorithms assume a linearly-sortable integer alphabet. A recent breakthrough paper by Bannai et.\\ al.\\ (SODA 2015) showed a link between the two notions: all the runs in a string can be computed via a linear number of LCE queries. The first to consider these problems over a general ordered alphabet was Kosolobov (\\emph{Inf.\\ Process.\\ Lett.}, 2016), who presented an $O(n (\\log n)^{2/3})$-time algorithm for answering $O(n)$ LCE queries. This result was improved by Gawrychowski et.\\ al.\\ (accepted to CPM 2016) to $O(n \\log \\log n)$ time. In this work we note a special \\emph{non-crossing} property of LCE queries asked in the runs computation. We show that any $n$ such non-crossing queries can be answered on-line in $O(n \\alpha(n))$ time, which yields an $O(n \\alpha(n))$-time algorithm for computing runs.","authors":["Maxime Crochemore","Costas Iliopoulos","Tomasz Kociumaka","Ritu Kundu"],"meta":["June 2016"],"references":["301899044_Faster_Longest_Common_Extension_Queries_in_Strings_over_General_Alphabets","262234901_Towards_a_Solution_to_the_Runs_Conjecture","258849598_Internal_Pattern_Matching_Queries_in_a_Text_and_Applications","225155687_The_Number_of_Runs_in_a_String_Improved_Analysis_of_the_Linear_Upper_Bound","283836064_Beyond_the_Runs_Theorem","279864407_Computing_Runs_on_a_General_Alphabet","272422674_Beyond_the_Runs_Theorem","262805753_A_new_characterization_of_maximal_repetitions_by_Lyndon_trees","243087453_Decomposition_of_Finite_Graphs_Into_Forests","228917250_Maximal_repetitions_in_strings"]}