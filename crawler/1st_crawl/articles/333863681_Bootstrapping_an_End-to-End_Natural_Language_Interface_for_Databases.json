{"id":"333863681_Bootstrapping_an_End-to-End_Natural_Language_Interface_for_Databases","abstract":"The ability to extract insights from data is critical for decision making. Intuitive natural language interfaces to databases provide non-technical users with an effective way to formulate complex questions and information needs efficiently and effectively. A recent trend in the area of Natural Language Interfaces for Databases (NLIDBs) has been the use of neural machine translation models to synthesize executable Structured Query Language (SQL) queries from natural language utterances. The main bottleneck in this type of approach is the acquisition of examples for training the model. Recent work has assumed access to a rich manually-curated training set for a given target database. However, this assumption ignores the large manual overhead required to curate the training set for any new database. As a result, NLIDB systems that can simply 'plug in' to any new database and perform effectively for naive users have yet to make their way into commercial products. Here we present DBPal, an end-to-end NLIDB framework in which a neural translation model is trained for any new database schema with minimal manual overhead. In addition to being the first off-the-shelf, neural machine translationbased system of its kind, the contributions of our project are 1) its use of a synthetic training set generation pipeline used to bootstrap a translation model without requiring manually curated data, and 2) its use of state-of-the-art multi-task and cross-domain learning techniques that increases the robustness of the translation model towards unseen linguistic phenomena in new domains. In experiments we show that our system can achieve competitive performance on the recently released benchmarks for nl-to-sql translation. Through ablation experiments we show the benefit of using cross-domain learning techniques on the performance of the system. In a user study we show that DBPal outperforms a well-known rule-based NLIDB and performs comparably to an approach using a similar neural model that relies on manually curated data.","authors":["Nathaniel Weir","Prasetya Utama"],"meta":["June 2019","DOI:10.1145/3299869.3300105","Conference: the 2019 International Conference"],"references":["307896995_ATHENA_An_ontology-driven_system_for_natural_language_querying_over_relational_data_stores","270878355_Translating_Questions_to_SQL_Queries_with_Generative_Parsers_Discriminatively_Reranked","334118713_Improving_Text-to-SQL_Evaluation_Methodology","334116386_SyntaxSQLNet_Syntax_Tree_Networks_for_Complex_and_Cross-Domain_Text-to-SQL_Task","334115504_Spider_A_Large-Scale_Human-Labeled_Dataset_for_Complex_and_Cross-Domain_Semantic_Parsing_and_Text-to-SQL_Task","326204972_An_Encoder-Decoder_Framework_Translating_Natural_Language_to_Database_Queries","321069687_SQLNet_Generating_Structured_Queries_From_Natural_Language_Without_Reinforcement_Learning","318739371_Learning_a_Neural_Semantic_Parser_from_User_Feedback","316598507_Learning_a_Neural_Semantic_Parser_from_User_Feedback","314830407_Towards_a_theory_of_natural_language_interfaces_to_databases","301404450_Building_a_Semantic_Parser_Overnight","276465349_Constructing_an_interactive_natural_language_interface_for_relational_databases","271452757_Modern_natural_language_interfaces_to_databases","266656491_NaLIR_An_interactive_natural_language_interface_for_querying_relational_databases","228529133_Modern_natural_language_interfaces_to_databases_Composing_statistical_parsing_with_semantic_tractability","220887415_A_Domain_Independent_Natural_Language_Interface_to_Databases_Capable_of_Processing_Complex_Queries","2778059_Learning_to_Parse_Database_Queries_Using_Inductive_Logic_Programming","2476805_Towards_a_Theory_of_Natural_Language_Interfaces_to_Databases"]}