{"id":"316940551_From_Scratch_to_Patch_Easing_the_Blocks-Text_Transition","abstract":"A significant consequence of the phenomenal success of block-based languages such as Scratch in introducing novices to computer programming, coupled with the fact that \"real world\" programming is generally performed via textual languages, has been that educators have been increasingly forced to address the question of how one may best facilitate this transition. Yet if transfer of computational thinking (CT) skills from one language to another is to occur such skills must exist in the first place, and therefore prior to the issue of transition one must also consider the extent to which a first language provides support for their development. Drawing upon experience gained as a teacher of Computing to children in UK Key Stages 1, 2 and 3, using both Scratch and Python, this discussion presents the pedagogical arguments for a modified version of Scratch 1.4 called \"Patch\". Patch addresses these issues by providing inter alia an integrated tracing/debugging tool and user-editable pseudo-code blocks to assist algorithm development and implementation. In addition to providing enhanced support for the teaching of CT skills, Patch also introduces new iterator blocks and user-defined functions with Python-like syntax, as well as a number of other syntactical changes, in order to prepare for and minimise the gap between these two languages.","authors":["William Robinson"],"meta":["October 2016","DOI:10.1145/2978249.2978265","Conference: Proceedings of the 11th Workshop in Primary and Secondary Computing Education"],"references":["301429113_Code_or_not_code_Separating_Formal_and_Natural_Language_in_CS_Education","301237469_Computing_in_the_curriculum_Challenges_and_strategies_from_a_teacher's_perspective","287209315_Frame-Based_Editing_Easing_the_Transition_from_Blocks_to_Text-Based_Programming","273758977_Teaching_Programming_with_Computational_and_Informational_Thinking","266657024_Programming_Reading_writing_and_reversing","259998496_Notional_Machines_and_Introductory_Programming_Education","234796737_Learning_to_Program_Learning_to_Construct_Mechanisms_and_Explanations","220420651_Cognitive_Strategies_and_Looping_Constructs_An_Empirical_Study","220278819_The_Problem_of_Teaching_Object-Oriented_Programming_Part_I_Languages","37146937_Debugging_Finding_fixing_and_flailing_a_multi-institutional_study_of_novice_debuggers","31597385_What_About_a_Simple_Language_Analyzing_the_Difficulties_in_Learning_to_Program","317953561_Mind_in_society_The_development_of_higher_psychological_processes","308602299_Blocks_at_your_fingertips_Blurring_the_line_between_blocks_and_text_in_GP","304417737_Further_evidence_of_a_relationship_between_explaining_tracing_and_writing_skills_in_introductory_programming","304285713_Extending_Scratch_New_pathways_into_programming","300918005_Scratch_A_Way_to_Logo_and_Python","287391362_Learner-Centered_Design_of_Computing_Education_Research_on_Computing_for_Everyone","278358129_Starting_from_scratch","263610466_Out_of_our_minds_A_review_of_sociocultural_cognition_theory","254462922_The_Abstraction_transition_taxonomy_Developing_desired_learning_outcomes_through_the_lens_of_situated_cognition","239646464_The_problem_of_teaching_object-oriented_programming","231167919_Some_Difficulties_of_Learning_to_Program","231167898_Some_Difficulties_of_Learning_to_Program","220808157_Habits_of_programming_in_scratch","220286390_Can_Direct_Manipulation_Lower_the_Barriers_to_Computer_Programming_and_Promote_Transfer_of_Training_An_Experimental_Study","209409704_Teaching_for_Transfer","200772793_L_S_Vygotsky_Mind_in_Society_The_Development_of_Higher_Psychological_Processes"]}