{"id":"289202822_Partially_polynomial_kernels_for_Set_Cover_and_Test_Cover","abstract":"In a typical covering problem we are given a universe U of size n, a family S (S could be given implicitly) of size m and an integer κ and the objective is to check whether there exists a subfamily S′ ⊆ S of size at most κ satisfying some desired properties. If S′ is required to contain all the elements of U then it corresponds to the classical Set Cover problem. On the other hand if we require S′ to satisfy the property that for every pair of elements x, y ∈U there exists a set S ∈ S′ such that |S ∩ {x, y}| = 1 then it corresponds to the Test Cover problem. In this paper we consider a natural parameterization of Set Cover and Test Cover. More precisely, we study the (n - κ)-Set Cover and (n - κ)-Test Cover problems, where the objective is to find a subfamily S0 of size at most n - κ satisfying the respective properties, from the kernelization perspective. It is known in the literature that both (n-κ)-Set Cover and (n-κ)-Test Cover do not admit polynomial kernels (under some well known complexity theoretic assumptions). However, in this paper we show that they do admit \" partially polynomial kernels\" . More precisely, we give polynomial time algorithms that take as input an instance (U, S, κ) of (n-κ)-Set Cover ((n-κ)-Test Cover) and return an equivalent instance ( U,S, κ) of (n-κ)-Set Cover (respectively (n - κ)-Test Cover) with κ ≤ κ and | U| = Oκ 2) (| U| = O(κ 7)). These results allow us to generalize, improve and unify several results known in the literature. For example, these immediately imply traditional kernels when input instances satisfy certain \" sparsity properties\" . Using a part of our kernelization algorithm for (n - κ )-Set Cover, we also get an improved FPT algorithm for this problem which runs in time O(4κκO(1)(m + n)) improving over the previous best of O(8κ+o (κ)(m + n) O (1)). On the other hand the partially polynomial kernel for (n - κ)-Test Cover implies the first single exponential FPT algorithm, an algorithm with running time O(2O(κ 2)(m+n) O (1)). We believe such an approach will also be useful for other covering problems as well. ©Manu Basavaraju, Mathew C. Francis, M. S. Ramanujan, and Saket Saurabh;.","authors":["M. Basavaraju","Mathew C Francis","Ramanujan M S","Saket Saurabh"],"meta":["December 2013","DOI:10.4230/LIPIcs.FSTTCS.2013.67"],"references":["233815474_Parameterized_Study_of_the_Test_Cover_Problem","220980136_Average_Parameterization_and_Partial_Kernelization_for_Computing_Medians","224709619_Non-existence_of_Polynomial_Kernels_for_the_Test_Cover_Problem","220224235_On_Two_Techniques_of_Combining_Branching_and_Treewidth"]}