{"id":"348671594_Quantum_Computer_Architecture_Toward_Full-Stack_Quantum_Accelerators","abstract":"This article presents the definition and implementation of a quantum computer architecture to enable creating a new computational device-a quantum computer as an accelerator. A key question addressed is what such a quantum computer is and how it relates to the classical processor that controls the entire execution process. In this article, we present explicitly the idea of a quantum accelerator that contains the full stack of the layers of an accelerator. Such a stack starts at the highest level describing the target application of the accelerator. The next layer abstracts the quantum logic outlining the algorithm that is to be executed on the quantum accelerator. In our case, the logic is expressed in the universal quantum-classical hybrid computation language developed in the group, called OpenQL, which visualized the quantum processor as a computational accelerator. The OpenQL compiler translates the program to a common assembly language, called cQASM, which can be executed on a quantum simulator. The cQASM represents the instruction set that can be executed by the microarchitecture implemented in the quantum accelerator. In a subsequent step, the compiler can convert the cQASM to generate the eQASM, which is executable on a particular experimental device incorporating the platform-specific parameters. This way, we are able to distinguish clearly the experimental research toward better qubits, and the industrial and societal applications that need to be developed and executed on a quantum device. The first case offers experimental physicists with a full-stack experimental platform using realistic qubits with decoherence and error-rates, whereas the second case offers perfect qubits to the quantum application developer, where there is neither decoherence nor error-rates. We conclude the article by explicitly presenting three examples of full-stack quantum accelerators, for an experimental superconducting processor, for quantum accelerated genome sequencing and for near-term generic optimization problems based on quantum heuristic approaches. The two later full-stack models are currently being actively researched in our group.","authors":["Koen Bertels","Aritra Sarkar","Thomas Hubregtsen","M. Serrao"],"meta":["January 2020","DOI:10.1109/TQE.2020.2981074"],"references":["346435038_Scaffold_Quantum_Programming_Language","322243414_Quantum_Computing_in_the_NISQ_era_and_beyond","275661228_Demonstration_of_a_quantum_error_detection_code_using_a_square_lattice_of_four_superconducting_qubits","273718902_Memrisor_Based_Computation-in-Memory_Architecture_for_Data-Intensive_Applications","268988560_State_preservation_by_repetitive_error_detection_in_a_superconducting_quantum_circuit","268525658_Detecting_bit-flip_errors_in_a_logical_qubit_using_stabilizer_measurements","261154346_Minimizing_the_latency_of_quantum_circuits_during_mapping_to_the_ion-trap_circuit_fabric","230609289_Surface_codes_Towards_practical_large-scale_quantum_computation","51958815_Surface_code_quantum_computing_by_lattice_surgery","3044836_The_MOLEN_polymorphic_processor","2956450_A_layered_software_architecture_for_quantum_computing_design_tools","2506265_Good_Quantum_Error-Correcting_Codes_Exist","2201469_Multiple_Particle_Interference_and_Quantum_Error_Correction","2189496_A_Quantum_Computer_Architecture_using_Nonlocal_Interactions","345470724_eQASM_An_Executable_Quantum_Instruction_Set_Architecture","323503314_Q_Enabling_Scalable_Quantum_Computing_and_Development_with_a_High-level_DSL","320324848_Hardware_Acceleration_of_BWA-MEM_Genomic_Short_Read_Mapping_with_Longer_Read_Length","301880546_A_Software_Methodology_for_Compiling_Quantum_Programs","301075434_Quantum_Error_Correction","286821818_Quantum_error_correction","279865701_PAQCS_Physical_Design-Aware_Fault-Tolerant_Quantum_Circuit_Synthesis","262321971_A_blueprint_for_building_a_quantum_computer","255904253_Quantum_Mechanics_Helps_in_Searching_for_a_Needle_in_a_Haystack","236235374_An_Introduction_to_Quantum_Programming_in_Quipper","235575232_Grover's_quantum_searching_algorithm_is_optimal","226810696_Simulating_physics_with_computers_Int_J_Theor_Phys_2167467-488","13375764_Shor_P_W_Scheme_for_reducing_decoherence_in_quantum_computer_memory_Phys_Rev_A_52_R2493-R2496","13374808_Class_of_quantum_error-correcting_codes_saturating_the_quantum_Hamming_bound","6643094_Topological_Quantum_Distillation","2661734_Algorithms_for_Quantum_Computation_Discrete_Logarithms_and_Factoring","2344092_Artificial_Associative_Memory_Using_Quantum_Processes","2184095_The_Physical_Implementation_of_Quantum_Computation"]}