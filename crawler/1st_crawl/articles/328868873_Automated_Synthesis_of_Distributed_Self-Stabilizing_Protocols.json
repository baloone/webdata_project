{"id":"328868873_Automated_Synthesis_of_Distributed_Self-Stabilizing_Protocols","abstract":"In this paper, we introduce an SMT-based method that automatically synthe-sizes a distributed self-stabilizing protocol from a given high-level specification and network topology. Unlike existing approaches, where synthesis algorithms require the explicit de- scription of the set of legitimate states, our technique only needs the temporal behavior of the protocol. We extend our approach to synthesize ideal-stabilizing protocols, where every state is legitimate. We also extend our technique to synthesize monotonic-stabilizing protocols, where during recovery, each process can execute an most once one action. Our proposed methods are fully implemented and we report successful synthesis of well-known protocols such as Dijkstra's token ring, a self-stabilizing version of Raymond's mutual exclusion algorithm, ideal-stabilizing leader election and local mutual exclusion, as well as monotonic-stabilizing maximal independent set and distributed Grundy coloring.","authors":["Fathiyeh Faghih","Borzoo Bonakdarpour","Sebastien Tixeuil","Sandeep Kulkarni"],"meta":["January 2018Logical Methods in Computer Science 14(1)","DOI:10.23638/LMCS-14(1:12)2018"],"references":["282000374_Specification-based_Synthesis_of_Distributed_Self-Stabilizing_Protocols","320248487_ASSESS_A_Tool_for_Automated_Synthesis_of_Distributed_Self-stabilizing_Algorithms","305744485_Symbolic_Synthesis_of_Timed_Models_with_Strict_2-Phase_Fault_Recovery","305253127_Synthesis_of_Self-Stabilising_and_Byzantine-Resilient_Distributed_Systems","303482290_Specification-Based_Synthesis_of_Distributed_Self-Stabilizing_Protocols","300009759_Synthesizing_Self-stabilization_through_Superposition_and_Backtracking","285448511_On_the_Complexity_of_Adding_Convergence","278393840_Synthesizing_bounded-time_2-phase_fault_recovery","277296348_Distributed_Algorithms","273166810_Specification-Based_Design_of_Self-Stabilization"]}