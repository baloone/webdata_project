{"id":"318870861_Unanticipated_Debugging_with_Dynamic_Layers","abstract":"To debug running software we need unanticipated adaptation capabilities, especially when systems cannot be stopped, updated and restarted. Adapting such programs at runtime is an extreme solution given the delicate live contexts the debugging activity takes place. We introduce the Dynamic Layer, a construct in which behavioral variations are gathered and activated as a whole set of adaptations. Dimensions of Dynamic Layers activation are reified to allow very fine definitions of layer scopes and a fine grained selection of adapted entities. This paper describes and discusses the Dynamic Layer solution to perform unanticipated runtime debugging. An experimental implementation with the Pharo language is evaluated through a runtime adaptation example.","authors":["Steven Costiou","MickaÃ«l Kerboeuf","Marcus Denker","Alain Plantec"],"meta":["April 2017","DOI:10.1145/3079368.3079391","Conference: the International Conference","Project: Unanticipated behavior adaptation: application to the debugging of running programs"],"references":["305525061_Consistent_Unanticipated_Adaptation_for_Context-Dependent_Applications","254041570_Object-centric_debugging","221587915_Unanticipated_Partial_Behavioral_Reflection","309443485_Lub_a_DSL_for_Dynamic_Context_Oriented_Programming","308761582_Generalized_Layer_Activation_Mechanism_for_Context-Oriented_Programming","305524894_Transaction_Layers_Controlling_Granularity_of_Change_in_Live_Programming_Environments","271143323_Context-oriented_Programming","260559027_Talents_An_environment_for_dynamically_composing_units_of_reuse","241081270_Unrestricted_and_safe_dynamic_code_evolution_for_Java","221496623_Pitfalls_in_Unanticipated_Dynamic_Software_Evolution"]}