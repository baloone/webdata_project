{"id":"223778632_On_the_effectiveness_of_phase_based_regression_models_to_trade_power_and_performance_using_dynamic_processor_adaptation","abstract":"Microarchitecture optimizations, in general, exploit the gross program behavior for performance improvement. Programs may be viewed as consisting of different “phases” which are characterized by variation in a number of processor performance metrics. Previous studies have shown that many of the performance metrics remain nearly constant within a “phase”. Thus, the change in program “phases” may be identified by observing the change in the values of these metrics. This paper aims to exploit the time varying behavior of programs for processor adaptation. Since the resource usage is not uniform across all program “phases”, the processor operates at varying levels of underutilization. During phases of low available Instruction Level Parallelism (ILP), resources may not be fully utilized while in other phases, more resources may be required to exploit all the available ILP. Thus, dynamically scaling the resources based on program behavior is an attractive mechanism for power–performance trade-off. In this paper we develop per-phase regression models to exploit the phase behavior of programs and adequately allocate resources for a target power–performance trade-off. Modeling processor performance–power using such a regression model is an efficient method to evaluate an architectural optimization quickly and accurately. We also show that the per-phase regression model is better suited than an “unified” regression model that does not use phase information. Further, we describe a methodology to allocate processor resources dynamically by using regression models which are developed at runtime. Our simulation results indicate that average energy savings of 20% can be achieved with respect to a maximally configured system with negligible impact on performance for most of the SPEC-CPU and MEDIA benchmarks.","authors":["Subhasis Banerjee","Grandhi Surendra","S. K. Nandy"],"meta":["August 2008Journal of Systems Architecture 54(8):797-815","DOI:10.1016/j.sysarc.2008.02.003"],"references":["239595712_HotLeakage_A_Temperature-Aware_Model_of_Subthreshold_and_Gate_Leakage_for_Architects","228343436_Architecture-Level_Power_Optimization-What_Are_the_Limits","220771936_Reconfigurable_caches_and_their_application_to_media_processing","220767749_A_Detailed_Study_on_Phase_Predictors","220526294_Energy-efficient_issue_queue_design","4038496_Characterizing_and_Predicting_Program_Behavior_and_its_Variability","4020447_Positional_adaptation_of_processors_Application_to_energy_reduction","4005848_A_statistically_rigorous_approach_for_improving_simulation_methodology","3940924_MiBench_A_free_commercially_representative_embedded_benchmark_suite","3624420_Instruction_level_power_analysis_and_optimization_of_software","2943939_A_Statistically_Rigorous_Approach_for_Improving_Simulation_Methodology","2796941_Instruction_Level_Power_Analysis_and_Optimization_of_Software","2558519_Positional_Adaptation_of_Processors_Application_to_Energy_Reduction","311475466_Measurement_and_analysis_of_locality_phases_in_file_referencing_behaviour","305261374_Properties_of_the_Working-Set_Model","274053884_A_First-Order_Superscalar_Processor_Model","268239464_Positional_adaptation_of_processors","259310412_The_Art_of_Computer_Systems_Performance_Analysis_Techniques_For_Experimental_Design_Measurement_Simulation_and_Modeling_NY_Wiley","242354397_Martonosi_wattch_a_framework_for_architectural-level_power_analysis_and_optimizations","234819208_The_Working_Set_Model_for_Program_Behavior","232648776_Transition_Phase_Classification_and_Prediction","224748862_Timing_reconfigurable_microarchitectures_for_power_efficiency","221596602_Measurement_and_Analysis_of_Locality_Phases_in_File_Referencing_Behaviour","221153642_Program_Phase_Directed_Dynamic_Cache_Way_Reconfiguration_for_Power_Efficiency","221005370_A_Predictive_Performance_Model_for_Superscalar_Processors","221005311_Theoretical_modeling_of_superscalar_processor_performance","221005060_Memory_hierarchy_reconfiguration_for_energy_and_performance_in_general-purpose_processor_architectures","220938959_Accurate_and_efficient_regression_modeling_for_microarchitectural_performance_and_power_prediction","220421904_The_Working_Set_Model_for_Program_Behaviour","220419879_Properties_of_the_Working_Set_Model","220170085_A_Low-Power_In-OrderOut-Of-Order_Issue_Queue","200656985_Design_and_Analysis_of_Experiments_2nd_Ed","31663439_The_Art_of_Computer_Systems_Performance_Analysis_Techniques_for_Experimental_Design_Measurement_Simulation_and_Modeling_R_Jain","4224584_Construction_and_Use_of_Linear_Regression_Models_for_Processor_Performance_Analysis","4079957_A_first-order_superscalar_processor_model","4020452_Phase_tracking_and_prediction","3965459_Tradeoffs_in_power-efficient_issue_queue_design","3948543_Managing_multi-configuration_hardware_via_dynamic_working_setanalysis","3916455_Basic_block_distribution_analysis_to_find_periodic_behavior_andsimulation_points_in_applications","3905726_Energy-effective_issue_logic","3893074_Power_aware_microarchitecture_resource_scaling","3885099_Memory_hierarchy_reconfiguration_for_energy_and_performance_ingeneral-purpose_processor_architectures","3854062_Wattch_A_framework_for_architectural-level_power_analysis_and_optimizations","3830408_Selective_cache_ways_On-demand_cache_resource_allocation","3455664_MinneSPEC_A_New_SPEC_Benchmark_Workload_for_Simulation-Based_Computer_Architecture_Research","3215098_Design_Challenges_of_Technology_Scaling","2956031_Dynamically_tuning_resources_with_adaptive_processing","2634260_Selective_Cache_Ways_On-Demand_Cache_Resource_Allocation","2558007_Power_Aware_Microarchitecture_Resource_Scaling","2556955_Phase_Tracking_and_Prediction","2395780_Evaluating_Future_Microprocessors_the_SimpleScalar_Tool_Set","2533880_Managing_Multi-Configurable_Hardware_via_Dynamic_Working_Set_Analysis","2430279_Power_Considerations_in_the_Design_of_the_Alpha_21264_Microprocessor"]}