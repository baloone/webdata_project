{"id":"274056329_Online-ABFT","abstract":"Soft errors are one-time events that corrupt the state of a computing system but not its overall functionality. Large supercomputers are especially susceptible to soft errors because of their large number of components. Soft errors can generally be detected offline through the comparison of the final computation results of two duplicated computations, but this approach often introduces significant overhead. This paper presents Online-ABFT, a simple but efficient online soft error detection technique that can detect soft errors in the widely used Krylov subspace iterative methods in the middle of the program execution so that the computation efficiency can be improved through the termination of the corrupted computation in a timely manner soon after a soft error occurs. Based on a simple verification of orthogonality and residual, Online-ABFT is easy to implement and highly efficient. Experimental results demonstrate that, when this online error detection approach is used together with checkpointing, it improves the time to obtain correct results by up to several orders of magnitude over the traditional offline approach.","authors":["Zizhong Chen"],"meta":["August 2013ACM SIGPLAN Notices 48(8):167","DOI:10.1145/2517327.2442533"],"references":["225279464_Fault-tolerant_linear_solvers_via_selective_reliability","224140657_Algorithmic_Cholesky_factorization_fault_recovery","221643464_Fault_tolerant_high_performance_computing_by_a_coding_approach","221235928_Soft_error_vulnerability_of_iterative_linear_algebra_methods","220949432_A_job_pause_service_under_LAMMPI_BLCR_for_transparent_fault_tolerance","220857829_Numerically_Stable_Real_Number_Codes_Based_on_Random_Matrices","220782553_Optimal_real_number_codes_for_fault_tolerant_matrix_operations","220782292_Poster_a_tunable_software-based_DRAM_error_detection_and_correction_library_for_HPC","220717765_Algorithm-based_recovery_for_iterative_methods_without_checkpointing","220329782_Highly_Scalable_Self-Healing_Algorithms_for_High_Performance_Scientific_Computing","220293505_Algorithm-Based_Fault_Tolerance_for_Fail-Stop_Failures","2209150_Condition_Numbers_of_Gaussian_Random_Matrices","284788970_Failure_tolerance_in_petascale_computers","257013699_A_higher_order_estimate_of_the_optimum_checkpoint_interval_for_restart_dumps","238721312_LAM_An_open_cluster_environment_for_MPI","229736939_Component-based_iterative_methods_for_sparse_linear_systems","224140634_Analyzing_the_soft_error_resilience_of_linear_solvers_on_multicore_multiprocessors","221235604_High_performance_linpack_benchmark_A_fault_tolerant_implementation_without_checkpointing","221235515_Characterizing_the_impact_of_soft_errors_on_iterative_methods_in_scientific_computing","220457285_Toward_Exascale_Resilience","220104597_PVM_A_Framework_for_Parallel_Distributed_Computing","3300302_Diskless_Checkpointing","3048465_Algorithm-Based_Fault_Tolerance_for_Matrix_Operations"]}