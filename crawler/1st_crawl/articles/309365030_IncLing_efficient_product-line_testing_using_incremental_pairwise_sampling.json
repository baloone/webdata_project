{"id":"309365030_IncLing_efficient_product-line_testing_using_incremental_pairwise_sampling","abstract":"A software product line comprises a family of software products that share a common set of features. It enables customers to compose software systems from a managed set of features. Testing every product of a product line individually is often infeasible due to the exponential number of possible products in the number of features. Several approaches have been proposed to restrict the number of products to be tested by sampling a subset of products achieving sufficient combinatorial interaction coverage. However, existing sampling algorithms do not scale well to large product lines, as they require a considerable amount of time to generate the samples. Moreover, samples are not available until a sampling algorithm completely terminates. As testing time is usually limited, we propose an incremental approach of product sampling for pairwise interaction testing (called IncLing), which enables developers to generate samples on demand in a step-wise manner. Furthermore, IncLing uses heuristics to efficiently achieve pairwise interaction coverage with a reasonable number of products. We evaluated IncLing by comparing it against existing sampling algorithms using feature models of different sizes. The results of our approach indicate efficiency improvements for product-line testing.","authors":["Mustafa Al-Hajjaji","Sebastian Krieter","Thomas Th√ºm","Malte Lochau"],"meta":["October 2016ACM SIGPLAN Notices","DOI:10.1145/2993236.2993253","Conference: the 2016 ACM SIGPLAN International Conference"],"references":["292154862_Scalable_Sampling_and_Prioritization_for_Product-Line_Testing","267728623_Similarity-Based_Prioritization_in_Software_Product-Line_Testing","262404015_Integration_Testing_of_Software_Product_Lines_Using_Compositional_Symbolic_Execution","262310810_Scalable_analysis_of_variable_software","262202774_Towards_efficient_SPL_testing_by_variant_reduction","233753089_Bypassing_the_Combinatorial_Explosion_Using_Similarity_to_Generate_andPrioritize_T-wise_Test_Suites_for_Large_Software_Product_Lines","223760542_Automated_analysis_of_feature_models_20_years_later_A_literature_review","220882857_IPOG_A_general_strategy_for_T-way_software_testing","220854710_Interaction_testing_of_highly-configurable_systems_in_the_presence_of_constraints","220854495_Coverage_and_adequacy_in_software_product_line_testing","215588544_Pairwise_Testing_for_Software_Product_Lines_Comparison_of_Two_Approaches","215588350_Automated_and_Scalable_T-wise_Test_Case_Generation_Strategies_for_Software_Product_Lines","215588323_Feature-Oriented_Domain_Analysis_FODA_feasibility_study","3188430_Software_Fault_Interactions_and_Implications_for_Software_Testing","316899963_Tool_demo_testing_configurable_systems_with_FeatureIDE","316269438_Feature-Oriented_Software_Product_Lines","309364853_Tool_demo_testing_configurable_systems_with_FeatureIDE","303099517_A_Comparison_of_10_Sampling_Algorithms_for_Configurable_Systems","299355740_A_Quantitative_Analysis_of_Variability_Warnings_in_Linux","262252779_Incremental_Model-Based_Testing_of_Delta-Oriented_Software_Product_Lines","261599649_On_Strategies_for_Testing_Software_Product_Lines_A_Systematic_Literature_Review","247572908_Software_Product_Lines-Practices_and_Patterns","241770924_An_algorithm_for_generating_t-wise_covering_arrays_from_large_feature_models","233344499_FeatureIDE_An_Extensible_Framework_for_Feature-Oriented_Software_Development","221631756_MoSo-PoLiTe_-_Tool_support_for_pairwise_and_model-based_software_product_line_testing","221591101_The_Complexity_of_Theorem-Proving_Procedures","221223807_Properties_of_Realistic_Feature_Models_Make_Combinatorial_Testing_of_Product_Lines_Feasible","221014836_Reducing_combinatorics_in_testing_product_lines","220789694_Automated_Incremental_Pairwise_Testing_of_Software_Product_Lines","220693462_Software_Product_Line_Engineering_Foundations_Principles_and_Techniques","220277790_Evaluating_improvements_to_a_meta-heuristic_search_for_constrained_interaction_testing","215697425_Scaling_Step-Wise_Refinement","213882667_Generative_Programming_Methods_Tools_and_Applications","200110483_A_Greedy_Heurisic_for_the_Set-Covering_Problem","4377050_The_Product_Line_Hall_of_Fame","3188431_Scaling_Step-Wise_Refinement","3187965_Distributed_Feature_Composition_A_Virtual_Architecture_For_Telecommunications_Services","2588429_The_Non-Approximability_of_Non-Boolean_Predicates"]}