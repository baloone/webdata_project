{"id":"220691656_Categories_for_Software_Engineering","abstract":"This book provides a gentle, software engineering oriented introduction to category theory. Assuming only a minimum of mathematical preparation, this book explores the use of categorical constructions from the point of view of the methods and techniques that have been proposed for the engineering of complex software systems: Object-oriented development, software architectures, logical and algebraic specification techniques, models of concurrency, inter alia. After two parts in which basic and more advanced categorical concepts and techniques are introduced, the book illustrates their application to the semantics of CommUnity - a language for the architectural design of interactive systems. \"For computer scientists, this unique book presents Category Theory in a manner tailored to their interests and with examples to which they can relate.\" Ira Forman, IBM \"This book applies little-known yet quite powerful formal tools from category theory to software structures: designs, architectures, patterns, and styles. Rather than focus on issues at the level of computational models and semantics, it instead applies these tools to some of the problems facing the sophisticated software architect. The terminology and mind set (Parts 1 and 2), while different from many common approaches, can provide startlingly concise expression of key properties of software systems (Part 3), and give rigorous meaning to entire families of box-and-line architecture drawings. It is applicable to the formal specification, decomposition, and composition of service-oriented architectures.\" Desmond D'Souza, Kinetium.","authors":["Jos√© Luiz Fiadeiro"],"meta":["January 2005","DOI:10.1007/b138249","SourceDBLP","Publisher: SpringerISBN: 978-3-540-20909-6"],"references":["243704534_Refinement_calculus_II_parallel_and_reactive_pro-grams","242389155_Categories_types_and_structures_-_an_introduction_to_category_theory_for_the_working_computer_scientist","226574831_Unifying_theories_in_different_institutions","225574640_Chapter_5_A_Mathematical_Semantics_for_Architectural_Connectors","224001127_Software_Architecture_In_Practice","222475366_Models_for_Concurrency_Towards_a_Classification","222471617_Constructing_specification_morphisms","222277462_Petri_nets_algebras_morphisms_and_compositionality","221560174_Interconnecting_Formalisms_Supporting_Modularity_Reuse_and_Incrementality","221115401_Using_Explicit_State_to_Describe_Architectures","220917364_Semantics_of_Architectural_Connectors","220608424_Applications_of_Category_Theory_to_the_Area_of_Algebraic_Specification_in_Computer_Science","220421147_Programming_by_Multiset_Transformation","220403678_Conjunction_as_Composition","220197808_Toward_Formal_Development_of_Programs_From_Algebraic_Specifications_Parameterisation_Revisited","220173426_Mirror_Mirror_in_my_Hand_A_Duality_between_Specifications_and_Models_of_Process_Behaviour","285332022_An_initial_algebra_bra_approach_to_the_specification_correctness_and_implementation_of_abstract_data_types","283407439_Objects","267085267_A_Categorical_Approach_to_General_Systems","265457621_Parallel_Program_Design_A_Foundation","265424019_An_Introduction_to_Higher_Order_Categorical_Logic","256554929_Some_fundamental_algebraic_tools_for_the_semantics_of_computation_Part_2_Signed_and_abstract_theories","245243143_Algebraic_Foundations_of_Systems_Specification","243786724_Categories_of_Asynchronous_Transition_Systems","243768073_Abstract_and_Concrete_Categories","243718660_Mathematical_Representation_of_Hierarchically_Organised_Systems","242609424_A_junction_between_computer_science_and_category_theory_i_basic_concepts_and_examples","242609111_Categorical_foundations_for_general_systems_theory","242507208_Reusing_and_interconnecting_reusable_components","242466958_Principles_of_parameterized_programming","238731326_Program_development_and_theory_manipulation","238711058_Arrows_Structures_and_Functors_The_Categorical_Imperative","234778153_Putting_theories_together_to_make_specifications","225529039_The_semantics_of_CLEAR_a_specification_language","223290295_Some_Fundamental_Algebraic_Tools_for_the_Semantics_of_Computation_Part_1_Comma_Categories_Colimits_Signatures_and_Theories","222477350_Chemical_abstract_machine","222302818_Categorical_semantics_of_parallel_program_design","222279869_Some_Fundamental_Algebraic_Tools_for_the_Semantics_of_Computation_Part_3_Indexed_Categories","222136636_On_the_Modularization_Theorem_for_logical_specifications","221653082_On_the_Relation_of_Programs_and_Computations_to_Models_of_Temporal_Logic","221233566_A_Study_in_the_Functions_of_Programming_Methodology_Specifications_Institutions_Charters_and_Parchments","220977106_Algebraic_Semantics_of_Coordination_or_What_Is_in_a_Signature","220917296_A_Theory_of_Abstract_Data_Types_for_Program_Development_Bridging_the_Gap","220827120_Synthesis_of_Communicating_Processes_from_Temporal_Logic_Specifications","220695828_Conceptual_Mathematics_A_First_Introduction_to_Categories","220691514_Basic_Category_Theory_for_Computer_Scientists","220476494_Reusing_and_Interconnecting_Software_Components","220475748_Feature_Interactions_and_Formal_Specifications_in_Telecommunications","220431549_Institutions_Abstract_Model_Theory_for_Specification_and_Programming","220266011_Procedure_Calls_Are_the_Assembly_Language_of_Software_Interconnection_Connectors_Deserve_First-Class_Status","220155435_Synchronization_Trees","220102576_Temporal_Theories_as_Modularisation_Units_for_Concurrent_System_Specification","42789019_A_mathematical_semantics_for_architectural_connectors","200040506_Software_Architecture_Perspectives_On_an_Emerging_Discipline","200040351_Coordination_Languages_and_Their_Significance"]}