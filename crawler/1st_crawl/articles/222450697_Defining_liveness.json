{"id":"222450697_Defining_liveness","abstract":"A formal definition for liveness properties is proposed. It is argued that this definition captures the intuition that liveness properties stipulate that ‘something good’ eventually happens during execution. A topological characterization of safety and liveness is given. Every property is shown to be the intersection of a safety property and a liveness property.","authors":["Bowen Alpern","Fred B. Schneider"],"meta":["October 1985Information Processing Letters 21(4):181-185","DOI:10.1016/0020-0190(85)90056-0","SourceDBLP"],"references":["220404706_Lamport_L_Proving_Liveness_Properties_of_Concurrent_Programs_TOPLAS_43_455-495","285374185_Verification_of_concurrent_programs_the_temporal_framework_in_The_Correctness_Problem_in_Computer_Science","247710975_TEMPORAL_VERI_CATION_OF_CONCURRENT_PROGRAMS_THE_TEMPORAL_FRAMEWORK_FOR_CONCURRENT_PROGRAMS","234790869_Distributed_systems_methods_and_tools_for_specification_An_advanced_course","226358196_Power_domains_and_predicate_transformers_A_topological_view","222438487_Safety_without_stuttering","221621698_Basic_Concepts","220897648_Power_Domains_and_Predicate_Transformers_A_Topological_View","220404815_The_Hoare_Logic''_of_CSP_and_All_That","3189049_Proving_the_Correctness_of_Multiprocess_Programs"]}