{"id":"228988592_Language_and_IDE_Modularization_Extension_and_Composition_with_MPS","abstract":"Language modularization, extension and composition is an impor-tant building block for working efficiently with DSLs. Historically, this has been a challenge because many grammar formalisms are not closed under composition, hence syntactic composition of languages is challenging. Com-posing static and dynamic semantics can also be hard, at least in the general case. Finally, a lot of existing work does not consider IDEs for the composed and extended languages. In this paper, I will show how the projectional lan-guage workbench JetBrains MPS solves most of these issues in a practically usable way. The main part of the paper is an extensive example that shows the various kinds of extension and modularization. The last section contains an evaluation that identifies the strong and weak aspects of modularization, composition and extension in MPS, and suggests a couple of improvements.","authors":["Markus VÃ¶lter"],"meta":["July 2011","DOI:10.1007/978-3-642-35992-7_11"],"references":["277449649_Pure_and_declarative_syntax_definition_Paradise_lost_and_regained","262204234_Language_composition_untangled","261844605_Preventing_injection_attacks_with_syntax_embeddings","313191735_Language_composition_untangled","290105010_SugarJ","271436881_Concrete_syntax_for_objects","260648902_An_Incremental_Programming_Environment","237466820_The_Java_syntactic_extender_JSE","235779841_Domain-Specific_Languages","227650341_ANTLR_A_predicated-LLk_parser_generator"]}