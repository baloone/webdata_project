{"id":"334499010_A_Calculus_of_Branching_Processes","abstract":"CCS-like calculi can be viewed as an extension of classical automata with communication primitives. We are interested here to follow this principle, applied to tree-automata. It naturally yields a calculus of branching processes (CBP), where the continuations of communications are allowed to branch according to the arity of the communication channel. After introducing the calculus with a reduction semantics we show that CBP can be “implemented” by a fully compositional LTS semantics. We argue that CBP offers an interesting tradeoff between calculi with a fixed communication topology à la CCS and calculi with dynamic connectivity such as the π-calculus.","authors":["Thomas Ehrhard","Jean Krivine","Ying Jiang"],"meta":["July 2019Theoretical Computer Science 807","DOI:10.1016/j.tcs.2019.06.028"],"references":["274068831_Network-Conscious_p-calculus_-A_Model_of_Pastry","262276897_A_Process_Algebra_for_Wireless_Mesh_Networks","221137886_A_Stackless_Runtime_Environment_for_a_Pi-calculus","267075972_Multiparty_Session_Types_Meet_Communicating_Automata","225115254_Permutation_of_transitions_An_event_structure_semantics_for_CCS_and_SCCS","224001269_Communication_and_Concurrency","222917542_Tree_acceptors_and_some_of_their_applications","221621820_The_Join_Calculus_A_Language_for_Distributed_Mobile_Programming","220997136_Reflexive_CHAM_and_the_join-calculus","220153974_Testing_Equivalences_for_Processes","43611035_A_Non-Interleaving_Semantics_for_CCS_Based_on_Proved_Transitions","37685024_Reachability_Analysis_of_Multithreaded_Software_with_Asynchronous_Communication","2633305_Observing_Distribution_in_Processes_Static_and_Dynamic_Localities","220102511_A_Theory_of_Processes_with_Localities"]}