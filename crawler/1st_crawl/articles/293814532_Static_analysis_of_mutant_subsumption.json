{"id":"293814532_Static_analysis_of_mutant_subsumption","authors":["Bob Kurtz","Paul Ammann","Jeff Offutt"],"meta":["April 2015","DOI:10.1109/ICSTW.2015.7107454","Conference: 2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW)"],"references":["266656267_A_study_of_equivalent_and_stubborn_mutation_operators_using_human_analysis_of_equivalence","254034644_Do_Redundant_Mutants_Affect_the_Effectiveness_and_Efficiency_of_Mutation_Analysis","246172383_Fault_Classes_and_Error_Detection_Capability_of_Specification_Based_Testing","225142568_Z3_an_efficient_SMT_solver","224332299_Constructing_Subtle_Faults_Using_Higher_Order_Mutation_Testing","224185157_Test_generation_via_Dynamic_Symbolic_Execution_for_mutation_testing","221560458_CUTE_A_concolic_unit_testing_engine_for_C","220883167_Symbolic_PathFinder_symbolic_execution_of_Java_bytecode","220752310_DART_Directed_automated_random_testing","2957629_Hints_on_Test_Data_Selection_Help_for_the_Practicing_Programmer","278646722_CUTE","271455697_Establishing_Theoretical_Minimal_Sets_of_Mutants","269304192_Mutant_Subsumption_Graphs","269304186_Using_Data_Flow_Patterns_for_Equivalent_Mutant_Detection","264710544_MuRanker_A_mutant_ranking_tool","262356189_Symbolic_execution_for_software_testing_Three_decades_later","257665304_Current_challenges_in_automatic_software_repair","248609253_Pex_-_white_box_test_generation_for","247844324_The_Dynamic_Domain_Reduction_Approach_to_Test_Data_Generation","242502673_Assigning_Meanings_to_Programs","242480407_An_interactive_program_verifier","234829988_An_extended_fault_class_hierarchy_for_specification-based_testing","224402007_Using_a_Fault_Hierarchy_to_Improve_the_Efficiency_of_DNF_Logic_Mutation_Testing","221554878_Symbolic_execution_for_software_testing_in_practice_-_Preliminary_assessment","220958306_Pex-white_box_test_generation_for_NET","220854583_A_Semantic_Model_of_Program_Faults","220852376_JPF-SE_A_symbolic_execution_extension_to_Java_pathfinder","220752213_Directed_Incremental_Symbolic_Execution","220719898_Un-Covering_Equivalent_Mutants","220713851_All_You_Ever_Wanted_to_Know_about_Dynamic_Taint_Analysis_and_Forward_Symbolic_Execution_but_Might_Have_Been_Afraid_to_Ask","220691599_Introduction_to_Software_Testing","220588419_An_Integrated_Automatic_Test_Data_Generation_System","220516324_MuJava_An_automated_class_mutation_system","220423278_Symbolic_Execution_and_Program_Testing","220375578_Multi_Objective_Higher_Order_Mutation_Testing_with_Genetic_Programming","3506056_A_dynamic_approach_of_test_data_generation","3189003_A_System_to_Generate_Test_Data_and_Symbolically_Execute_Programs","3187406_Constraint-Based_Automatic_Test_Data_Generation","3187270_A_Theory_of_fault-based_testing","2561319_Generalized_Symbolic_Execution_for_Model_Checking_and_Testing","2487459_Automatically_Detecting_Equivalent_Mutants_and_Infeasible_Paths"]}