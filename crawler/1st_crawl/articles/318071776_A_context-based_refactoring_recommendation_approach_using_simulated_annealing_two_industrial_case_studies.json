{"id":"318071776_A_context-based_refactoring_recommendation_approach_using_simulated_annealing_two_industrial_case_studies","abstract":"Refactoring is a highly valuable solution to reduce and manage the growing complexity of software systems. However, programmers are \"opportunistic\" when they apply refactorings since most of them are interested in improving the quality of the code fragments that they frequently update or those related to the planned activities for the next release (fixing bugs, adding new functionalities, etc.). In this paper, we describe a search based approach to recommend refactorings based on the analysis of the history of changes to maximize the recommended refactorings for recently modified classes, classes containing incomplete refactorings detected in previous releases, and buggy classes identified in the history of previous bug reports. The obtained results on two industrial projects show significant improvements of the relevance of recommended refactorings, as evaluated by the original developers of the systems.","authors":["Marouane Kessentini","Troh Josselin Dea","Ali Ouni"],"meta":["July 2017","DOI:10.1145/3071178.3071334","Conference: the Genetic and Evolutionary Computation Conference"],"references":["241770746_Identifying_refactoring_sequences_for_improving_software_maintainability","235924378_Maintainability_Defects_Detection_and_Correction_A_Multi-Objective_Approach","222413173_Search-Based_Refactoring_for_Software_Maintenance","221390973_Avoiding_Bad_Smells_in_Aspect-Oriented_Software","221308133_iPlasma_An_Integrated_Platform_for_Quality_Assessment_of_Object-Oriented_Design","220741085_Pareto_Optimal_Search_Based_Refactoring_at_the_Design_Level","216667103_How_We_Refactor_and_How_We_Know_It","308816228_Automated_refactoring_of_ATL_model_transformations_a_search-based_approach","304915785_Multi-Criteria_Code_Refactoring_Using_Search-Based_Software_Engineering_An_Industrial_Case_Study","274070533_On_the_Use_of_Design_Defect_Examples_to_Detect_Model_Refactoring_Opportunities","262281094_Search-based_detection_of_high-level_model_changes","245429350_AntiPatterns_Refactoring_Software_Architectures_and_Projects_in_Crisis","229881453_MOSA_method_A_tool_for_solving_multiobjective_combinatorial_optimization_problems","221554695_JDeodorant_Identification_and_Application_of_Extract_Class_Refactorings","221219778_Design_Defects_Detection_and_Correction_by_Example","220743540_Search-Based_Determination_of_Refactorings_for_Improving_the_Class_Structure_of_Object-Oriented_Systems","35031724_A_hierarchical_model_for_quality_assessment_of_object-oriented_designs","4114677_Refactoring_-_Improving_coupling_and_cohesion_of_existing_code","3188003_Davis_C_A_Hierarchical_Model_for_Object-Oriented_Design_Quality_Assessment_IEEE_Transactions_on_Software_Engineering_28_4-17"]}