{"id":"221027065_Automated_Analysis_of_Data-Dependent_Programs_with_Dynamic_Memory","abstract":"We present a new approach for automatic verification of data-dependent programs manipulating dynamic heaps. A heap is encoded by a graph where the nodes represent the cells, and the edges reflect the pointer structure between the cells of the heap. Each cell contains a set of variables which range over the natural numbers. Our method relies on standard backward reachability analysis, where the main idea is to use a simple set of predicates, called signatures, in order to represent bad sets of heaps. Examples of bad heaps are those which contain either garbage, lists which are not well-formed, or lists which are not sorted. We present the results for the case of programs with a single next-selector, and where vari- ables may be compared for (in)equality. This allows us to verify for instance that a program, like bubble sort or insertion sort, returns a list which is well-formed and sorted, or that the merging of two sorted lists is a new sorted list. We report on the result of running a prototype based on the method on a number of programs.","authors":["Parosh Aziz Abdulla","Muhsin Atto","Jonathan Cederberg","Ran Ji"],"meta":["October 2009","DOI:10.1007/978-3-642-04761-9_16","SourceDBLP","Conference: Automated Technology for Verification and Analysis, 7th International Symposium, ATVA 2009, Macao, China, October 14-16, 2009. Proceedings"],"references":["226660431_Scalable_Shape_Analysis_for_Systems_Code","222514985_Abstract_Regular_Tree_Model_Checking","221551147_A_Complete_Abstract_Interpretation_Framework_for_Coverability_Properties_of_WSTS","221551117_Automated_Verification_of_Shape_and_Size_Properties_Via_Separation_Logic","221477549_Abstract_Regular_Tree_Model_Checking_of_Complex_Dynamic_Data_Structures","221403661_2012-01_Applying_the_Graph_Minor_Theorem_to_the_Verification_of_Graph_Transformation_Systems","231763800_Well-quasi-orderings_and_sets_of_finite_sequences","225909763_Verifying_Programs_with_Dynamic_1-Selector-Linked_Structures_in_Regular_Model_Checking","221403409_Abstract_Regular_Model_Checking","221403290_Programs_with_Lists_Are_Counter_Automata"]}