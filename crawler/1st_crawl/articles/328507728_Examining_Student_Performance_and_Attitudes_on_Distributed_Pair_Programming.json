{"id":"328507728_Examining_Student_Performance_and_Attitudes_on_Distributed_Pair_Programming","abstract":"Pair programming (PP) has become popular in the research and software industry as well as being studied for a number of years in computer science courses with positive findings on student performance and attitudes. Advantages of PP reported in the literature are satisfaction, design quality, code productivity, team building, and communication. More recently, distributed pair programming (DPP), which enables two programmers to work remotely, has also attracted the interest of researchers and instructors. The difference between DPP and PP is that the former allows geographically distributed teams to collaborate and share program code. Such collaboration is, thus, only feasible if an underlying infrastructure supports all necessary interactions. The integrated development environments (IDEs) for DPP should cover the basic requirements for remote software development as well as address common PP problems, such as unequal contributions from each member of a pair, feedback during DPP sessions, and communication problems. This paper presents the findings of a study on student performance and attitudes towards DPP in an object-oriented programming (OOP) course. The factors examined were student performance, in terms of assignment grade, exam grade and implementation time in relation to students’ programming experience, and confidence, as well as student attitudes towards DPP, i.e., the feelgood factor, working alone or with a partner, and the perception of their partner’s technical competence. The results suggest that a students’ performance is associated with their programming experience and confidence in programming but not with how comfortable they feel during DPP sessions. Students evaluate the DPP sessions positively regardless of their confidence on programming or their perception of their partners’ technical competence. Students who consider themselves to have about the same programming competence as their partners tend to be more satisfied with DPP sessions. Overall, students prefer working with a partner regardless of their confidence on programming.","authors":["Maya Satratzemi","Stelios Xinogalos","Despina Tsompanoudi","Leonidas Karamitopoulos"],"meta":["October 2018Scientific Programming 2018(2):1-8","DOI:10.1155/2018/6523538"],"references":["308217736_Monitoring_an_OOP_Course_Through_Assignments_in_a_Distributed_Pair_Programming_System","284895759_Distributed_Pair_Programming_Using_Collaboration_Scripts_An_Educational_System_and_Initial_Results","266375414_Using_a_Collaborative_Learning_Technique_as_a_Pedagogic_Intervention_for_the_Effective_Teaching_and_Learning_of_a_Programming_Course","258849612_Distributed-Pair_Programming_can_work_well_and_is_not_just_Distributed_Pair-Programming","235326641_Pair_Programming_as_a_Team_Based_Learning_Activity","322124954_Factors_Affecting_Students'_Performance_in_Distributed_Pair_Programming","319278052_A_Meta-Analysis_of_Pair-Programming_in_Computer_Programming_Courses_Implications_for_Educational_Practice","291243740_Pair_programming_in_CS1","276178151_Evaluating_the_Effects_of_Scripted_Distributed_Pair_Programming_on_Student_Performance_and_Participation","273402316_Distributed_Pair_Programming_A_Systematic_Literature_Review"]}