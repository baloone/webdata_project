{"id":"317485863_Verified_perceptron_convergence_theorem","abstract":"Frank Rosenblatt invented the perceptron algorithm in 1957 as part of an early attempt to build ``brain models'', artificial neural networks. In this paper, we apply tools from symbolic logic such as dependent type theory as implemented in Coq to build, and prove convergence of, one-layer perceptrons (specifically, we show that our Coq implementation converges to a binary classifier when trained on linearly separable datasets).\nOur perceptron and proof are extensible, which we demonstrate by adapting our convergence proof to the averaged perceptron, a common variant of the basic perceptron algorithm. We perform experiments to evaluate the performance of our Coq perceptron vs. an arbitrary-precision C++ implementation and against a hybrid implementation in which separators learned in C++ are certified in Coq. We find that by carefully optimizing the extraction of our Coq perceptron, we can meet -- and occasionally exceed -- the performance of the arbitrary-precision C++ implementation. Our hybrid Coq certifier demonstrates an architecture for building high-assurance machine-learning systems that reuse existing codebases.","authors":["Charlie Murphy","Patrick Gray","Gordon Stewart"],"meta":["June 2017","DOI:10.1145/3088525.3088673","Conference: the 1st ACM SIGPLAN International Workshop","Project: CoqPerceptron"],"references":["311492855_A_unified_Coq_framework_for_verifying_C_programs_with_floating-point_computations","272195143_Deep_Learning_with_Limited_Numerical_Precision","265721052_Formal_Proof_in_Coq_and_Derivation_of_an_Imperative_Program_to_Compute_Convex_Hulls","255704722_Proof-Pattern_Recognition_and_Lemma_Discovery_in_ACL2","248801042_Towards_a_practical_programming_language_based_on_dependent_type_theory","233922813_Machine_Learning_in_Proof_General_Interfacing_Interfaces","221302213_Formalizing_Convex_Hull_Algorithms","2930135_Ultraconservative_Online_Algorithms_for_Multiclass_Problems","279258483_Fixed_Precision_Patterns_for_the_Formal_Verification_of_Mathematical_Constant_Approximations","274812817_Principles_of_Neurodynamics_Perceptrons_and_the_Theory_of_Brain_Mechanisms","272825857_UCI_Machine_Learning_Repository","253277969_The_Perceptron_A_Model_for_Brain_Functioning_I","244483649_Stop_When_You_Are_Almost-Full_-_Adventures_in_Constructive_Termination","239557089_The_perceptron_-_a_perceiving_and_recognizing_automaton","238706673_The_Irises_of_the_Gaspe_Peninsula","229091433_Principles_of_Neurodynamics_Perceptrons_and_the_Theory_of_Brain_Mechanisms","220805756_A_Purely_Functional_Library_for_Modular_Arithmetic_and_Its_Application_to_Certifying_Large_Prime_Numbers","220166005_Termination_checking_with_types","216300608_The_Use_of_Multiple_Measurements_in_Taxonomic_Problems","47861725_Termination_Proofs_for_Systems_Code","47800156_Flocq_A_Unified_Library_for_Proving_Floating-Point_Algorithms_in_Coq","3314736_A_Universal_Neural_Net_with_Guaranteed_Convergence_to_Zero_System_Error"]}