{"id":"2402490_The_IsabelleIsar_Reference_Manual","abstract":"Intelligible semi-automated reasoning (Isar) is a generic approach to readable formal proof documents. It sets out to bridge the semantic gap between any internal notions of proof based on primitive inferences and tactics, and an appropriate level of abstraction for user-level work. The Isar formal proof language has been designed to satisfy quite contradictory requirements, being both \"declarative\" and immediately \"executable\", by virtue of the Isar/VM interpreter. The Isabelle/Isar system provides an interpreter for the Isar formal proof language. The input may consist either of proper document constructors, or improper auxiliary commands (for diagnostics, exploration etc.). Proof texts consisting of proper elements only admit a purely static reading, thus being intelligible later without requiring dynamic replay that is so typical for traditional proof scripts. Any of the Isabelle/Isar commands may be executed in single-steps, so basically the interpreter has a proof text debugger already built-in. Employing the Isar instantiation of Proof General, a generic Emacs interface for interactive proof assistants, we arrive at a reasonable environment for live document editing. Thus proof texts may be developed incrementally by issuing proof commands, including forward and backward tracing of partial documents; intermediate states may be inspected by diagnostic commands. The Isar subsystem is tightly integrated into the Isabelle/Pure meta-logic implementation. Theories, theorems, proof procedures etc. may be used interchangeably between classic Isabelle proof scripts and Isabelle/Isar documents. Even more, Isar provides a set of emulation commands and methods for simulating traditional tactic scripts within new-style theory documents. The Isar framework is as generic as I...","authors":["Markus Wenzel","Tu Munchen"],"meta":["March 2001"],"references":["2398101_Isabelle's_Logics_HOL","329654166_The_Definition_of_Standard_ML","312631922_A_fixedpoint_approach_to_implementing_coinductive_definitions","256437037_The_Definition_of_Standard_ML","245135565_A_Versatile_Environment_for_Human-readable_Formal_Proof_Documents","227338748_Computer-Assisted_Mathematics_at_Work","220852217_Proof_General_A_Generic_Tool_for_Proof_Development","220805509_A_Fixedpoint_Approach_to_Implementing_CoInductive_Definitions","213886672_Structured_proofs_in_IsarHOL","213884798_The_Objective_Caml_System_Documentation_and_User's_Manual","213879413_Haskell_98_Language_and_Libraries_The_Revised_Report","201469308_IsabelleHOL_---_A_Proof_Assistant_for_Higher-Order_Logic","2812929_Object-Oriented_Verification_based_on_Record_Subtyping_in_Higher-Order_Logic","2611233_Isar_-_A_Generic_Interpretative_Approach_to_Readable_Formal_Proof_Documents","2404103_Calculational_Reasoning_Revisited_An_IsabelleIsar_Experience","2393687_The_Mathematical_Vernacular","2383117_Computer-Assisted_Mathematics_at_Work_-_The_Hahn-Banach_Theorem_in_IsabelleIsar","2383038_Type_Classes_and_Overloading_in_Higher-Order_Logic"]}