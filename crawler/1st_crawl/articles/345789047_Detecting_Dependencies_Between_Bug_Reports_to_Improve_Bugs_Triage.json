{"id":"345789047_Detecting_Dependencies_Between_Bug_Reports_to_Improve_Bugs_Triage","abstract":"Software development teams need to deal with several open reports of critical bugs to be addressed urgently and simultaneously. The management of these bugs is a complex problem due to the limited resources and the deadlines-pressure. Most of the existing studies treated bug reports in isolation when assigning them to developers. Thus, developers may spend considerable cognitive efforts moving between completely unrelated bug reports thus not sharing any common files to be inspected. In this paper, we propose an automated bugs triage approach based on the dependencies between the open bug reports. Our approach starts by localizing the files to be inspected for each of the pending bug reports. We defined the dependency between two bug reports as the number of common files to be inspected to localize the bugs. Then, we adopted multi-objective search to rank the bug reports for programmers based on both their priorities and the dependency between them. We evaluated our approach on a set of open source programs and compared it to the traditional approach of considering bug reports in isolation based mainly on their priority. The results show a significant time reduction of over 30% in localizing the bugs simultaneously comparing to the traditional bugs prioritization technique based on only priorities.","authors":["Rafi Almhana","Marouane Kessentini"],"meta":["May 2021Automated Software Engineering 28(1)","DOI:10.1007/s10515-020-00279-2"],"references":["329736475_A_survey_of_many-objective_optimisation_in_search-based_software_engineering","325475570_A_tutorial_on_multiobjective_optimization_fundamentals_and_evolutionary_methods","307090396_Recommending_relevant_classes_for_bug_reports_using_multi-objective_search","332064678_Multi-Objective_Optimization_In_Theory_and_Practice_II_Metaheuristic_Algorithms","328207724_Supporting_Many-Objective_Software_Requirements_Decision_An_Exploratory_Study_on_the_Next_Release_Problem","327658082_How_Practitioners_Perceive_Automated_Bug_Report_Management_Techniques","324266506_Characterizing_and_Predicting_Blocking_Bugs_in_Open_Source_Projects","319392549_A_Novel_Way_of_Assigning_Software_Bug_Priority_Using_Supervised_Classification_on_Clustered_Bugs_Data","311100294_Detecting_Model_Refactoring_Opportunities_Using_Heuristic_Search","309066479_A_Multi-objective_Approach_to_Prioritize_and_Recommend_Bugs_in_Open_Source_Repositories","301644912_A_survey_on_bug_prioritization","293813436_Mutation-Based_Generation_of_Software_Product_Line_Test_Configurations","291951202_A_Survey_on_Software_Fault_Localization","300635330_Search-Based_Bug_Report_Prioritization_for_Kate_Editor_Bugs_Repository","297617240_Towards_More_Accurate_Severity_Prediction_and_Fixer_Recommendation_of_Software_Bugs"]}