{"id":"330717475_Separation_Logic","abstract":"Separation logic is a key development in formal reasoning about programs, opening up new lines of attack on longstanding problems.","authors":["Peter O'Hearn"],"meta":["January 2019Communications of the ACM 62(2):86-95","DOI:10.1145/3211968"],"references":["328511223_RacerD_compositional_static_race_detection","318364792_A_Decidable_Fragment_in_Separation_Logic_with_Inductive_Predicates_and_Arithmetic","315858426_A_Verification_Technique_for_Deterministic_Parallel_Programs","312569559_Caper_Automatic_Verification_for_Fine-grained_Concurrency","234689386_The_Tree_Width_of_Separation_Logic_with_Recursive_Definitions","228990531_Inferring_invariants_in_separation_logic_for_imperative_list-processing_programs","226660431_Scalable_Shape_Analysis_for_Systems_Code","225245000_A_Semantics_for_Concurrent_Separation_Logic","225234141_Formal_Verification_of_the_Heap_Manager_of_an_Operating_System_Using_Separation_Logic","224088966_Finding_heap-bounds_for_hardware_synthesis","345715007_Concurrent_separation_logic","325142264_Mechanized_Verification_of_Fine-Grained_Concurrent_Programs","325112180_Viper_A_verification_infrastructure_for_permission-based_reasoning","323335675_Undecidability_of_Propositional_Separation_Logic_and_Its_Neighbours","322133305_RustBelt_Securing_the_Foundations_of_the_Rust_Programming_Language","320390973_Natural_synthesis_of_provably-correct_data-structure_manipulations","315341494_The_Essence_of_Higher-Order_Concurrent_Separation_Logic","313550915_An_Axiomatic_Basis_of_Computer_Programming","312829129_Moving_Fast_with_Software_Verification","312013370_Interactive_proofs_in_higher-order_concurrent_separation_logic","311464696_Separation_logic_superposition_calculus_heap_theorem_prover","305252905_A_Practical_Verification_Framework_for_Preemptive_OS_Kernels","301375726_Using_Crash_Hoare_logic_for_certifying_the_FSCQ_file_system","300021350_Cyclic_Abduction_of_Inductively_Defined_Safety_and_Termination_Preconditions","291411519_Views","290476339_Separation_Logic_for_High-Level_Synthesis","284958846_Shape_Analysis_for_Unstructured_Sharing","267672965_Program_logics_for_certified_compilers","266657554_Natural_Proofs_for_Data_Structure_Manipulation_in_C_using_Separation_Logic","264957660_Local_Reasoning_for_Global_Invariants_Part_I_Region_Logic","262352128_Automating_Separation_Logic_Using_SMT","262287363_Views_Compositional_Reasoning_for_Concurrent_Programs","260033535_Software_verification_with_VeriFast_Industrial_case_studies","257563480_A_divide-and-conquer_approach_for_analysing_overlaid_data_structures","256846112_Modular_Construction_of_Shape-Numeric_Analyzers","254008093_Implicit_Dynamic_Frames","244467897_Local_reasoning_for_Java","242502673_Assigning_Meanings_to_Programs","242383026_Local_reasoning_for_stateful_programs","242071403_The_Ramifications_of_Sharing_in_Data_Structures","239557520_Cooperating_sequential_processes_in_programming_languages_f","239554324_Towards_a_theory_of_parallel_programming_-_a_preliminary_draft","239553251_Some_techniques_for_proving_correctness_of_programs_which_alter_data_structures","234828679_Checking_a_large_routine","226842720_The_dynamic_frames_theory","223340839_A_semantics_of_concurrent_separation_logic","222091956_The_Relationship_Between_Separation_Logic_and_Implicit_Dynamic_Frames","221602659_Automatic_Parallelization_with_Separation_Logic","221570274_A_Semantic_Basis_for_Local_Reasoning","221558301_Local_Reasoning_about_Programs_that_Alter_Data_Structures","221442621_Variables_as_Resource_in_Hoare_Logics","221403277_Shape_Analysis_for_Composite_Data_Structures","221496189_Concurrent_Abstract_Predicates","221477544_Shape_Analysis_with_Structural_Invariant_Checkers","221477419_Modular_Safety_Checking_for_Fine-Grained_Concurrency"]}