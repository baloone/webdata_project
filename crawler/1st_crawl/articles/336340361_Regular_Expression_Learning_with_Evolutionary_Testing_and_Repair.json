{"id":"336340361_Regular_Expression_Learning_with_Evolutionary_Testing_and_Repair","abstract":"Regular expressions are widely used to describe and document regular languages, and to identify a set of (valid) strings. Often they are not available or known, and they must be learned or inferred. Classical approaches like L* make strong assumptions that normally do not hold. More feasible are testing approaches in which it is possible only to generate strings and check them with the underlying system acting as oracle. In this paper, we devise a method that starting from an initial guess of the regular expression, it repeatedly generates and feeds strings to the system to check whether they are accepted or not, and it tries to repair consistently the alleged solution. Our approach is based on an evolutionary algorithm in which both the population of possible solutions and the set of strings co-evolve. Mutation is used for the population evolution in order to produce the offspring. We run a set of experiments showing that the string generation policy is effective and that the evolutionary approach outperforms existing techniques for regular expression repair.","authors":["Paolo Arcaini","Angelo Gargantini","Elvinia Riccobene"],"meta":["October 2019","DOI:10.1007/978-3-030-31280-0_2","In book: Testing Software and Systems (pp.22-40)"],"references":["334230170_Arterial_Calcification_on_Wrist_Radiographs_May_Suggest_Need_for_Evaluation_of_Atherosclerosis_in_Asymptomatic_Individuals","316469216_Genetic_Improvement_of_Software_A_Comprehensive_Survey","281438717_The_Open-Source_LearnLib_A_Framework_for_Active_Automata_Learning","261316665_Towards_automated_testing_and_fixing_of_re-engineered_Feature_Models","258499614_Mining_Software_Repair_Models_for_Reasoning_on_the_Search_Space_of_Automated_Program_Fixing","235709862_The_irace_Package_Iterated_Racing_for_Automatic_Algorithm_Configuration","221012714_Regular_Expression_Learning_for_Information_Extraction","220643328_LearnLib_A_framework_for_extrapolating_behavioral_models","216300585_Introduction_To_Evolutionary_Computing","2985061_Principles_and_Methods_of_Testing_Finite_State_Machines-a_Survey","327479221_Interactive_Testing_and_Repairing_of_Regular_Expressions_30th_IFIP_WG_61_International_Conference_ICTSS_2018_Cadiz_Spain_October_1-3_2018_Proceedings","326525851_Active_Automata_Learning_in_Practice_International_Dagstuhl_Seminar_16172_Dagstuhl_Castle_Germany_April_24-27_2016_Revised_Papers","325014033_Mutation_Testing_Advances_An_Analysis_and_Survey","323644331_Fault-based_test_generation_for_regular_expressions_by_mutation","315651939_Active_Learning_of_Regular_Expressions_for_Entity_Extraction","289554838_Inference_of_Regular_Expressions_for_Text_Extraction_from_Examples","222824298_Evolutionary_repair_of_faulty_software","222457930_Angluin_D_Learning_regular_sets_from_queries_and_counterexamples_Inf_Comput_752_87-106","220742619_Coevolutionary_automated_software_correction","220695193_Inductive_Logic_Programming_From_Machine_Learning_to_Software_Engineering","220426558_Automatic_Program_Repair_with_Evolutionary_Computation","220320119_Active_Coevolutionary_Learning_of_Deterministic_Finite_Automata"]}