{"id":"222537668_Well-structured_transition_systems_everywhere","abstract":"Well-structured transition systems (WSTSs) are a general class of infinite-state systems for which decidability results rely on the existence of a well-quasi-ordering between states that is compatible with the transitions. In this article, we provide an extensive treatment of the WSTS idea and show several new results. Our improved definitions allow many examples of classical systems to be seen as instances of WSTSs.","authors":["Alain Finkel","Ph. Schnoebelen"],"meta":["December 1999Theoretical Computer Science 256(1-2):63-92","DOI:10.1016/S0304-3975(00)00102-X","SourceCiteSeer"],"references":["267411039_A_Model_for_Recursive-Parallel_Programs_Extended_Abstract","243679916_A_new_class_of_analyzable_CFSMs_with_unbounded_FIFO_channels","225823677_Decidability_of_bisimulation_equivalence_for_processes_generating_context-free_languages","225156893_Lecture_Notes_in_Computer_Science","220896734_A_Generalization_of_the_Procedure_of_Karp_and_Miller_to_Well_Structured_Transition_Systems","220700831_Infinite_Results","220530840_More_Infinite_Results","220459090_Decidable_subsets_of_CCS","220448052_Finite_State_Description_of_Communication_Protocols","220367270_A_model_for_recursive-parallel_programs","47862586_Symbolic_Representation_of_Upward-Closed_Sets","3677472_General_decidability_theorems_for_infinite-state_systems","268501754_Parallel_program_schemata","256555087_Characterizing_Finite_Kripke_Structures_in_Propositional_Temporal_Logic","256554766_An_introduction_to_FIFO_nets-_monogeneous_nets_A_subclass_of_FIFO_nets","246002948_EATCS-An_Introduction_to_Petri_Nets","243764858_Finiteness_of_the_odd_perfect_and_primitive_abundant_numbers_with_n_distinct_prime_factors","238717639_Ordering_by_Divisibility_in_Abstract_Algebras","234803172_Communication_and_Concurrency","227325451_A_closed_form_for_datalog_queries_with_integer_order","226860527_Recursivite_et_cones_rationnels_fermes_par_intersection","226113036_A_formal_framework_for_the_analysis_of_recursive-parallel_programs","225492967_A_Classification_of_Symbolic_Transition_Systems","225354611_Verifying_networks_of_timed_processes","223756507_Unreliable_Channels_Are_Easier_to_Verify_Than_Perfect_Channels","223058900_The_Theory_of_Well-Quasi-Ordering_A_Frequently_Discovered_Concept","222850848_Parallel_program_schemata","222684215_Algorithmic_Analysis_of_Programs_with_Well_Quasi-ordered_Domains","222515351_Ensuring_completeness_of_symbolic_verification_methods_for_infinite-state_systems","222470936_Symbolic_Model_Checking_1020_States_and_Beyond","222001554_Lecture_Notes_in_Computer_Science","221403599_Timed_Automata","221331008_Branching_Time_and_Abstraction_in_Bisimulation_Semantics_Extended_Abstract","220897549_Self-Modifying_Nets_a_Natural_Extension_of_Petri_Nets","220897416_Reset_Nets_Between_Decidability_and_Undecidability","220897372_Hybrid_Automata_with_Finite_Bisimulatioins","220897300_Deciding_Properties_of_Integral_Relational_Automata","220783832_Subclasses_of_Self-Modifying_Nets","220657167_On_Permutative_Grammars_Generating_Context-Free_Languages","220618096_Priority_Networks_of_Communicating_Finite_State_Machines","220566840_Decidability_of_the_Termination_Problem_for_Completely_Specified_Protocols","220430671_On_Communicating_Finite-State_Machines","220248967_Reduction_and_covering_of_infinite_reachability_trees","220247935_Verifying_Programs_with_Unreliable_Channels","220197582_Fifo_Nets_Without_Order_Deadlock","220153137_Some_Decision_Problems_Related_to_the_Reachability_Problem_for_Petri_Nets","220113520_A_Note_on_Well_Quasi-Orderings_for_Powersets","215439783_Petri_Net_Theory_und_the_Modeling_of_a_System","200034146_Graph_Rewriting_An_Algebraic_and_Logic_Approach","3854924_Better_is_Better_than_Well_On_Efficient_Verification_of_Infinite-State_Systems_Extended_Abstract","2826675_A_Bottom-up_Semantics_for_Linear_Logic_Programs","3556201_Verifying_programs_with_unreliable_channels","2832679_Context-Free_Languages_and_Pushdown","2624680_Lossy_Counter_Machines","2575041_A_Formal_Framework_for_the_Analysis_of_Recursive-Parallel_Programs"]}