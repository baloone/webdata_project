{"id":"258561035_Understanding_Concurrent_Systems","abstract":"CSP notation has been used extensively for teaching and applying concurrency theory, ever since the publication of the text Communicating Sequential Processes by C.A.R. Hoare in 1985. Both a programming language and a specification language, the theory of CSP helps users to understand concurrent systems, and to decide whether a program meets its specification. As a member of the family of process algebras, the concepts of communication and interaction are presented in an algebraic style. An invaluable reference on the state of the art in CSP, Understanding Concurrent Systems also serves as a comprehensive introduction to the field, in addition to providing material for a number of more advanced courses. A first point of reference for anyone wanting to use CSP or learn about its theory, the book also introduces other views of concurrency, using CSP to model and explain these. The text is fully integrated with CSP-based tools such as FDR, and describes how to create new tools based on FDR. Most of the book relies on no theoretical background other than a basic knowledge of sets and sequences. Sophisticated mathematical arguments are avoided whenever possible. Topics and features: presents a comprehensive introduction to CSP; discusses the latest advances in CSP, covering topics of operational semantics, denotational models, finite observation models and infinite-behaviour models, and algebraic semantics; explores the practical application of CSP, including timed modelling, discrete modelling, parameterised verifications and the state explosion problem, and advanced topics in the use of FDR; examines the ability of CSP to describe and enable reasoning about parallel systems modelled in other paradigms; covers a broad variety of concurrent systems, including combinatorial, timed, priority-based, mobile, shared variable, statecharts, buffered and asynchronous systems; contains exercises and case studies to support the text; supplies further tools and information at the associated website: http://www.comlab.ox.ac.uk/ucs/. From undergraduate students of computer science in need of an introduction to the area, to researchers and practitioners desiring a more in-depth understanding of theory and practice of concurrent systems, this broad-ranging text/reference is essential reading for anyone interested in Hoares CSP.","authors":["A. W. Roscoe"],"meta":["January 2011","DOI:10.1007/978-1-84882-258-0","ISBN: 978-1-84882-257-3"],"references":["255642833_The_pursuit_of_buffer_tolerance","254733220_Finitary_refinement_checks_for_infinitary_specifications","250772972_SVA_a_tool_for_analysing_shared-variable_programs","244447360_Web_Services_Security_a_preliminary_study_using_Casper_and_FDR","239665819_The_Modelling_and_Analysis_of_Security_Protocols_the_CSP_Approach","238651055_A_Correct_Abstract_Machine_for_the_Stochastic_Pi-calculus","227084481_CSP_is_Expressive_Enough_for_p","226223591_Insight_Inspiration_and_Collaboration","225734990_Counterexample-Guided_Abstraction_Refinement","225511792_Hierarchical_compression_for_model-checking_CSP_or_how_to_check_1020_dining_philosophers_for_deadlock","225239438_On_the_expressive_power_of_CSP_refinement","225160872_Responsiveness_and_stable_revivals","223252781_A_theory_for_nondeterminism_parallelism_communication_and_concurrency","221632117_Non-Interference_Through_Determinism","221422184_Robust_Undecidability_of_Timed_and_Hybrid_Systems","221421853_UPPAAL_-_a_Tool_Suite_for_Automatic_Verification_of_Real-Time_Systems","221403366_Compositional_Minimization_of_Finite_State_Systems","302307361_A_Class_of_Simple_Communication_Patterns","293479007_Operational_semantics_for_LYaPAS","277286666_What_Can_You_Decide_About_Resetable_Arrays","266523800_Specification_and_proof_in_real-time_CSP","266425464_The_p-Calculus_A_Theory_of_Mobile_Processes","266044503_Discrete_Analysis_of_Continuous_Behaviour_in_Real-Time_Concurrent_Systems_Discrete_Analysis_of_Continuous_Behaviour_in_Real-Time_Concurrent_Systems","262726678_Statecharts_A_Visual_Formalism_For_Complex_Systems","262166928_Topology_computer_science_and_the_mathematics_of_convergence","243786774_An_improved_failures_model_for_CSP","242473732_The_perfect_spy_for_model-checking_crytpo-protocols","242423528_Routing_messages_through_networks_an_exercise_in_deadlock_avoidance","242375104_Introduction_to_Functional_Programming_using_Haskell","240097982_Logical_Verification_of_Reactive_Software_Systems","239667450_Tools_for_CSP_and_Timed_CSP","239665551_Concurrent_and_Real-time_Systems_The_CSP_Approach","238169877_A_Uniform_Mathematical_Theory_for_Real-Time_Distributed_Computing","236511907_Algebraic_Theory_of_Processes","235410288_Error_Correcting_Codes","234810724_Formal_definition_of_priority_in_CSP","234803172_Communication_and_Concurrency","232646452_Possible_futures_acceptances_refusals_and_communicating_processes","227294418_Another_look_at_LTL_model_checking","226536835_Analysing_TMFS_A_study_of_nondeterminism_in_real-time_concurrency","225798318_A_Timed_Model_for_Communicating_Sequential_Processes","225138657_Specification-oriented_semantics_for_communicating_processes","224001276_Isabelle_---_A_Generic_Theorem_Prover","224001212_Communicating_Sequential_Processes","223271545_CCS_expressions_finite_state_processes_and_three_problems_of_equivalence","222571867_BioAmbients_an_Abstraction_for_Biological_Compartments","222555180_CSP-CASL-A_new_integration_of_process_algebra_and_algebraic_specification","222436931_Algebra_of_communicating_processes_with_abstraction","222353973_The_Laws_of_Occam_Programming","222303297_Brief_history_of_timed_CSP","221268285_The_Formal_Classification_and_Verification_of_Simpson's_4-Slot_Asynchronous_Communication_Mechanism","221403346_Stuck-Free_Conformance","221268199_How_to_make_FDR_spin_LTL_model_checking_of_CSP_by_refinement","221267758_Watchdog_Transformations_for_Property-Oriented_Model-Checking","221248545_An_Improved_Failures_Equivalence_for_Finite-State_Systems_with_a_Reduction_Algorithm"]}