{"id":"333673359_What_Can_Be_Computed_A_Practical_Guide_to_the_Theory_of_Computation","abstract":"An accessible and rigorous textbook for introducing undergraduates to computer science theory\nWhat Can Be Computed? is a uniquely accessible yet rigorous introduction to the most profound ideas at the heart of computer science. Crafted specifically for undergraduates who are studying the subject for the first time, and requiring minimal prerequisites, the book focuses on the essential fundamentals of computer science theory and features a practical approach that uses real computer programs (Python and Java) and encourages active experimentation. It is also ideal for self-study and reference.\nThe book covers the standard topics in the theory of computation, including Turing machines and finite automata, universal computation, nondeterminism, Turing and Karp reductions, undecidability, time-complexity classes such as P and NP, and NP-completeness, including the Cook-Levin Theorem. But the book also provides a broader view of computer science and its historical development, with discussions of Turing's original 1936 computing machines, the connections between undecidability and Gödel's incompleteness theorem, and Karp's famous set of twenty-one NP-complete problems.\nThroughout, the book recasts traditional computer science concepts by considering how computer programs are used to solve real problems. Standard theorems are stated and proven with full mathematical rigor, but motivation and understanding are enhanced by considering concrete implementations. The book's examples and other content allow readers to view demonstrations of―and to experiment with―a wide selection of the topics it covers. The result is an ideal text for an introduction to the theory of computation.\nAn accessible and rigorous introduction to the essential fundamentals of computer science theory, written specifically for undergraduates taking introduction to the theory of computation\nFeatures a practical, interactive approach using real computer programs (Python in the text, with forthcoming Java alternatives online) to enhance motivation and understanding\nGives equal emphasis to computability and complexity\nIncludes special topics that demonstrate the profound nature of key ideas in the theory of computation\nLecture slides and Python programs are available at whatcanbecomputed.com","authors":["John Maccormick"],"meta":["May 2018","Publisher: Princeton University PressISBN: 0691170665","Project: Theory of Computation Pedagogy"],"references":[]}