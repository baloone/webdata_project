{"id":"282372632_LOGICAL_ARITHMETIC","abstract":"In the past, implementations of real arithmetic within logic programming have been non-logical. Difficulties include an inability to alter the order of execution of statements, and incorrect handling of the different results caused by finite-precision arithmetic. Using interval analysis a simple description of real arithmetic is possible. This can be translated to an implementation within Prolog. As well as having a sound logical basis the resulting system allows a very concise and powerful programming style and is potentially very efficient.","authors":["John G. Cleary"],"meta":["January 1987"],"references":[]}