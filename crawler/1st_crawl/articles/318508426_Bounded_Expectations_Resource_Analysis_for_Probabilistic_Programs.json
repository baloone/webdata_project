{"id":"318508426_Bounded_Expectations_Resource_Analysis_for_Probabilistic_Programs","abstract":"Following the increasing relevance of probabilistic programming, there is a renewed interest in addressing the challenges that probabilistic code bears for static reasoning. For example, there are successful techniques for automatic worst-case resource analysis but these techniques are not applicable to many probabilistic programs, which, for instance, only terminate almost surely. This paper presents a new static analysis for deriving upper bounds on the expected resource consumption of probabilistic programs. The analysis is fully automatic and derives symbolic bounds that are multivariate polynomials of the inputs. The new technique combines manual state-of-the-art reasoning techniques for probabilistic programs with an effective method for automatic resource-bound analysis of deterministic programs. It can be seen as both, an extension of automatic amortized resource analysis (AARA) to probabilistic programs and an automation of manual reasoning for probabilistic programs that is based on weakest preconditions. An advantage of the technique is that it combines the clarity and compositionality of a weakest-precondition calculus with the efficient automation of AARA, which reduces bound inference to off-the-shelf LP solving. This design also allows to extend automatically-derived bounds with existing program logics if the automation fails. The effectiveness of the technique is demonstrated with a prototype implementation that is used to automatically analyze probabilistic programs and randomized algorithms that previously have been analyzed manually in the literature. Building on existing work, the soundness of the analysis is proved with respect to an operational semantics that is based on Markov decision processes.","authors":["Van Chan Ngo","Quentin Carbonneaux","Jan Hoffmann"],"meta":["July 2017","Project: Resource Bound Analysis"],"references":["315113718_Verifying_and_Synthesizing_Constant-Resource_Implementations_with_Types","312013362_Towards_automatic_resource_bound_analysis_for_OCaml","345740030_Programming_language_techniques_for_differential_privacy","318369848_Automated_Resource_Analysis_with_Coq_Proof_Objects","318365060_Automated_Recurrence_Analysis_for_Almost-Linear_Expected-Runtime_Bounds","317834884_Universal_Algebra_for_Computer_Scientists","317595476_Compositional_recurrence_analysis_revisited","316617903_Automated_Recurrence_Analysis_for_Almost-Linear_Expected-Runtime_Bounds","316617690_Non-polynomial_Worst-Case_Analysis_of_Recursive_Programs","312244066_Relational_cost_analysis"]}