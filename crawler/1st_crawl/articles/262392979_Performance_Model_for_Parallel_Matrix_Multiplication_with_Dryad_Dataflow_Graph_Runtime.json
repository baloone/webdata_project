{"id":"262392979_Performance_Model_for_Parallel_Matrix_Multiplication_with_Dryad_Dataflow_Graph_Runtime","abstract":"In order to meet the big data challenge of today's society, several parallel execution models on distributed memory architectures have been proposed: MapReduce, Iterative MapReduce, graph processing, and dataflow graph processing. Dryad is a distributed data-parallel execution engine that model program as dataflow graphs. In this paper, we evaluated the runtime and communication overhead of Dryad in realistic settings. We proposed a performance model for Dryad implementation of parallel matrix multiplication (PMM) and extend the model to MPI implementations. We conducted experimental analyses in order to verify the correctness of our analytic model on a Windows cluster with up to 400 cores, Azure with up to 100 instances, and Linux cluster with up to 100 nodes. The final results show that our analytic model produces accurate predictions within 5% of the measured results. We proved some cases that using average communication overhead to model performance of parallel matrix multiplication jobs on common HPC clusters is the practical approach.","authors":["Hui Li","Geoffrey Charles Fox","Judy Qiu"],"meta":["November 2012","DOI:10.1109/CGC.2012.23","Conference: Proceedings of the 2012 Second International Conference on Cloud and Green Computing","Project: Digital Science Center"],"references":["261395942_Improving_Resource_Utilization_in_MapReduce","254003976_Design_patterns_for_scientific_applications_in_DryadLINQ_CTP","241622674_Efficient_processing_of_RDF_graph_pattern_matching_on_MapReduce_platforms","238667898_Architecture_and_Performance_of_Runtime_Environments_for_Data_Intensive_Scalable_Computing","312775005_MapReduce_Simplified_data_processing_on_large_clusters","306548354_Dryad_Distributed_data-parallel_programs_from_sequential_building_blocks","277687776_Pregel","277683205_Dryad","265373089_Matrix_Algorithms_on_a_Hypercube_I_Matrix_Multiplication","238653345_Data-Cube_a_relational_aggregation_operator_generalizing_group-by"]}