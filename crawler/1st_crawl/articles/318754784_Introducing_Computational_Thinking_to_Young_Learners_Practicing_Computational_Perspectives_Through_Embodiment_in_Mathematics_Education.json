{"id":"318754784_Introducing_Computational_Thinking_to_Young_Learners_Practicing_Computational_Perspectives_Through_Embodiment_in_Mathematics_Education","abstract":"A science, technology, engineering, and mathematics-influenced classroom requires learning activities that provide hands-on experiences with technological tools to encourage problem-solving skills (Brophy et al. in J Eng Educ 97(3):369–387, 2008; Mataric´ et al. in AAAI spring symposium on robots and robot venues: resources for AI education, pp 99–102, 2007). The study aimed to bring computational thinking, an\napplicable skill set in computer science, into existing mathematics and programming education in elementary classrooms. An essential component of computational thinking is the ability to think like a computer scientist when confronted with a problem (Grover and\nPea in Educ Res 42(1):38–43. doi:10.3102/0013189X12463051, 2013). Computational perspectives (Berland and Wilensky in J Sci Educ Technol 24(5):628–647. doi:10.1007/ s10956-015-9552-x, 2015) refer to the frame of reference programmers or computer scientists adopt when approaching a problem. The study examined the effects of taking computational perspectives through various degrees of embodied activities (i.e., full vs. low) on students’ achievement in mathematics and programming. The study employed a 2 (full vs. low embodiment) * 2 (with vs. without computational perspective taking) factorial condition to evaluate four learning conditions from a combination of embodiment\nand computational perspective-taking practice. The results from this experimental study (N = 66 kindergarten and first graders) suggest that full-embody activities combined with the practice of computational perspective-taking in solving mathematics problem improved mathematics understanding and programming skills as demonstrated in Scrath Jr. among novice young learners. Moreover, the practice of using a computational perspective significantly improved students’ understanding of core programming concepts regardless of the level of embodiment. The article includes recommendations for how to make the\ncomputational thinking process more concrete and relevant within the context of a standard curriculum, particularly mathematics.","authors":["Woonhee Sung","Jung-Hyun Ahn","John Black"],"meta":["October 2017Technology, Knowledge and Learning 22(2)","DOI:10.1007/s10758-017-9328-x","Project: STEM learning in Pre-5 education"],"references":["284043695_Educational_robotics_Open_questions_and_new_challenges","274309848_Computational_Thinking","273347885_Possibilities_of_Haptic_Feedback_Simulation_for_Physics_Learning","269389884_Embodiment_and_embodied_design","286873961_The_TangibleK_robotics_program_Applied_computational_thinking_for_young_children","285724557_Toward_the_integration_of_bodily_states_language_and_action","285296776_Social_Embodiment","284686870_Embodied_cognition","276835949_Comparing_Virtual_and_Physical_Robotics_Environments_for_Supporting_Complex_Systems_and_Computational_Thinking","266562898_Review_on_teaching_and_learning_of_computational_thinking_through_programming_What_is_next_for_K-12"]}