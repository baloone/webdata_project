{"id":"322536257_Almost_optimal_column-wise_prefix-sum_computation_on_the_GPU","abstract":"Row-wise and column-wise prefix-sum computation of a matrix has many applications in the area of image processing such as computation of the summed area table and the Euclidean distance map. It is known that the prefix-sums of a one-dimensional array can be computed efficiently on the GPU. Hence, row-wise prefix-sums of a matrix can also be computed efficiently on the GPU by executing this prefix-sum algorithm for every row in parallel. However, the same approach does not work well for computing column-wise prefix-sums due to inefficient stride memory access to the global memory is performed. The main contribution of this paper is to present an almost optimal column-wise prefix-sum algorithm on the GPU. Quite surprisingly, experimental results using NVIDIA TITAN X show that our column-wise prefix-sum algorithm runs only 2â€“6% slower than matrix duplication. Thus, our column-wise prefix-sum algorithm is almost optimal.","authors":["Hiroki Tokura","Toru Fujita","Koji Nakano","Yasuaki Ito"],"meta":["April 2018The Journal of Supercomputing 74(2)","DOI:10.1007/s11227-018-2242-8"],"references":["286680717_Parallel_Algorithms_for_the_Summed_Area_Table_on_the_Asynchronous_Hierarchical_Memory_Machine_with_GPU_implementations","274462121_Optimal_Parallel_Algorithms_for_Computing_the_Sum_the_Prefix-Sums_and_the_Summed_Area_Table_on_the_Memory_Machine_Models","262159666_ASCII_art_generation_using_the_local_exhaustive_search_on_the_GPU","262153375_An_Optimal_Parallel_Prefix-Sums_Algorithm_on_the_Memory_Machine_Models_for_GPUs","220184713_GPU-Efficient_Recursive_Filtering_and_Summed-Area_Tables","220062593_Implementations_of_a_Parallel_Algorithm_for_Computing_Euclidean_Distance_Map_in_Multicore_Processors_and_GPUs","292255497_GPU_Computing_Gems_Emerald_Edition","202260457_Parallel_prefix_sum_scan_with_CUDA"]}