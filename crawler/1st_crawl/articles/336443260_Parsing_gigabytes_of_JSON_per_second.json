{"id":"336443260_Parsing_gigabytes_of_JSON_per_second","abstract":"JavaScript Object Notation or JSON is a ubiquitous data exchange format on the web. Ingesting JSON documents can become a performance bottleneck due to the sheer volume of data. We are thus motivated to make JSON parsing as fast as possible. Despite the maturity of the problem of JSON parsing, we show that substantial speedups are possible. We present the first standard-compliant JSON parser to process gigabytes of data per second on a single core, using commodity processors. We can use a quarter or fewer instructions than a state-of-the-art reference parser like RapidJSON. Unlike other validating parsers, our software (simdjson) makes extensive use of single instruction and multiple data instructions. To ensure reproducibility, simdjson is freely available as open-source software under a liberal license.","authors":["Geoff Langdale","Daniel Lemire"],"meta":["December 2019The VLDB Journal 28(12)","DOI:10.1007/s00778-019-00578-5"],"references":["319597814_Mison_a_fast_JSON_parser_for_data_analytics","315766213_Faster_Base64_Encoding_and_Decoding_using_AVX2_Instructions","333863963_FishStore_Faster_Ingestion_with_Subset_Hashing","333859798_Speculative_Distributed_CSV_Data_Parsing_for_Big_Data_Analytics","327564410_Filter_before_you_parse_faster_analytics_on_raw_data_with_sparser","326456309_Faster_Base64_Encoding_and_Decoding_Using_AVX2_Instructions","325376194_FASTER_A_Concurrent_Key-Value_Store_with_In-Place_Updates","319597745_FADjs_fast_JSON_data_access_using_JIT-based_speculative_optimizations","314828932_Lazy_XML_processing","300298716_Performance_analysis_of_NVMe_SSDs_and_their_implication_on_real_world_databases","264275882_Sinew_A_SQL_system_for_multi-structured_data","273471508_Faster_64-bit_universal_hashing_using_carry-less_multiplications","266656499_JSON_data_management-Supporting_schema-less_development_in_RDBMS","262398932_Data-Parallel_Finite-State_Machines","262295553_Instant_loading_for_main_memory_databases"]}