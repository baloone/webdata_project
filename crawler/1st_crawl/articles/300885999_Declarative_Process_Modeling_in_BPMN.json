{"id":"300885999_Declarative_Process_Modeling_in_BPMN","abstract":"Traditional business process modeling notations, including the standard Business Process Model and Notation (BPMN), rely on an imperative paradigm wherein the process model captures all allowed activity flows. In other words, every flow that is not specified is implicitly disallowed. In the past decade, several researchers have exposed the limitations of this paradigm in the context of business processes with high variability. As an alternative, declarative process modeling notations have been proposed (e.g., Declare). These notations allow modelers to capture constraints on the allowed activity flows, meaning that all flows are allowed provided that they do not violate the specified constraints. Recently, it has been recognized that the boundary between imperative and declarative process modeling is not crisp. Instead, mixtures of declarative and imperative process modeling styles are sometimes preferable, leading to proposals for hybrid process modeling notations. These developments raise the question of whether completely new notations are needed to support hybrid process modeling. This paper answers this question negatively. The paper presents a conservative extension of BPMN for declarative process modeling, namely BPMN-D, and shows that Declare models can be transformed into readable BPMN-D models.","authors":["Giuseppe De Giacomo","Marlon Dumas","Fabrizio Maria Maggi","Marco Montali"],"meta":["June 2015","DOI:10.1007/978-3-319-19069-3_6","Conference: International Conference on Advanced Information Systems Engineering"],"references":["268743962_From_Declarative_Processes_to_Imperative_Models","262335220_Mixing_Paradigms_for_More_Comprehensible_Models","262312446_Declarative_Modeling-An_Academic_Dream_or_the_Future_for_BPM","256457880_On_efficient_processing_of_BPMN-Q_queries","234038280_Data_Centric_BPM_and_the_Emerging_Case_Management_Standard_A_Short_Survey","229124837_Enabling_Flexibility_in_Process-Aware_Information_Systems_Challenges_Methods_Technologies","228729242_Declarative_Specification_and_Verification_of_Service_Choreographies","228693443_Towards_a_taxonomy_of_process_flexibility_extended_version","228610815_Nested_Dynamic_Condition_Response_Graphs","225792142_Declarative_workflows_Balancing_between_flexibility_and_support","220920486_Towards_a_Taxonomy_of_Process_Flexibility","220796119_Business_artifacts_with_guard-stage-milestone_lifecycles_Managing_artifact_interactions_with_conditions_and_events","220593850_Declarative_specification_and_verification_of_service_choreographies","220451918_Projection_approaches_to_process_mining_using_region-based_techniques","220268095_Imperative_versus_Declarative_Process_Modeling_Languages_An_Empirical_Investigation","4292017_DECLARE_Full_support_for_loosely-structured_processes","285919325_Linear_temporal_logic_and_Linear_Dynamic_Logic_on_finite_traces","272261668_Multi-Paradigm_Process_Mining_Retrieving_Better_Models_by_Combining_Rules_and_Sequences","266557448_Monitoring_Business_Metaconstraints_Based_on_LTL_and_LDL_for_Finite_Traces","265612463_The_Automated_Discovery_of_Hybrid_Processes","221999293_Semantics_and_analysis_of_business_process_models_in_BPMN","221586160_Better_Algorithms_for_Analyzing_and_Enacting_Declarative_Workflow_Languages_Using_LTL"]}