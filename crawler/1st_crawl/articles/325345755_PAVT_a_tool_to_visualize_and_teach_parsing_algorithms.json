{"id":"325345755_PAVT_a_tool_to_visualize_and_teach_parsing_algorithms","abstract":"A parsing algorithm visualizer is a tool that visualizes the construction of a parser for a given context-free grammar and then illustrates the use of that parser to parse a given string. Parsing algorithm visualizers are used to teach the course on compiler construction which in invariably included in all undergraduate computer science curricula. This paper presents a new parsing algorithm visualizer that can visualize six parsing algorithms, viz. predictive parsing, simple LR parsing, canonical LR parsing, look-ahead LR parsing, Earley parsing and CYK parsing. The tool logically explains the process of parsing showing the calculations involved in each step. The output of the tool has been structured to maximize the learning outcomes and contains important constructs like FIRST and FOLLOW sets, item sets, parsing table, parse tree and leftmost or rightmost derivation depending on the algorithm being visualized. The tool has been used to teach the course on compiler construction at both undergraduate and graduate levels. An overall positive feedback was received from the students with 89% of them saying that the tool helped them in understanding the parsing algorithms. The tool is capable of visualizing multiple parsing algorithms and 88% students used it to compare the algorithms.","authors":["Somya Sangal","Shreya Kataria","Twishi Tyagi","Nidhi Gupta"],"meta":["November 2018Education and Information Technologies 23(6)","DOI:10.1007/s10639-018-9739-x"],"references":["314111218_PPVT_A_tool_to_visualize_predictive_parsing","313609486_A_new_approach_to_teaching_a_first_course_in_Compiler_Construction","294118606_VCOCO","291376462_LLparse_and_LRparse","264227456_A_New_Practicum_in_Compiler_Construction","262202806_VisiCLANG-a_visible_compiler_for_CLANG","255676541_Planning_and_experience_with_a_one-quarter_course_on_compiler_writing_using_Gries'_book_and_structured_programming","255676338_The_MSL_compiler_writing_project","246579200_JFLAP-An_Interactive_Formal_Languages_and_Automata_Package","242787373_Compiler_construction_in_an_undergraduate_course_Some_difficulties","234817326_Bantam_Java_compiler_project_Experiences_and_extensions","221538720_Animating_parsing_algorithms","234793698_Design_and_Implementation_of_the_UW_Illustrated_Compiler","234785661_Using_visualization_tools_to_teach_compiler_design","221538293_Making_compiler_design_relevant_for_students_who_will_most_likely_never_design_a_compiler"]}