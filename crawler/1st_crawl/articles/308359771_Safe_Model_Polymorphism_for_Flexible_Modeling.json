{"id":"308359771_Safe_Model_Polymorphism_for_Flexible_Modeling","abstract":"Domain-Specific Languages (DSLs) are increasingly used by domain experts to handle various concerns in systems and software development. To support this trend, the Model-Driven Engineering (MDE) community has developed advanced techniques for designing new DSLs. However, the widespread use of independently developed, and constantly evolving DSLs is hampered by the rigidity imposed to the language users by the DSLs and their tooling, e.g., for manipulating a model through various similar DSLs or successive versions of a given DSL. In this paper, we propose a disciplined approach that leverages type groups' polymorphism to provide an advanced type system for manipulating models, in a polymorphic way, through different DSL interfaces. A DSL interface, a.k.a. . model type, specifies a set of features, or services, available on the model it types, and subtyping relations among these model types define the safe substitutions. This type system complements the Melange language workbench and is seamlessly integrated into the Eclipse Modeling Framework (EMF), hence providing structural interoperability and compatibility of models between EMF-based tools. We illustrate the validity and practicability of our approach by bridging safe interoperability between different semantic and syntactic variation points of a finite-state machine (FSM) language, as well as between successive versions of the Unified Modeling Language (UML).","authors":["Thomas Degueule","Benoit Combemale","Arnaud Blouin","Olivier Barais"],"meta":["September 2016Computer Languages Systems & Structures 49","DOI:10.1016/j.cl.2016.09.001"],"references":["308567670_A-posteriori_typing_for_Model-Driven_Engineering","281352752_Weaving_Concurrency_in_eXecutable_Domain-Specific_Modeling_Languages","276837504_Automated_Chaining_of_Model_Transformations_with_Incompatible_Metamodels","267041626_A_Component_Model_for_Model_Transformations","262276848_Feature-Oriented_Programming_With_Object_Algebras","262159833_Extensibility_for_the_masses_practical_extensibility_with_object_algebras","257492115_Mashup_of_Meta-Languages_and_its_Implementation_in_the_Kermeta_Language_Workbench","254004308_A_DSML_for_reversible_transformations","229062445_On_Model_Subtyping","226203447_On_Model_Typing","225779876_Lightweight_Family_Polymorphism","225447939_Generic_for_Model_Management_Operations","225379583_On_Metamodeling_in_Megamodels","221496592_A_Nominal_Theory_of_Objects_with_Dependent_Types","221323206_Lightweight_Family_Polymorphism","221223925_Generic_Meta-modelling_with_Concepts_Templates_and_Mixin_Layers","221137700_Approaches_for_Model_Transformation_Reuse_Factorization_and_Composition","221137696_Model_Migration_with_Epsilon_Flock","220868510_Generic_and_Meta-transformations_for_Model_Transformation_Engineering","213885984_Pluggable_Type_Systems","213878848_Family_Polymorphism","200040446_When_and_How_to_Develop_Domain-Specific_Languages","308595323_Model-driven_engineering","292340793_Eco_A_Language_Composition_Editor","281967047_Melange_A_Meta-language_for_Modular_and_Reusable_Development_of_DSLs","269555863_Finite-State_Language_Processing","267448243_The_Unified_Modeling_Language_UML_V241","264922652_EMF_Eclipse_Modeling_Framework_20_2nd_Edition","262726678_Statecharts_A_Visual_Formalism_For_Complex_Systems","262293512_Using_Model_Types_to_Support_Contract-Aware_Model_Substitutability","257491507_On_model_compatibility_with_referees_and_contexts","255907352_EMF_Eclipse_Modeling_Framework","243776126_RFC_2396_Uniform_Resource_Identi_ers_URI_Generic_syntax","236169821_Coupled_Evolution_in_Model-Driven_Engineering","235956984_Kompren_Modeling_and_Generating_Model_Slicers","235643896_Scalable_Extensibility_via_Nested_Inheritance","229877372_Empirical_evidence_about_the_UML_A_systematic_literature_review","224773145_Design_Patterns_Elements_of_Reusable_Object-Oriented_Software","224260059_Estimating_Footprints_of_Model_Operations","222251725_ATL_A_model_transformation_tool","221554010_Empirical_assessment_of_MDE_in_industry","221496503_Semantic_Casts_Contracts_and_Structural_Subtyping_in_a_Nominal_World","221496278_Metamodel_Adaptation_and_Model_Co-adaptation","221320993_Xtext_implement_your_language_faster_than_the_quick_and_dirty_way","221137706_The_Epsilon_Transformation_Language","221108744_Software_extension_and_integration_with_type_classes","220989537_Templatable_Metamodels_for_Semantic_Variation_Points","220868234_UML_Vs_Classical_Vs_Rhapsody_Statecharts_Not_All_Models_Are_Created_Equal","220131014_Profiles_in_a_strict_metamodeling_framework","215863688_The_Unified_Modeling_Language_Reference_Manual","47523349_Formal_executable_semantics_for_conformance_in_the_MDE_framework","43406936_Improving_modularity_and_usability_of_interactive_systems_with_Malai","42741812_Meta-model_Pruning","30814647_Foundations_of_Meta-Pyramids_Languages_vs_Metamodels_--_Episode_II_Story_of_Thotus_the_Baboon1","44371024_Introduction_to_the_Theory_of_Finite-State_Machines"]}