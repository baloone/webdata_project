{"id":"303296639_Teaching_code_review_management_using_branch_based_workflows","abstract":"Developing software with high code quality in a university environment is a challenge for instructors of software engineering capstone courses. Teaching students how to achieve quality and how to conduct code reviews in projects is often neglected, although it helps to improve maintainability.\nIn this paper we describe an informal review technique: branch based code reviews. Developers realize requirements in feature branches. Before they integrate source code into the main codebase, the code is reviewed asynchronously over the Internet in a quality gate to identify defects, design flaws and code flaws. Traditionally reviewing has been a task of the instructor. In our course, we delegate it to students of the development team. Our hypothesis is that students learn and adapt best practices from each other, improving code quality and their coding skills.\nWe applied this technique in a workflow during a project-based capstone course over the period of three semesters. 300 students conducted 2939 code reviews with 4665 comments in 33 projects with industry customers. We evaluated the workflow in a qualitative study using interviews. Our key findings are that students do not longer see reviews as a bureaucratic burden and improve their skills through the comments of experienced team members. They are convinced that reviewing code leads to higher code quality and 89 % want to use the workflow again in future projects.","authors":["Stephan Krusche","Mjellma Berisha","Bernd Bruegge"],"meta":["May 2016","DOI:10.1145/2889160.2889191","Conference: the 38th International Conference"],"references":["280067404_Software_Engineering_Project_Courses_with_Industrial_Clients","271635510_Continuous_Delivery_Huge_Benefits_but_Challenges_Too","262450962_Rugby_An_Agile_Process_Model_Based_on_Continuous_Delivery","337907516_Peer_learning_in_higher_education_learning_from_and_with_each_other","319394324_A_successful_Git_branching_model","312146075_Herbsleb_J_Influence_of_social_and_technical_factors_for_evaluating_contribution_in_GitHub_In_Proc_the_36th_ICSE","271528890_Refactoring_Improving_the_Design_of_Existing_Code","266656324_How_do_centralized_and_distributed_version_control_systems_impact_software_changes","264799594_Influence_of_social_and_technical_factors_for_evaluating_contribution_in_GitHub","263849049_Extreme_Programming_Explained_Embrace_Change"]}