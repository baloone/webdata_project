{"id":"299550113_Distinguishing_extended_finite_state_machine_configurations_using_predicate_abstraction","abstract":"Extended Finite State Machines (EFSMs) provide a powerful model for the derivation of functional tests for software systems and protocols. Many EFSM based testing problems, such as mutation testing, fault diagnosis, and test derivation involve the derivation of input sequences that distinguish configurations of a given EFSM specification.\nMethod and Results\nIn this paper, a method is proposed for the derivation of a distinguishing sequence for two explicitly given or symbolically represented, possibly infinite, sets of EFSM configurations using a corresponding FSM abstraction that is derived based on finite sets of predicates and parameterized inputs. An abstraction function that maps configurations and transitions of the EFSM specification to corresponding abstract states and transitions of the abstraction FSM is proposed. Properties of the abstraction are established along with a discussion on a proper selection of the sets of predicates and parameterized inputs used while deriving an FSM abstraction. If no distinguishing sequence is found for the current FSM abstraction then a refined abstraction is constructed by extending the sets of predicates and parameterized inputs. Simple heuristics for the selection of additional predicates are discussed and application examples are provided.\nThe work can be applied in various domains such as EFSM-based test derivation, mutation testing, and fault diagnosis.","authors":["Khaled El-Fakih","Nina Yevtushenko","Marius Bozga","Saddek Bensalem"],"meta":["December 2016Journal of Software Engineering Research and Development 4(1)","DOI:10.1186/s40411-016-0027-4"],"references":["316516957_Results_on_the_Interface_Between_Formal_Verification_and_ATPG","300645847_Describing_Homing_and_Distinguishing_Sequences_for_Nondeterministic_Finite_State_Machines_via_Synchronizing_Automata","291232963_Distinguishing_Sequences_for_Partially_Specified_FSMs","290888006_On_Testing_against_Partial_Non-observable_Specifications","265375029_Super-Exponential_Complexity_of_Presburger_Arithmetic","260648870_Generating_Test_Cases_for_Real-Time_Systems_Based_on_Symbolic_Models","244446957_Verification_tools_for_finite-state_concurrent_programs","243677064_Two_approaches_linking_a_test_generation_tool_with_verification_techniques","239665913_Protocol_Validation_Tools_as_Test_Case_Generators","239480642_Construction_of_abstract_state_graphs_of_infinite_systems_with_PVS"]}