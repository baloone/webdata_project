{"id":"262177836_Canonical_Structures_for_the_Working_Coq_User","abstract":"This paper provides a gentle introduction to the art of programming type inference with the mechanism of Canonical Structures. Programmable type inference has been one of the key ingredients for the successful formalization of the Odd Order Theorem using the Coq proof assistant. The paper concludes comparing the language of Canonical Structures to the one of Type Classes and Unification Hints.","authors":["Assia Mahboubi","Enrico Tassi"],"meta":["July 2013","DOI:10.1007/978-3-642-39634-2_5","Conference: Proceedings of the 4th international conference on Interactive Theorem Proving"],"references":["257303201_Generic_Proof_Tools_and_Finite_Group_Theory","228707929_Fun_with_phantom_types","221302555_Hints_in_Unification","221241180_How_to_make_Ad_Hoc_proof_automation_less_Ad_Hoc","314083902_Fun_with_phantom_types","258456211_Formalized_algebraic_numbers_construction_and_first-order_theory","225149287_First-Class_Type_Classes","221351435_Constructive_category_theory","221234899_Point-Free_Set-Free_Concrete_Linear_Algebra","220997652_Typing_Algorithm_in_Type_Theory_with_Inheritance"]}