{"id":"319112216_Guidelines_for_using_empirical_studies_in_software_engineering_education","abstract":"Software engineering education is under constant pressure to provide students with industry-relevant knowledge and skills. Educators must address issues beyond exercises and theories that can be directly rehearsed in small settings. Industry training has similar requirements of relevance as companies seek to keep their workforce up to date with technological advances. Real-life software development often deals with large, software-intensive systems and is influenced by the complex effects of teamwork and distributed software development, which are hard to demonstrate in an educational environment. A way to experience such effects and to increase the relevance of software engineering education is to apply empirical studies in teaching. In this paper, we show how different types of empirical studies can be used for educational purposes in software engineering. We give examples illustrating how to utilize empirical studies, discuss challenges, and derive an initial guideline that supports teachers to include empirical studies in software engineering courses. Furthermore, we give examples that show how empirical studies contribute to high-quality learning outcomes, to student motivation, and to the awareness of the advantages of applying software engineering principles. Having awareness, experience, and understanding of the actions required, students are more likely to apply such principles under real-life constraints in their working life.","authors":["Fabian Fagerholm","Marco Kuhrmann","Jürgen Münch"],"meta":["August 2017PeerJ Computer Science 3(4)","DOI:10.7717/peerj-cs.131"],"references":["301778391_Distributed_Software_Development_with_One_Hand_Tied_Behind_the_Back_A_Course_Unit_to_Experience_the_Role_of_Communication_in_GSD","300115453_Exploring_Machine_Learning_Methods_to_Automatically_Identify_Students_in_Need_of_Assistance","298345379_The_RIGHT_model_for_Continuous_Experimentation","291777847_When_Teams_Go_Crazy_An_Environment_to_Experience_Group_Dynamics_in_Software_Project_Management_Courses","284352854_Identification_of_programmers_from_typing_patterns","345134920_Evidence-Based_Software_Engineering_and_Systematic_Reviews","329605552_Who_Cares_About_Software_Process_Modelling_A_First_Investigation_About_the_Perceived_Value_of_Process_Engineering_and_Process_Consumption","312985464_Building_theories_from_case_study_research","289770166_Guide_to_Advanced_Empirical_Software_Engineering","285970744_Motivation_project-based_learning_Sustaining_the_doing_supporting_the_learning"]}