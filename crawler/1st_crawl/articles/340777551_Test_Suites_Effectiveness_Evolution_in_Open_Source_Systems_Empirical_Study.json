{"id":"340777551_Test_Suites_Effectiveness_Evolution_in_Open_Source_Systems_Empirical_Study","abstract":"Test suite code coverage is usually used to indicate the capability of a test suite in detecting faults. Earlier research studies, which explored the relationship among test suite effectiveness and code coverage have not addressed this relationship evolutionally. Moreover, some of these works were studied small or identical domain systems, which make the result generalization process unclear for other systems. Finally, some of these studies were conducted with automatically generated test suites, which might not present the real situation for studied systems, so the results cannot be generalized to real test suites.\n\nIn this paper, the authors empirically explore three open-source software systems along with their 11 versions. These versions are evolved over time and might have more sources of code and test suites. This work objective is to study the correlation between test suite effectiveness, the size of the test suite, and coverage for three Java programs during their evolution. In this work, the code coverage, test suite LOC and mutation testing coverage are measured to assess the correlation between the effectiveness of fault detection, code coverage, and test suite size. Based on the result we cannot generalize the assumption that test size is always revealing a positive correlation with its eï¬€ectiveness, but still weak to the high correlation between test effectiveness, test size, and coverage.","authors":["Mohammed Akour","Mamdouh Alenezi"],"meta":["March 2020Indonesian Journal of Electrical Engineering and Computer Science 19(2)","DOI:10.11591/ijeecs.v19.i2.pp992-999","Project: Software Testing"],"references":["339802258_A_review_of_object-oriented_approach_for_test_case_prioritization","337184687_The_Impact_of_Co-evolution_of_Code_Production_and_Test_Suites_through_Software_Releases_in_Open_Source_Software_Systems","334142515_Evolutionary_algorithms_for_path_coverage_test_data_generation_and_optimization_a_review","324959836_Mythical_Unit_Test_Coverage","312159361_Test_Suite_Effectiveness_An_Indicator_for_Open_Source_Software_Quality","281965977_Code_Coverage_and_Test_Suite_Effectiveness_Empirical_Study_with_Real_Bugs_in_Large_Systems","277664637_Are_Mutants_a_Valid_Substitute_for_Real_Faults_in_Software_Testing","345081568_Are_mutation_scores_correlated_with_real_fault_detection_a_large_scale_empirical_study_on_the_relationship_between_mutants_and_real_faults","337243761_Do_Pseudo_Test_Suites_Lead_to_Inflated_Correlation_in_Measuring_Test_Effectiveness","325489129_Introduction_to_Software_Testing"]}