{"id":"223655473_Comparison_of_the_comprehension_of_object-oriented_and_procedural_programs_by_novice_programmers","abstract":"This paper reports on two experiments comparing mental representations and program comprehension by novices in the object-oriented and procedural styles. The subjects were novice programmers enrolled in a second course in programming which taught either the object-oriented or the procedural paradigm. The first experiment compared the mental representations and comprehension of short programs written in the procedural and object-oriented styles. The second experiment extended the study to a larger program incorporating more advanced language features. For the short programs there was no significant difference between the two groups with respect to the total number of questions answered correctly, but the object-oriented subjects were superior to the procedural subjects at answering questions about program function. This suggests that function information was more readily available in their mental representations of the programs and supports an argument that the object-oriented notation highlights function at the level of the individual class. For the long program a corresponding effect was not found. The comprehension of procedural subjects was superior to object-oriented subjects on all types of question. The difficulties experienced by the object-oriented subjects in answering questions in a larger program suggest that they faced problems in marshaling information and drawing inferences from it. We suggest that this result may be related to a longer learning curve for novices of the object-oriented style, as well as to features of the OO style and the particular OO language notation.","authors":["Susan Wiedenbeck","Vennila Ramalingam","Suseela Sarasamma","Cynthia L Corritore"],"meta":["March 1999Interacting with Computers 11(3):255-282","DOI:10.1016/S0953-5438(98)00029-0","SourceDBLP"],"references":["238987815_Comprehensibility_of_visual_and_textual_programs_A_test_of_superlativism_against_the_'match-mismatch'_conjecture","233072654_Reading_Procedural_Texts_Effects_of_Purpose_for_Reading_and_Predictions_of_Reading_Comprehension_Models","228576503_The_'right'tool_for_the_task_An_investigation_of_external_representations_program_abstractions_and_task_requirements","226712887_Evaluating_inheritance_depth_on_the_maintainability_of_object-oriented_software","224483549_Empirical_Studies_of_Programming_Knowledge","221514447_Smalltalk_scaffolding_a_case_study_of_minimalist_instruction","220421758_Designing_Documentation_to_Compensate_for_Delocalized_Plans","30871753_Understanding_Object-_Oriented_A_Unifying_Paradigm","1960342_Mental_Representations_Constructed_by_Experts_and_Novices_in_Object-Oriented_Program_Comprehension","1960332_Design_Strategies_and_Knowledge_in_Object-Oriented_Programming_Effects_of_Experience","313699830_Mental_Models_and_Software_Maintenance","313392731_Cognitive_dimensions_of_notations_in","300949505_The_Nature_of_Programming","280148453_A_comparison_of_program_comprehension_by_procedural_and_object_-oriented_programmers","271213848_Mental_Models_Towards_a_Cognitive_Science_of_Language_Inference_and_Conciousness","270960089_Strategy_of_Discourse_Comprehension","262311589_Empirical_Studies_of_Programmers","247344496_Three_components_of_understanding_a_programmer's_manual_Verbatim_propositional_and_situational_representations","245693736_Com-paring_the_Comprehensibility_of_Textual_and_Graphical_Programs_The_Case_of_Petri_Nets","242509858_The_Cognitive_Consequences_of_Object-Oriented_Design","242403498_Comprehension_strategies_in_programming","242368448_A_comparison_of_the_debugging_behavior_of_expert_and_novice_programmers","235678850_Empirical_Studies_of_Programming_Knowledge","234758998_Cognitive_Activities_and_Levels_of_Abstraction_in_Procedural_and_Object-Oriented_Design","233119540_Towards_a_cognitive_browser_for_OOPS","232619504_The_effect_of_inheritance_on_the_maintainability_of_object-oriented_software_An_empirical_study","230596112_Object-Oriented_Programming","223852912_Stimulus_structures_and_mental_representations_in_expert_comprehension_of_computer_programs_1","223464037_The_nature_and_development_of_programming_plans","223215391_Comprehension_and_recall_of_miniature_programs","222796257_Mental_models_and_software_maintenance","222281826_When_do_diagrams_make_good_computer_languages","221515135_Towards_a_model_of_cognitive_process_in_logical_design_comparing_object-oriented_and_traditional_functional_decomposition_software_methodologies","220302639_What_Do_Novices_Learn_During_Program_Comprehension","220278875_Teaching_Eiffel_as_a_First_Language","220108810_The_Role_of_Program_Structure_in_Software_Maintenance","220107075_The_effects_of_paradigm_on_cognitive_activities_in_design","220106870_Information_Relationships_in_PROLOG_Programs_How_Do_Programmers_Comprehend_Functionality","200086132_Cognitive_dimensions_of_notations"]}