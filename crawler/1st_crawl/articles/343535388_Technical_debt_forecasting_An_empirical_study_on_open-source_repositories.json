{"id":"343535388_Technical_debt_forecasting_An_empirical_study_on_open-source_repositories","abstract":"Technical debt (TD) is commonly used to indicate additional costs caused by quality compromises that can yield short-term benefits in the software development process, but may negatively affect the long-term quality of software products. Predicting the future value of TD could facilitate decision-making tasks regarding software maintenance and assist developers and project managers in taking proactive actions regarding TD repayment. However, no notable contributions exist in the field of TD forecasting, indicating that it is a scarcely investigated field. To this end, in the present paper, we empirically evaluate the ability of machine learning (ML) methods to model and predict TD evolution. More specifically, an extensive study is conducted, based on a dataset that we constructed by obtaining weekly snapshots of fifteen open source software projects over three years and using two popular static analysis tools to extract software-related metrics that can act as TD predictors. Subsequently, based on the identified TD predictors, a set of TD forecasting models are produced using popular ML algorithms and validated for various forecasting horizons. The results of our analysis indicate that linear Regularization models are able to fit and provide meaningful forecasts of TD evolution for shorter forecasting horizons, while the non-linear Random Forest regression performs better than the linear models for longer forecasting horizons. In most of the cases, the future TD value is captured with a sufficient level of accuracy. These models can be used to facilitate planning for software evolution budget and time allocation. The approach presented in this paper provides a basis for predictive TD analysis, suitable for projects with a relatively long history. To the best of our knowledge, this is the first study that investigates the feasibility of using ML models for forecasting TD.","authors":["Dimitrios Tsoukalas","Dionysios Kehagias","Miltiadis Siavvas","Alexander Chatzigeorgiou"],"meta":["August 2020Journal of Systems and Software 170(3):110777","DOI:10.1016/j.jss.2020.110777"],"references":["336367478_Evolution_of_Technical_Debt_An_Exploratory_Study","332984338_Methods_and_Tools_for_TD_Estimation_and_Forecasting_A_State-of-the-art_Survey","323847484_Statistical_and_Machine_Learning_forecasting_methods_Concerns_and_ways_forward","319106256_The_Evolution_of_Technical_Debt_in_the_Apache_Ecosystem","318961634_On_the_diffuseness_and_the_impact_on_maintainability_of_code_smells_a_large_scale_empirical_investigation","317195033_QATCH_-_An_adaptive_framework_for_software_product_quality_assessment","311532334_Technical_Debt_Indexes_Provided_by_Tools_A_Preliminary_Discussion","309185766_Support_vector_regression_machines","309103609_Benchmarking_framework_for_maintainability_prediction_of_open_source_software_using_object_oriented_metrics","304627726_Machine_learning_strategies_for_time_series_forecasting","276920993_Predicting_and_Quantifying_the_Technical_Debt_in_Cloud_Software_Engineering","275502586_Debt-Prone_Bugs_Technical_Debt_in_Software_Maintenance","269396520_A_Systematic_Mapping_Study_on_Technical_Debt_and_Its_Management","267453377_The_Correspondence_Between_Software_Quality_Models_and_Technical_Debt_Estimation_Approaches","262566867_A_Study_of_Cross-Validation_and_Bootstrap_for_Accuracy_Estimation_and_Model_Selection","261464425_Estimating_the_size_cost_and_types_of_Technical_Debt","261464423_Organizing_the_technical_debt_landscape","260648949_Quantifying_the_Effect_of_Code_Smells_on_Maintenance_Effort","257686389_An_in-depth_investigation_into_the_relationships_between_structural_metrics_and_unit_testability_in_object-oriented_systems","256708004_Comparing_Four_Approaches_for_Technical_Debt_Identification","256707867_A_Case_Study_on_Effectively_Identifying_Technical_Debt","254040768_Can_we_predict_types_of_code_changes_An_empirical_analysis","249607006_Introduction_and_Roadmap_History_and_Challenges_of_Software_Evolution","239763591_The_SQALE_method_for_evaluating_Technical_Debt","239763590_Investigating_the_impact_of_code_smells_debt_on_quality_code_evaluation","334167577_On_the_Application_of_Cross-Project_Validation_for_Predicting_Maintainability_of_Open_Source_Software_using_Machine_Learning_Techniques","329625003_A_Preliminary_Study_on_the_Relationship_Among_Software_Metrics_and_Specific_Vulnerability_Types","321975328_How_Do_Developers_Fix_Issues_and_Pay_Back_Technical_Debt_in_the_Apache_Ecosystem","315729358_Assessing_Code_Smell_Interest_Probability_A_Case_Study","308059469_Cross-Validatory_Choice_and_Assessment_of_Statistical_Predictions","301822555_Efficient_and_robust_automated_machine_learning","300586573_Analysis_and_Prediction_of_Design_Model_Evolution_Using_Time_Series","289180863_Software_Evolution_Analysis_and_Visualization","286570371_Predicting_Vulnerable_Components_Software_Metrics_vs_Text_Mining","284404787_Multiple_regression_analysis","284070211_Identification_and_Management_of_Technical_Debt_A_Systematic_Mapping_Study","279762794_Estimating_the_Breaking_Point_for_Technical_Debt","279158723_Comparing_and_experimenting_machine_learning_techniques_for_code_smell_detection","274372501_The_Financial_Aspect_of_Managing_Technical_Debt_A_Systematic_Literature_Review","273790053_Time_series_modeling_of_vulnerabilities","273176858_Forecasting_Java_Software_Evolution_Trends_Employing_Network_Models","272890035_Operationalised_Product_Quality_Models_and_Assessment_The_Quamoco_Approach","271546374_QMOOD_metric_sets_to_assess_quality_of_Java_program","264441259_Prediction_of_testability_using_the_design_metrics_for_object-oriented_software","260649632_Managing_technical_debt_with_the_SQALE_method","254331729_Generalized_Inverses_Ridge_Regression_Biased_Linear_Estimation_and_Nonlinear_Estimation","254001789_Prioritizing_design_debt_investment_opportunities","250309976_A_formal_approach_to_technical_debt_decision_making","238181607_An_Introduction_to_Kernel_and_Nearest-Neighbor_Nonparametric_Regression","236392124_Nonlinear_Signal_Processing_Using_Neural_Networks_Prediction_and_System_Modelling","235732699_Using_Automatic_Static_Analysis_to_Identify_Technical_Debt","235709216_Assessing_technical_debt_by_identifying_design_flaws_in_software_systems","234791792_Principles_of_survey_research_part_3_constructing_a_survey_instrument","233758902_Using_Object-Oriented_Design_Metrics_to_Predict_Software_Defects","233813965_Technical_Debt_From_Metaphor_to_Theory_and_Practice"]}