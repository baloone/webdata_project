{"id":"283532918_Subgroup_Security_in_Pairing-Based_Cryptography","abstract":"Pairings are typically implemented using ordinary pairing-friendly elliptic curves. The two input groups of the pairing function are groups of elliptic curve points, while the target group lies in the multiplicative group of a large finite field. At moderate levels of security, at least two of the three pairing groups are necessarily proper subgroups of a much larger composite-order group, which makes pairing implementations potentially susceptible to small-subgroup attacks.\nTo minimize the chances of such attacks, or the effort required to thwart them, we put forward a property for ordinary pairing-friendly curves called subgroup security. We point out that existing curves in the literature and in publicly available pairing libraries fail to achieve this notion, and propose a list of replacement curves that do offer subgroup security. These curves were chosen to drop into existing libraries with minimal code change, and to sustain state-of-the-art performance numbers. In fact, there are scenarios in which the replacement curves could facilitate faster implementations of protocols because they can remove the need for expensive group exponentiations that test subgroup membership.","authors":["Paulo S. L. M. Barreto","Craig Costello","Rafael Misoczki","Michael Naehrig"],"meta":["August 2015","DOI:10.1007/978-3-319-22174-8_14","Conference: LATINCRYPT 2015Volume: 9230"],"references":["274650492_Exponentiating_in_Pairing_Groups","260870163_Implementing_Pairings_at_the_192-Bit_Security_Level","346644827_Elliptic_Curves_in_Cryptography","304554882_Type_2_Structure-Preserving_Signature_Schemes_Revisited","274573556_Software_Implementation_of_an_Attribute-Based_Encryption_Scheme","266860952_Faster_Hashing_to_mathbb_G_2","266709815_Advance_in_Elliptic_Curve_Cryptography","262250482_Integer_Variable_CH---Based_Ate_Pairing","252887999_A_normal_form_for_elliptic_curves","245916420_Differential_fault_analysis_on_elliptic_curve_cryptosystems"]}