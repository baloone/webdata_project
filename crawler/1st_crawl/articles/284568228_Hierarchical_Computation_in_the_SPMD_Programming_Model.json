{"id":"284568228_Hierarchical_Computation_in_the_SPMD_Programming_Model","abstract":"Large-scale parallel machines are programmed mainly with the single program, multiple data (SPMD) model of parallelism. While this model has advantages of scalability and simplicity, it does not fit well with divide-and-conquer parallelism or hierarchical machines that mix shared and distributed memory. In this paper, we define the recursive single program, multiple data model (RSPMD) that extends SPMD with a hierarchical team mechanism to support hierarchical algorithms and machines. We implement this model in the Titanium language and describe how to eliminate a class of deadlocks by ensuring alignment of collective operations. We present application case studies evaluating the RSPMD model, showing that it enables divide-and-conquer algorithms such as sorting to be elegantly expressed and that team collective operations increase performance of conjugate gradient by up to a factor of two. The model also facilitates optimizations for hierarchical machines, improving scalability of particle in cell by 8x and performance of sorting and a stencil code by up to 40 % and 14 %, respectively.","authors":["Amir Kamil","Katherine Yelick"],"meta":["October 2014","DOI:10.1007/978-3-319-09967-5_1","Conference: International Workshop on Languages and Compilers for Parallel Computing"],"references":["236135736_The_Nas_Parallel_Benchmarks","228734882_Introduction_to_UPC_and_language_specification","228533486_Hierarchical_Additions_to_the_SPMD_Programming_Model","221643683_Programming_for_parallelism_and_locality_with_hierarchically_tiled_arrays","221497064_Titanium_Performance_and_Potential_An_NPB_Experimental_Study","221497007_Enforcing_Textual_Alignment_of_Collectives_Using_Dynamic_Checks","221496788_Concurrency_Analysis_for_Parallel_Programs_with_Textually_Aligned_Barriers","221496743_Hierarchical_Place_Trees_A_Portable_Abstraction_for_Task_Parallelism_and_Data_Movement","221477564_Hierarchical_Pointer_Analysis_for_Distributed_Programs","200040255_The_Fortress_Language_Specification","30816202_Harnessing_the_Multicores_Nested_Data_Parallelism_in_Haskell","313135583_Sequoia_Programming_the_memory_hierarchy","266485249_Single_Program_Multiple_Data_Programming_for_Hierarchical_Computations","261212973_Designing_a_unified_programming_model_for_heterogeneous_machines","246984932_Co-Array_Fortran_for_parallel_programming","236535352_Parallel_sorting_and_data_partitioning_by_sampling","228918193_Experiences_in_using_Titanium_for_simulation_of_immersed_boundary_biological_systems","220105573_Titanium_A_High-performance_Java_Dialect","213884599_The_Fortress_Language_Specification","2870384_Practical_Parallel_Divide-and-Conquer_Algorithms","2703727_Nesl_A_Nested_Data-Parallel_Language"]}