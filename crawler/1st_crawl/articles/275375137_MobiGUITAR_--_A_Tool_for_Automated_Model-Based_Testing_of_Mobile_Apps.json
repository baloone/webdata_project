{"id":"275375137_MobiGUITAR_--_A_Tool_for_Automated_Model-Based_Testing_of_Mobile_Apps","abstract":"As mobile devices become increasingly smarter and more powerful, so too must the engineering of their software. User-interface-driven system testing of these devices is gaining popularity, with each vendor releasing some automation tool. However, these tools are inappropriate for amateur programmers, an increasing portion of app developers. MobiGUITAR (Mobile GUI Testing Framework) provides automated GUI-driven testing of Android apps. It's based on observation, extraction, and abstraction of GUI widgets' run-time state. The abstraction is a scalable state machine model that, together with test coverage criteria, provides a way to automatically generate test cases. When applied to four open-source Android apps, MobiGUITAR automatically generated and executed 7,711 test cases and reported 10 new bugs. Some bugs were Android-specific, stemming from the event-and activity-driven nature of Android.","authors":["Domenico Amalfitano","Anna Rita Fasolino","Porfirio Tramontana","Bryan Dzung Ta"],"meta":["April 2014IEEE Software 32(5):1-1","DOI:10.1109/MS.2014.55"],"references":["254462822_Search-based_system_testing_High_coverage_no_false_alarms","311856151_Guided_GUI_testing_of_android_apps_with_minimal_restart_and_approximate_learning","309904908_Automated_concolic_testing_of_smartphone_apps","262392393_Dynodroid_An_input_generation_system_for_Android_apps","262219897_Guided_GUI_Testing_of_Android_Apps_with_Minimal_Restart_and_Approximate_Learning","254463886_Using_GUI_ripping_for_automated_testing_of_Android_applications","254007517_Crawling_AJAX-Based_Web_Applications_through_Dynamic_Analysis_of_User_Interface_State_Changes","228915698_Automating_GUI_Testing_for_Android_Applications","221200490_Reverse_Engineering_Finite_State_Machines_from_Rich_Internet_Applications","220069903_Context-Aware_Adaptive_Applications_Fault_Patterns_and_Their_Automated_Identification","4068980_GUI_Ripping_Reverse_Engineering_of_Graphical_User_Interfaces_for_Testing","2377138_Coverage_Criteria_for_GUI_Testing"]}