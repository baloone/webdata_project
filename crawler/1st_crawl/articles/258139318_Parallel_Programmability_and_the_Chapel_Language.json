{"id":"258139318_Parallel_Programmability_and_the_Chapel_Language","abstract":"In this paper we consider productivity challenges for parallel programmers and explore ways that parallel language design might help improve end-user productivity. We offer a candidate list of desirable qualities for a parallel programming language, and describe how these qualities are addressed in the design of the Chapel language. In doing so, we provide an overview of Chapel's features and how they help address parallel productivity. We also survey current techniques for parallel programming and describe ways in which we consider them to fall short of our idealized productive programming model.","authors":["B.L. Chamberlain","David Callahan","H.P. Zima"],"meta":["August 2007International Journal of High Performance Computing Applications 21(3):291-312","DOI:10.1177/1094342007078442","SourceDBLP"],"references":["234790233_Compiler_and_runtime_support_for_efficient_software_transactional_memory","228734882_Introduction_to_UPC_and_language_specification","226522417_ARMCI_A_portable_remote_memory_copy_library_for_distributed_array_libraries_and_compiler_run-time_systems","221643796_Composable_memory_transactions","221475444_Scheduling_on_the_Tera_MTA","221235359_A_Performance_Analysis_of_the_Berkeley_UPC_Compiler","220752252_Optimizing_memory_transactions","220752249_Compiler_and_runtime_support_for_efficient_software_transactional_memory","220060761_Co-arrays_in_the_Next_Fortran_Standard","24289682_Vienna_FORTRAN_A_language_specification_version_11","4178708_Communication_optimizations_for_fine-grained_UPC_applications","4139029_Automatic_Support_for_Irregular_Computations_in_a_High-Level_Language","4095191_A_multi-platform_Co-array_Fortran_compiler","2799391_Cilk_Efficient_Multithreaded_Computing","330265251_A_Programmer's_Guide_to_ZPL","329651293_PVM_A_Users'_Guide_and_Tutorial_for_Network_Parallel_Computing","270956400_PVM_Parallel_Virtual_Machine_A_Users'Guide_and_Tutorial_for_Networked_Parallel_Computing","262493452_Parallel_Programming_in_OpenMP","260480088_PVM_Parallel_Virtual_Machine_A_Users_Guide_and_Tutorial_for_Networked_Parallel_Computing","257668719_High_Performance_Fortran_Language_Specification","255738707_Message_Passing_Interface_Forum_MPI_A_Message-passing_Interface_Standard_Version_22","254994776_Babel_Users'_Guide","246984932_Co-Array_Fortran_for_parallel_programming","242447728_The_Design_and_Implementation_of_a_Region-Based_Parallel_Language","242386491_Titanium_language_reference_manual_v1","239537328_Practical_Lock-Freedom","237005410_Parallel_Programming_in_OpenMP","236573358_A_Generalized_Portable_SHMEM_Library_for_High_Performance_Computing","234792149_A_View_of_Coroutines","230808404_MPI_The_Complete_Reference-Volume_2_The_MPI2_Extensions","221643501_Compiling_Fortran_8x_Array_Features_for_the_Connection_Machine_Computer_System","220771635_Active_Messages_A_Mechanism_for_Integrated_Communication_and_Computation","220730954_Regions_an_abstraction_for_expressing_array_computation","220425991_Composable_memory_transactions","220105573_Titanium_A_High-performance_Java_Dialect","213880732_Array_language_support_for_parallel_sparse_computation","213878738_Abstraction_Mechanisms_in_CLU","213876776_Global-view_abstractions_for_user-defined_reductions_and_scans","213876767_An_Approach_To_Data_Distributions_in_Chapel","38001679_The_Cilk_System_for_Parallel_Multithreaded_Computing","36002069_Cilk_Efficient_Multithreaded_Computing","35491561_The_design_and_implementation_of_a_region-based_parallel_programming_language","33517464_High-Level_Programming_Language_Abstractions_for_Advanced_and_Dynamic_Parallel_Computations","4221736_Portable_Performance_of_Data_Parallel_Languages","3740758_ZPL's_WYSIWYG_performance_model","3593100_Scheduling_multithreaded_computations_by_work_stealing","3344403_OpenMP_An_Industry-Standard_API_for_Shared-Memory_Programming","3300198_Vienna-FortranHPF_extensions_for_sparse_and_irregular_problems_and_their_compilation","2911559_UPC_Language_Specification_v111","2819735_Scheduling_Multithreaded_Computations_by_Work_Stealing"]}