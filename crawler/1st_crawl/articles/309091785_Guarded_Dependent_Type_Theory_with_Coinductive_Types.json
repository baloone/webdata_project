{"id":"309091785_Guarded_Dependent_Type_Theory_with_Coinductive_Types","abstract":"We present guarded dependent type theory, \\(\\mathsf {gDTT}\\), an extensional dependent type theory with a ‘later’ modality and clock quantifiers for programming and proving with guarded recursive and coinductive types. The later modality is used to ensure the productivity of recursive definitions in a modular, type based, way. Clock quantifiers are used for controlled elimination of the later modality and for encoding coinductive types using guarded recursive types. Key to the development of \\(\\mathsf {gDTT}\\) are novel type and term formers involving what we call ‘delayed substitutions’. These generalise the applicative functor rules for the later modality considered in earlier work, and are crucial for programming and proving with dependent types. We show soundness of the type theory with respect to a denotational model.","authors":["Aleš Bizjak","Hans Bugge Grathwohl","Ranald Clouston","Rasmus E. Møgelberg"],"meta":["April 2016","DOI:10.1007/978-3-662-49630-5_2","Conference: International Conference on Foundations of Software Science and Computation Structures"],"references":["290009807_A_Model_of_Guarded_Recursion_With_Clock_Synchronisation","289999699_A_Model_of_PCF_in_Guarded_Type_Theory","261554680_Impredicative_Concurrent_Abstract_Predicates","248801042_Towards_a_practical_programming_language_based_on_dependent_type_theory","221443231_Ultrametric_Semantics_of_Reactive_Programs","215446169_Applicative_Programming_with_Effects","213877728_A_very_modal_model_of_a_modern_major_general_type_system","2348235_Proving_the_Correctness_of_Reactive_Systems_Using_Sized_Types","2337811_Implementing_Mathematics_with_The_Nuprl_Proof_Development_System","312657322_Codifying_guarded_definitions_with_recursive_schemes","309738720_Cubical_Type_Theory_a_constructive_interpretation_of_the_univalence_axiom","289587213_Guarded_Dependent_Type_Theory_with_Coinductive_Types","270906513_Programming_and_Reasoning_with_Guarded_Recursion_for_Coinductive_Types","266659038_A_type_theory_for_productive_coprogramming_via_guarded_recursion","262318793_Productive_Coprogramming_with_Guarded_Recursion","261848956_Wellfounded_Recursion_with_Copatterns_A_Unified_Approach_to_Termination_and_Productivity","261165434_Intensional_Type_Theory_with_Guarded_Recursive_Types_qua_Fixed_Points_on_Universes","259437263_Idris_a_general-purpose_dependently_typed_programming_language_Design_and_implementation","243696859_Categorical_Logic_and_Type_Theory","230689514_First_Steps_in_Synthetic_Guarded_Domain_Theory_Step-Indexing_in_the_Topos_of_Trees","227308311_Codifying_guarded_definitions_with_recursive_schemes","3854911_A_Modality_for_Recursion","2622868_Infinite_Objects_in_Type_Theory"]}