{"id":"227230726_Relaxed_Visibility_Enhances_Partial_Order_Reduction","abstract":"State-space explosion is a central problem in the automatic verification (model-checking) of concurrent systems. Partial order reduction is a method that was developed to try to cope with the state-space explosion. Based on the observation that the order of execution of concurrent (independent) atomic actions is in many cases unimportant for the checked property, it allows reducing the state space by exploring fewer execution sequences. However, in order to guarantee that the reduced state space preserves the correctness of the checked property, the partial order reductions put constraints about commuting the order of atomic actions that may change the value of propositions appearing in the checked specification. In this paper we relax this constraint, allowing a weaker requirement to be imposed, and thus achieving a better reduction. We demonstrate the benefits of our improved reduction with experimental results.","authors":["Doron Peled","Antti Valmari","Ilkka Kokkarinen"],"meta":["November 2001Formal Methods in System Design 19(3):275-289","DOI:10.1023/A:1011202615884","SourceDBLP"],"references":["225510930_Combining_partial_order_reductions_with_on-the-fly_model-checking","225105880_Memory-Efficient_Algorithms_for_the_Verification_of_Temporal_Properties","221442685_An_Automata-Theoretic_Approach_to_Automatic_Program_Verification_Preliminary_Report","221403192_Combining_Partial_Order_Reductions_with_On-the-fly_Model-Checking","221402863_All_from_One_One_for_All_on_Model_Checking_Using_Representatives","220673762_Memory-Efficient_Algorithms_for_the_Verification_of_Temporal_Properties","2248596_Simple_On-the-Fly_Automatic_Verification_of_Linear_Temporal_Logic","243773289_Re_ning_dependencies_improves_partial-order_verication_methods","238761826_Design_and_validation_of_protocols","234777739_Temporal_logic_of_programs","223347126_Defining_Conditional_Independence_Using_Collapses","221403185_On-the-Fly_Verification_with_Stubborn_Sets","221403070_Refining_Dependencies_Improves_Partial-Order_Verification_Methods_Extended_Abstract","221402924_Using_Partial_Orders_to_Improve_Automatic_Verification_Methods","221329854_What_Good_is_Temporal_Logic","220566911_Verification_of_Distributed_Programs_Using_Representative_Interleaving_Sequences","220148499_An_Algorithmic_Approach_for_Checking_Closure_Properties_of_Temporal_Logic_Specifications_and_Omega-Regular_Languages","34488132_A_verification-oriented_theory_of_data_in_labelled_transition_systems","27783802_A_stubborn_attack_on_state_explosion","27782051_Stubborn_sets_for_reduced_state_space_generation","4354738_The_Temporal_Logic_of_Programs","3677466_Partial-order_methods_for_model_checking_from_linear_time_to_branching_time","3509098_A_Partial_Approach_to_Model_Checking"]}