{"id":"345331484_Comparison_of_object-oriented_and_robot_programming_activities_The_effects_of_programming_modality_on_student_achievement_abstraction_problem_solving_and_motivation","abstract":"Lay Description\n\nWhat is already known about this topic?\nProgramming activities that encourage how to think rather than what to think, have the potential to be effective instructional tools for cognitive processes.\nDespite the increasing research trend in computer science education, especially Computational Thinking (CT), there is a lack of studies investigating abstraction.\nMost of the studies on CT are based on a single cross‐sectional study shaped by relatively short‐term instructional activities and narrow‐scoped computational concepts.\n\nWhat this paper adds?\nThis study examined the effects of two programming modalities on tenth‐grade students' learning, intellectual skills, and motivation.\nTwo consecutive interventions were conducted in order to examine the consistency of the findings.\nRobot programming is as effective as object‐oriented programming in the acquisition of programming concepts.\nRobot programming enhanced students' descriptive abstraction and motivation more effectively.\nProgramming did not lead to any significant changes in students' problem‐solving approaches to daily‐life problems.\n\nImplications for practice and/or policy\nThe use of manipulative robotics can enrich learning outcomes in programming education.\nRobotic activities support the development of descriptive abstraction skills better than object‐oriented programming.\nRobotic technologies have great potential to increase student motivation regardless of the novelty effect.\nProblems used in programming activities should be chosen more relevant to the authentic world scenarios to connect computational approaches with daily life problems.\nEducational robots can be used as alternative tools to embody computational concepts in programming education.","authors":["Murat Cinar","Hakan Tüzün"],"meta":["April 2021Journal of Computer Assisted Learning 37(2):370-386","DOI:10.1111/jcal.12495"],"references":["339056927_Modeling_and_Measuring_High_School_Students'_Computational_Thinking_Practices_in_Science","334217881_The_scope_of_autonomy_when_teaching_computational_thinking_in_primary_school","334053772_The_effects_of_mental_rotation_on_computational_thinking","331054055_Analysing_computational_thinking_in_collaborative_programming_A_quantitative_ethnography_approach","342655176_An_exploration_of_combining_virtual_and_physical_robots_in_robotics_education","337642905_The_effect_of_coding_courses_on_the_cognitive_abilities_and_problem-solving_skills_of_preschool_children","335707188_Effects_of_robotics_programming_on_the_computational_thinking_and_creativity_of_elementary_school_students","332764395_Reconsidering_the_motivation_of_learners_in_educational_computer_game_contexts","331743804_Modeling_Different_Variables_in_Learning_Basic_Concepts_of_Programming_in_Flipped_Classrooms","331002547_CyberPLAYce-A_tangible_interactive_learning_tool_fostering_children's_computational_thinking_through_storytelling","319067508_Algorithmic_thinking_cooperativity_creativity_critical_thinking_and_problem_solving_exploring_the_relationship_between_computational_thinking_skills_and_academic_performance","320148486_Research_on_Blending_Learning_Flipped_Class_Model_in_Colleges_and_Universities_Based_on_Computational_Thinking_-_Database_Principles_for_Example","319394383_How_to_Solve_it","318600661_Changing_a_Generation's_Way_of_Thinking_Teaching_Computational_Thinking_Through_Programming","318286855_Active_Learning_Environments_with_Robotic_Tangibles_Children's_Physical_and_Virtual_Spatial_Programming_Experiences"]}