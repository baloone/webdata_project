{"id":"323941478_Exploring_Graph_Analytics_with_the_PCJ_Toolbox","abstract":"Graph analysis is an intrinsic tool embedded in the big data domain. The demand in processing of bigger and bigger graphs requires highly efficient and parallel applications. In this work we explore the possibility of employing the new PCJ library for distributed calculations in Java. We apply the toolbox to sparse matrix matrix multiplications and the k-means clustering problem. We benchmark the strong scaling performance against an equivalent C++/MPI implementation. Our benchmarks found comparable good scaling results for algorithms using mainly local point-to-point communications, and exposed the potential for logarithmic collective operations directly available in the PCJ library. Further more, we also experienced an improvement of development time to solution, as a result of the high level abstractions provided by Java and PCJ.","authors":["Roxana Istrate","Panagiotis Kl. Barkoutsos","Michele Dolfi","Peter Staar"],"meta":["March 2018","DOI:10.1007/978-3-319-78054-2_29","In book: Parallel Processing and Applied Mathematics (pp.308-317)","Project: Graph analytics and knowledge engineering"],"references":["303551320_Stochastic_Matrix-Function_Estimators_Scalable_Big-Data_Kernels_with_High_Performance","321614478_Recent_Advances_in_Parallel_Virtual_Machine_and_Message_Passing_Interface_16th_European_PVMMPI_Users'_Group_Meeting_Espoo_Finland_September_7-10_2009_Proceedings","319054048_Massively_Parallel_Sequence_Alignment_with_BLAST_Through_Work_Distribution_Implemented_Using_PCJ_Library","315467866_Level-Synchronous_BFS_Algorithm_Implemented_in_Java_Using_PCJ_Library","300392171_The_Performance_Evaluation_of_the_Java_Implementation_of_Graph500","264120922_PCJ_-_Java_library_for_high_performance_computing_in_PGAS_model","220682848_Least_Squares_Quantization_in_PCM's","220116521_Network_Properties_Revealed_Through_Matrix_Functions","7669947_Subgraph_Centrality_in_Complex_Networks","2990466_Direct_Solutions_of_Sparse_Network_Equations_by_Optimally_Ordered_Triangular_Factorization"]}