{"id":"317427675_Fully-Reflective_VMs_for_Ruling_Software_Adaptation","abstract":"It has become common for software systems to require or benefit from dynamic adaptation, i.e., to modify their behavior while they are running. Among the existing approaches to this problem, language-level solutions are appealing for scenarios in which fine-grained adaptation is needed, i.e., when the granularity of the modifications is that of individual objects, or for small applications where an architectural solution based on complex middleware is overkill. However, there is no consensus on which of the existing language-level approaches to adopt. A recent survey on self-adaptive systems asks [9]: Is it possible to adopt a single paradigm providing all required abstractions to implement adaptive systems?","authors":["Guido Chari","Diego Garbervetsky","Stefan Marr"],"meta":["May 2017","DOI:10.1109/ICSE-C.2017.144","Conference: Proceedings of the 39th International Conference on Software Engineering CompanionAt: Buenos Aires, Argentina","Project: Reflective Execution Environments"],"references":["309371360_Building_Efficient_and_Highly_Run-time_Adaptable_Virtual_Machines","281298896_Towards_Fully_Reflective_Environments","262324669_An_Analysis_of_Language-Level_Support_for_Self-Adaptive_Software","225455657_Change-Enabled_Software_System","2805979_Aspect-Oriented_Programming","271143323_Context-oriented_Programming","245493962_The_Art_of_the_Metaobject_Protocol","222422201_Unanticipated_Partial_Behavioral_Reflection_Adapting_Applications_at_Runtime","221496308_Supporting_Unanticipated_Dynamic_Adaptation_of_Application_Behaviour","220997923_Reflection_and_semantics_in_LISP"]}