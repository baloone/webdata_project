{"id":"352532344_Evaluating_the_robustness_of_source_code_plagiarism_detection_tools_to_pervasive_plagiarism-hiding_modifications","abstract":"Source code plagiarism is a common occurrence in undergraduate computer science education. In order to identify such cases, many source code plagiarism detection tools have been proposed. A source code plagiarism detection tool evaluates pairs of assignment submissions to detect indications of plagiarism. However, a plagiarising student will commonly apply plagiarism-hiding modifications to source code in an attempt to evade detection. Subsequently, prior work has implied that currently available source code plagiarism detection tools are not robust to the application of pervasive plagiarism-hiding modifications. In this article, 11 source code plagiarism detection tools are evaluated for robustness against plagiarism-hiding modifications. The tools are evaluated with data sets of simulated undergraduate plagiarism, constructed with source code modifications representative of undergraduate students. The results of the performed evaluations indicate that currently available source code plagiarism detection tools are not robust against modifications which apply fine-grained transformations to the source code structure. Of the evaluated tools, JPlag and Plaggie demonstrates the greatest robustness to different types of plagiarism-hiding modifications. However, the results also indicate that graph-based tools, specifically those that compare programs as program dependence graphs, show potentially greater robustness to pervasive plagiarism-hiding modifications.","authors":["Hayden Cheers","Yuqing Lin","Shamus P Smith"],"meta":["September 2021Empirical Software Engineering 26(5)","DOI:10.1007/s10664-021-09990-4"],"references":["338882398_Open-source_tools_and_benchmarks_for_code-clone_detection_past_present_and_future_trends","346695369_Sim_a_utility_for_detecting_similarity_in_computer_programs","340058482_SPPlagiarise_A_Tool_for_Generating_Simulated_Semantics-Preserving_Plagiarism_of_Java_Source_Code","338785764_Detecting_Pervasive_Source_Code_Plagiarism_through_Dynamic_Program_Behaviours","337530439_Algorithm_to_Determine_Extended_Edit_Distance_between_Program_Codes","333335264_Source-code_Similarity_Detection_and_Detection_Tools_Used_in_Academia_A_Systematic_Review","330156188_A_Comparison_of_Three_Popular_Source_code_Similarity_Tools_for_Detecting_Student_Plagiarism","328972427_Sherlock_N-overlap_Invasive_Normalization_and_Overlap_Coefficient_for_the_Similarity_Analysis_Between_Source_Code","326239725_Enhancing_Levenshtein's_Edit_Distance_Algorithm_for_Evaluating_Document_Similarity","325990154_COAT_Code_Obfuscation_Tool_to_Evaluate_the_Performance_of_Code_Plagiarism_Detection_Tools","320634007_A_comparison_of_code_similarity_analysers","309708569_Detecting_Source_Code_Plagiarism_on_Introductory_Programming_Course_Assignments_Using_a_Bytecode_Approach","316949291_Investigating_Student_Plagiarism_Patterns_and_Correlations_to_Grades","313061684_Het_detecteren_van_kopieen_bij_informatica-practica","312545420_Semantics-Based_Obfuscation-Resilient_Binary_Code_Similarity_Comparison_with_Applications_to_Software_and_Algorithm_Plagiarism_Detection"]}