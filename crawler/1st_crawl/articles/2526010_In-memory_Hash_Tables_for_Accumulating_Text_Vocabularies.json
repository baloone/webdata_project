{"id":"2526010_In-memory_Hash_Tables_for_Accumulating_Text_Vocabularies","abstract":"this paper we experimentally evaluate the performance of several data structures for building vocabularies, using a range of data collections and machines. Given the well-known properties of text and some initial experimentation, we chose to focus on the most promising candidates, splay trees and chained hash tables, also reporting results with binary trees. Of these, our experiments show that hash tables are by a considerable margin the most e#cient. We propose and measure a refinement to hash tables, the use of move-to-front lists. This refinement is remarkably e#ective: as we show, using a small table in which there are large numbers of strings in each chain has only limited impact on performance. Moving frequentlyaccessed words to the front of the list has the surprising property that the vast majority of accesses are to the first or second node. For example, our experiments show that in a typical case a table with an average of around 80 strings per slot is only 10%--40% slower than a table with around one string per slot---while a table without move-to-front is perhaps 40% slower again---and is still over three times faster than using a tree. We show, moreover, that a move-to-front hash table of fixed size is more e#cient in space and time than a hash table that is dynamically doubled in size to maintain a constant load average","authors":["Justin Zobel","Steffen Heinz","Hugh Williams"],"meta":["July 2002Information Processing Letters 80(6)","DOI:10.1016/S0020-0190(01)00239-3"],"references":["313496112_Overview_of_the_sixth_text_retrieval_conference_Trec-6","247624245_Splay_trees_in_practice_for_large_text_collections","222140419_Source_models_for_natural_language_text","221310699_A_Study_of_Index_Structures_for_Main_Memory_Database_Management_Systems","221220052_Skip_Lists_A_Probabilistic_Alternative_to_Balanced_Trees","220816703_Overview_of_the_Second_Text_Retrieval_Conference_TREC-2","220780302_Fast_Algorithms_for_Sorting_and_Searching_Strings","220694315_Algorithms_in_C_Parts_1-4_Fundamentals_data_structures_sorting_searching_3rd_ed","220693102_Algorithms_in_C_-_parts_1_-_4_fundamentals_data_structures_sorting_searching_3_ed","220231172_Overview_of_the_second_Text_Retrieval_Conference_TREC-2","2526870_Performance_in_Practice_of_String_Hashing_Functions"]}