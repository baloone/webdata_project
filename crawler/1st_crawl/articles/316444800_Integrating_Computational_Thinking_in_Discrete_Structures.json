{"id":"316444800_Integrating_Computational_Thinking_in_Discrete_Structures","abstract":"Computational thinking (CT) is broadly defined as the thought processes involved in formulating problems and their solutions so that the solutions can be automated. In this twenty-first century, computation is fundamental, and often unavoidable, in most endeavors, thus computing educators have the responsibility to instill in future generations of scientists, mathematicians, and engineers key computational thinking skills. There is a compelling case to be made for the infusion of CT skills into the K-16 education of everyone, given the pervasiveness of computers in all aspects of our lives. This poses the following critical educational challenge: how and when should students learn CT and how and when should it be taught? While discussions, deliberations, and debates will likely continue, the tightly knitted relationship between computational thinking and mathematical thinking suggests that one avenue to acquire CT skills is to integrate CT in the K-16 mathematics curriculum. This chapter describes a study that uses a problem-driven learning pedagogical strategy and the APOS theoretical framework to integrate computational thinking in CSCE 2100, a sophomore level discrete structures course which is a required course for all Information Technology majors. Results demonstrate that integrating computational thinking in a discrete structures course can effectively and significantly influence studentsâ€™ understanding of a range of CT concepts.","authors":["Gerard Rambally"],"meta":["April 2017","DOI:10.1007/978-3-319-52691-1_7","In book: Emerging Research, Practice, and Policy on Computational Thinking (pp.99-119)"],"references":["274309848_Computational_Thinking","259669422_The_Roles_of_Mathematics_in_Computer_Science","247924673_Bringing_computational_thinking_to_K-12_what_is_Involved_and_what_is_the_role_of_the_computer_science_education_community","226714117_A_Comparison_of_Programming_Languages_and_Algebraic_Notation_as_Expressive_Languages_for_Physics","221538265_Thinking_about_Computational_Thinking","220613352_Striving_for_mathematical_thinking","220419750_Mathematical_reasoning_in_software_engineering_education","3247150_Applying_formal_specification_in_industry","2784058_A_Framework_for_Research_and_Curriculum_Development_in_Undergraduate_Mathematics_Education","269781758_Genetic_Epistemology","266685988_Algorithmic_Thinking_and_Mathematical_Thinking","262211511_Learning_relational_algebra_by_snapping_blocks","257670986_Convergent_cognition","254008543_A_plan_for_immediate_immersion_of_computational_thinking_into_the_high_school_math_classroom_through_a_partnership_with_the_Alabama_math_science_and_technology_initiative","248289834_Genetic_Epistemology","247442902_Introduction_To_Algorithms","243119652_Generation_of_permutations_by_adjacent_transposition","239280722_Computing_curricula_2001_computer_science_final_report","228728347_Two_gestalts_for_mathematics_logical_vs_computational","226917404_Using_half-baked_microworlds_to_challenge_teacher_educators'_knowing","226411349_Reflective_Abstraction_in_Advanced_Mathematical_Thinking","221537095_Empirical_results_of_a_software_engineering_curriculum_incorporating_formal_methods","220422590_Algorithm_115_Perm"]}