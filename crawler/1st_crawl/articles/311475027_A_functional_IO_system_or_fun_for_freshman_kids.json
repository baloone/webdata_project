{"id":"311475027_A_functional_IO_system_or_fun_for_freshman_kids","abstract":"Functional programming languages ought to play a central role in mathematics education for middle schools (age range: 10-14). After all, functional programming is a form of algebra and programming is a creative activity about problem solving. Introducing it into mathematics courses would make pre-algebra course come alive. If input and output were invisible, students could implement fun simulations, animations, and even interactive and distributed games all while using nothing more than plain mathematics. We have implemented this vision with a simple framework for purely functional I/O. Using this framework, students design, implement, and test plain mathematical functions over numbers, booleans, string, and images. Then the framework wires them up to devices and performs all the translation from external information to internal data (and vice versa)--just like every other operating system. Once middle school students are hooked on this form of programming, our curriculum provides a smooth path for them from pre-algebra to freshman courses in college on object-oriented design and theorem proving.","authors":["Matthias Felleisen","Robert Bruce Findler","Matthew Flatt","Shriram Krishnamurthi"],"meta":["August 2009ACM SIGPLAN Notices 44(9):47","DOI:10.1145/1631687.1596561"],"references":["240953681_The_TeachScheme_Project_Computing_and_Programming_for_Every_Student","228647767_Teaching_functional_programming_with_soccer-fun","228525235_DoubleCheck_your_theorems","228352142_Automatic_verification_for_interactive_graphical_programs","221320933_Event-driven_programming_facilitates_learning_standard_programming_concepts","220676856_The_ins_and_outs_of_Clean_IO","220676568_The_risks_and_benefits_of_teaching_purely_functional_programming_in_first_year","2363546_DrScheme_A_Programming_Environment_for_Scheme","311468976_Event-driven_programming_is_simple_enough_for_CS1","278664940_Units","270606588_Through_the_looking_glass","269199773_QuickCheck","232019635_The_Structure_and_Interpretation_of_the_Computer_Science_Curriculum","221323412_Scheme_with_Classes_Mixins_and_Traits","221278500_Crossing_State_Lines_Adapting_Object-Oriented_Frameworks_to_Functional_Reactive_Languages","2516464_Functional_Reactive_Animation"]}