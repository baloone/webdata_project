{"id":"319101443_Combinatorial_Optimization_by_Decomposition_on_Hybrid_CPU--non-CPU_Solver_Architectures","abstract":"The advent of special-purpose hardware such as FPGA- or ASIC-based annealers and quantum processors has shown potential in solving certain families of complex combinatorial optimization problems more efficiently than conventional CPUs. We show that to address an industrial optimization problem, a hybrid architecture of CPUs and non-CPU devices is inevitable. In this paper, we propose problem decomposition as an effective method for designing a hybrid CPU--non-CPU optimization problem solver. We introduce the required algorithmic elements for making problem decomposition a viable approach in meeting real-world constraints such as communication time and the potential higher cost of using non-CPU hardware. We then turn to the well-known maximum clique problem, and propose a new decomposition method for this problem. Our method enables us to solve the maximum clique problem on very large graphs using non-CPU hardware that is considerably smaller in size than the graph. As an example, we demonstrate that the maximum clique problem on the com-Amazon graph, with 334,863 vertices and 925,872 edges, can be solved using a single problem embedding on fully connected hardware with at least 21 nodes, such as the D-Wave 2000Q. We also show that our proposed problem decomposition approach can improve the runtime of two of the best-known classical algorithms for large, sparse graphs, namely PMC and BBMCSP, by orders of magnitude. In the light of our study, we believe that even new non-CPU hardware that is small in size could become competitive with CPUs if it could be either mass produced and highly parallelized, or able to provide high-quality solutions to specific problems significantly faster than CPUs.","authors":["Ali Narimani","Seyed Saeed Changiz Rezaei","Arman Zaribafiyan"],"meta":["August 2017"],"references":["304128682_Two_efficient_local_search_algorithms_for_maximum_weight_clique_problem","301835433_Prime_factorization_using_quantum_annealing_and_computational_algebraic_geometry","324336521_Scheduling_Computer_and_Manufacturing_Processes","321515062_A_Guide_to_Graph_Colouring","321137237_The_Network_Data_Repository_with_Interactive_Graph_Analytics_and_Visualization","317394149_Finding_Maximum_Cliques_on_a_Quantum_Annealer","315485989_Solving_the_Optimal_Trading_Trajectory_Problem_Using_a_Quantum_Annealer","312546642_UPS_Optimizes_Delivery_Routes_2016_Franz_Edelman_Award_Winner","311921312_Statistical_analysis_of_financial_networks","301898458_A_Novel_Graph-based_Approach_for_Determining_Molecular_Similarity"]}