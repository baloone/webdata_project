{"id":"260393511_Better_bitmap_performance_with_Roaring_bitmaps","abstract":"Bitmap indexes are commonly used in databases and search engines. By\nexploiting bit-level parallelism, they can significantly accelerate queries.\nHowever, they can use much memory. Thus we might prefer compressed bitmap\nindexes. Following Oracle's lead, bitmaps are often compressed using run-length\nencoding (RLE). In this work, we introduce a new form of compressed bitmaps\ncalled Roaring, which uses packed arrays for compression instead of RLE. We\ncompare it to two high-performance RLE-based bitmap encoding techniques: WAH\n(Word Aligned Hybrid compression scheme) and Concise (Compressed 'n' Composable\nInteger Set). On synthetic and real data, we find that Roaring bitmaps (1)\noften compress significantly better (e.g., 2 times) and (2) are faster than the\ncompressed alternatives (up to 900 times faster for intersections).","authors":["Samy Chambi","Daniel Lemire","Owen Kaser","Robert Godin"],"meta":["February 2014Software Practice and Experience 46(5)","DOI:10.1002/spe.2325","SourcearXiv","Project: CS Research at UNB Saint John"],"references":["266656620_Druid_A_real-time_analytical_data_store","263619677_A_tunable_compression_framework_for_bitmap_indices","259893466_SIMD_Compression_and_the_Intersection_of_Sorted_Integers","276465264_Faster_set_intersection_with_SIMD_instructions_by_reducing_branch_mispredictions","270699712_Reordering_rows_for_better_compression","266660065_Vectorized_Bloom_filters_for_advanced_SIMD_processors","260251522_Compressed_bitmap_indexes_Beyond_unions_and_intersections","239065155_Raghu_Ramakrishnan_Bottom-Up_Computation_of_Sparse_and_Iceberg_CUBEs","234798879_Bottom-up_computation_of_sparse_and_Iceberg_CUBE","234790155_Spark_Cluster_Computing_with_Working_Sets","232252646_Decoding_billions_of_integers_per_second_through_vectorization","229011749_Reordering_Rows_for_Better_Compression_Beyond_the_Lexicographic_Order","225230341_Variable_Length_Compression_for_Bitmap_Indices","222540494_Attribute_Value_Reordering_for_Efficient_Hybrid_OLAP","222536047_Concise_Compressed_'n'_Composable_Integer_Set"]}