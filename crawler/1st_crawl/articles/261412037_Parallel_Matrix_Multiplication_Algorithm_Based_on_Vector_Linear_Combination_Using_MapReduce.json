{"id":"261412037_Parallel_Matrix_Multiplication_Algorithm_Based_on_Vector_Linear_Combination_Using_MapReduce","abstract":"Matrix multiplication is used in a variety of applications. It requires a lot of computation time especially for large-scale matrices. Parallel processing is a good choice for matrix multiplication operation. To overcome the efficiencies of existing algorithms for parallel matrix multiplication, a matrix multiplication processing scheme based on vector linear combination (VLC) was presented. The VLC scheme splits the matrix multiplication procedure into two steps. The first step obtains the weighted vectors by scalar multiplication. The second step gets the final result through a linear combination of the weighted vectors with identical row numbers. We present parallel matrix multiplication implementations using MapReduce (MR) based on VLC scheme and explain in detail the MR job. The map method receives the matrix input and generates intermediate (key, value) pairs according to the VLC scheme requirement. The reduce method conducts the scalar multiplication and vectors summation. In the end, the reduce method outputs the result in the way of row vector. Then performance theoretical analysis and experiment result comparing with other algorithms are proposed. Algorithm presented in this paper needs less computation time than other algorithms. Finally, we conclude the paper and propose future works.","authors":["Jian-Hua Zheng","Liang-Jie Zhang","Rong Zhu","Ke Ning"],"meta":["June 2013","DOI:10.1109/SERVICES.2013.67","Conference: Services (SERVICES), 2013 IEEE Ninth World Congress on"],"references":["221459076_A_MapReduce-Based_Maximum-Flow_Algorithm_for_Large_Small-World_Network_Graphs","220717676_Twister_A_Runtime_for_Iterative_Mapreduce","51910108_Hadoop_Performance_Models","312775005_MapReduce_Simplified_data_processing_on_large_clusters","280113442_Mining_of_Massive_Datasets","265373089_Matrix_Algorithms_on_a_Hypercube_I_Matrix_Multiplication","239761429_Matrix_chain_multiplication_via_multi-way_join_algorithms_in_MapReduce","235099140_A_cellular_computer_to_implement_the_kalman_filter_algorithm","227150482_Gaussian_elimination_is_not_optimal","221396876_An_Efficient_Hierarchical_Clustering_Method_for_Large_Datasets_with_Map-Reduce","221276487_HAMA_An_Efficient_Matrix_Computation_with_the_MapReduce_Framework","221235885_Generalized_Cannon's_Algorithm_for_Parallel_Matrix_Multiplication","220851866_MapReduce_Simplified_Data_Processing_on_Large_Clusters","220765513_Large-Scale_Matrix_Factorization_Using_MapReduce","220764936_DisCo_Distributed_Co-clustering_with_Map-Reduce_A_Case_Study_towards_Petabyte-Scale_End-to-End_Mining","220617041_Parallel_Matrix_and_Graph_Algorithms","220538314_PLANET_Massively_parallel_learning_of_tree_ensembles_with_MapReduce","220422846_MapReduce_A_Flexible_Data_Processing_Tool","3685059_A_Fast_Scalable_Universal_Matrix_Multiplication_Algorithm_on_Distributed-Memory_Concurrent_Computers","2341975_PUMMA_Parallel_Universal_Matrix_Multiplication_Algorithms_on_Distributed_Memory_Concurrent_Computers"]}