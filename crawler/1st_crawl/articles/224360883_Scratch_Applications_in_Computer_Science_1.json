{"id":"224360883_Scratch_Applications_in_Computer_Science_1","abstract":"Programming is a complex intellectual activity. We observed through the years that it is difficult for some students to understand the logic of a program and to familiarize themselves with the control structures. In order to help smooth this initial relationship with programming, we tried Scratch (a programming language designed for young people, developed by MITpsilas Media Lab). We analyze the use of Scratch in two Computer Science 1 courses: one in university degree and other in vocational studies. We use this tool in the very first weeks of those courses with the purpose of improving studentspsila programming experiences and motivation, and also to detect its influence, if any, in scores and dropout rates in comparison with normal courses. We developed detailed lab guides, exercises, tests and questions forms. We contrast the results with normal courses and found that students who used Scratch expressed higher motivation but there was no statistically evidence of differences neither in dropout rates nor obtained scores. In this paper we present the detailed courses, the experimentation and the results. We offer some conclusions and reflections over the particular value of including this kind of tool. We include suggestions with the intention of improving Scratch.","authors":["In√©s Friss de Kereki"],"meta":["November 2008Proceedings - Frontiers in Education Conference","DOI:10.1109/FIE.2008.4720267","SourceIEEE Xplore","Conference: Frontiers in Education Conference, 2008. FIE 2008. 38th Annual"],"references":["228374791_Teaching_Object_Oriented_Modelling_with_CRC_Cards_and_Roleplaying_Games","224757891_A_simulation_tool_to_help_learning_of_object_oriented_programming_basics","221537443_RAPTOR_A_visual_programming_environment_for_teaching_algorithmic_problem_solving","221537110_Test-Driven_Learning_Intrinsic_Integration_of_Testing_into_the_CSSE_Curriculum","220707242_The_use_of_MUPPETS_in_an_introductory_java_programming_course","220590680_Teaching_Introductory_Programming_to_IS_Students_Java_Problems_and_Pitfalls","38413358_Scratch_for_Budding_Computer_Scientists","4130786_New_challenges_in_teaching_introductory_programming_courses_a_case_study","2551403_Teaching_Objects-first_In_Introductory_Computer_Science","314808146_Role_playing_in_an_object-oriented_world","311464321_Student_performance_in_CS1_with_distributed_pair_programming","292184312_IRONCODE","271452755_Test-driven_learning","262165591_Games_as_a_flavor_of_CS1","246528910_Introduction_to_OO_Jeroo_a_tool_for_introducing_object-oriented_programming","234830860_Tools_and_techniques_for_test-driven_learning_in_CS1","228638607_Assessing_game-themed_programming_assignments_for_CS12_courses","224631094_Work_in_progress_-_Effect_of_instructional_design_and_pair_programming_on_student_performance_in_an_introductory_programming_course","221537870_Role_Playing_in_an_Object-Oriented_World","221537633_IRONCODE_think-twice_code-once_programming","221537161_Jeroo_a_tool_for_introducing_object-oriented_programming","220807336_Student_performance_in_CS1_with_distributed_pair_programming","220612681_Controversy_on_how_to_teach_CS_1_a_discussion_on_the_SIGCSE-members_mailing_list","200085837_Learning_and_Teaching_Programming_A_Review_and_Discussion"]}