{"id":"260317569_A_Formal_Framework_for_the_Formalization_of_Informal_Requirements","abstract":"Systems’ requirements are usually written in a natural language since it generally means a greater understanding among the various stakeholders. However, using an informal language potentially gives rise to interpretation problems, which are to be resolved prior to using (automated) verification techniques. This article tackles an important issue pertaining to requirement engineering: how to guide and help requirements’ formalization? In order to support the formalization process, we propose a methodology based on a formal structure, which is the corner stone of the refinement process. The operating mode of the refinement process is highly iterative: the aforementioned structure is constructed incrementally until its validity is formally obtained. Although this process is formally backed up, it is a fundamentally subjective one, which means that interpretation errors can still occur. In case of errors, it is essential to be able to backtrack refinements until an interpretation error is found. This is why we require that each refinement be associated with a justification which may subsequently be analyzed in case an error occurred during the verification phase. This formalization process was designed to be used alongside an (unspecific) engineering process, in charge of the implementation. Once the formalization is complete, it is checked against the implementation using testing techniques, or directly against an implementation model via model-checking.","authors":["Florent Peres","Jing Yang","Mohamed Ghazel"],"meta":["August 2012International Journal of Soft Computing and Software Engineering [JSCSE] 2(8)","DOI:10.7321/jscse.v2.n8.2"],"references":["281508765_Scenario-based_requirements_analysis","262250075_Sometimes_and_not_never_revisited_on_branching_versus_linear_time_temporal_logic","259874862_A_Prediction_Model_for_System_Testing_Defects_using_Regression_Analysis","232657934_Models_Derived_from_Automatically_Analyzed_Textual_User_Requirements","226432934_CM-Builder_A_natural_language-based_CASE_tool_for_object-oriented_analysis","220428279_Clear_justification_of_modeling_decisions_for_goal-oriented_requirements_engineering","220428235_Behavioural_Views_for_Software_Requirements_Engineering","220428216_A_goal-driven_and_agent-based_requirements_engineering_framework","220428054_Feature-driven_requirement_dependency_analysis_and_high-level_software_design","220059337_Reconciling_software_requirements_and_architectures_with_intermediate_models","3913880_Model_checking_early_requirements_specifications_in_Tropos","3625067_Goal-based_Requirements_Analysis","3187527_State-based_model_checking_of_event-driven_system_requirements","311464864_State-based_model_checking_of_event-driven_system_requirements","263699196_CBM-Of-TRaCE_An_Ontology-Driven_Framework_for_the_Improvement_of_Business_Service_Traceability_Consistency_Management_and_Reusability","257455520_Rationale-Based_Use_Case_Specification","242700803_Executable_Temporal_Logic_for_Interactive_Systems","226912694_On_the_use_of_a_formal_requirements_engineering_language_The_Generalized_Railroad_Crossing_Problem","226132570_Formal_analysis_of_the_Shlaer-Mellor_method_Towards_a_toolkit_of_formal_and_informal_requirements_specification_techniques","225929438_A_requirements_engineering_environment_within_a_tightly_integrated_SDE","225610899_Lightweight_models_for_interpreting_informal_specifications","225497509_A_Use_Case_Driven_Requirements_Engineering_Process","225431182_Incremental_requirements_specification_withLotos","222460887_Specification_styles_in_distributed_systems_design_and_verification","222394097_Deriving_static_and_dynamic_concepts_from_software_requirements_using_sophisticated_tagging","221653069_The_Declarative_Past_and_Imperative_Future_Executable_Temporal_Logic_for_Interactive_Systems","221610691_Assisting_Specification_and_Consistency-Check_of_Temporal_Requirements_for_Critical_Systems","221555875_CUTA4UML_-_Bridging_the_gap_between_informal_and_formal_requirements_for_dynamic_system_aspects","220796314_Semi-automatic_generation_of_UML_models_from_natural_language_requirements","220695256_The_B-book_-_assigning_programs_to_meanings","220428249_Expressing_Requirements_on_a_Parallel_System_Formally","220428182_Formal_Analysis_of_Memory_Requirements","220428108_Requirement_progression_in_problem_frames_Deriving_specifications_from_requirements","220428056_Scenario_Analysis_in_an_Automated_Tool_for_Requirements_Engineering","220130828_Goal-Directed_Requirements_Acquisition","4269499_Deriving_Formal_Specifications_from_Informal_Requirements","3895410_Conceptual_modeling_through_linguistic_analysis_using_LIDA","3854863_Lightweight_Validation_of_Natural_Language_Requirements_a_case_study","3846344_Patterns_in_property_specifications_for_finite-state_verification","3558263_Using_goals_rules_and_methods_to_support_reasoning_in_business_process_reengineering","3557824_Bridging_the_requirements_gap_policies_goals_and_domains","3187394_Informal_and_Formal_Requirements_Specification_Languages_Bridging_the_Gap","2695791_Using_Goals_Rules_and_Methods_to_Support_Reasoning_in_Business_Process_Reengineering","2604310_Formal_Refinement_Patterns_for_Goal-Driven_Requirements_Elaboration","2492379_Integrating_Semi-formal_and_Formal_Requirements","2467502_Scenario-Based_Techniques_for_Supporting_the_Elaboration_and_the_Validation_of_Formal_Requirements"]}