{"id":"325672476_Answer_set_programming_unleashed","abstract":"Answer Set Programming faces an increasing popularity for problem solving in various domains. While its modeling language allows us to express many complex problems in an easy way, its solving technology enables their effective resolution. In what follows, we detail some of the key factors of its success. Answer Set Programming [ASP; Brewka et al. Commun ACM 54(12):92–103, (2011)] is seeing a rapid proliferation in academia and industry due to its easy and flexible way to model and solve knowledge-intense combinatorial (optimization) problems. To this end, ASP offers a high-level modeling language paired with high-performance solving technology. As a result, ASP systems provide out-off-the-box, general-purpose search engines that allow for enumerating (optimal) solutions. They are represented as answer sets, each being a set of atoms representing a solution. The declarative approach of ASP allows a user to concentrate on a problem’s specification rather than the computational means to solve it. This makes ASP a prime candidate for rapid prototyping and an attractive tool for teaching key AI techniques since complex problems can be expressed in a succinct and elaboration tolerant way. This is eased by the tuning of ASP’s modeling language to knowledge representation and reasoning (KRR). The resulting impact is nicely reflected by a growing range of successful applications of ASP [Erdem et al. AI Mag 37(3):53–68, 2016; Falkner et al. Industrial applications of answer set programming. K++nstliche Intelligenz (2018)].","authors":["Torsten Schaub","Stefan Woltran"],"meta":["June 2018KI - Ku_nstliche Intelligenz 32(12)","DOI:10.1007/s13218-018-0550-z"],"references":["325801162_Industrial_Applications_of_Answer_Set_Programming","239646489_Predicate_Logic_as_a_Programming_Language","234831120_The_DLV_System_for_Knowledge_Representation_and_Reasoning","225035500_Foundations_of_Databases","221510765_Answer_Set_Programming_A_Primer","221278188_Negation_as_Failure","220642800_Logic_Programs_with_Stable_Model_Semantics_as_a_Constraint_Programming_Paradigm","220421804_Answer_Set_Programming_at_a_Glance","45931804_Catching_the_Ouroboros_On_Debugging_Non-ground_Answer-Set_Programs","2408055_The_Stable_Model_Semantics_For_Logic_Programming","338082173_ASP-Core-2_Input_Language_Format","325801961_Answer_Set_Programming_from_a_Logical_Point_of_View","325650653_Aggregates_in_Answer_Set_Programming","325252538_Satisfiability_Modulo_Theories","318497803_Applications_of_Answer_Set_Programming","318150600_A_Tutorial_on_Hybrid_Answer_Set_Solving_with_clingo","317754779_Modeling_and_Language_Extensions","317753525_Grounding_and_Solving_in_Answer_Set_Programming","313562744_Efficient_conflict_driven_learning_in_a_boolean_satisfiability_solver","300470144_Advances_in_WASP","292562364_Handbook_of_Satisfiability_Preface","286195972_Constraint_Processing","286115860_Knowledge_representation_reasoning_and_the_design_of_intelligent_agents_The_answer-set_programming_approach","284980826_Satisfiability_modulo_theories","281299154_asprin_Customizing_Answer_Set_Preferences_without_a_Headache","273001922_Theory_of_linear_and_integer_programming","268722626_Reasoning_and_Declarative_Problem_Solving","257514639_Equilibrium_logic","256660314_Conflict-driven_answer_set_solving_From_theory_to_practice","243778745_Die_formalen_Regeln_der_intuitionistischen_Logik","242520161_Mellish_programming_in_prolog","222573303_Extending_and_implementing_the_stable_model_semantics","222441371_Applications_of_Circumscription_to_Formalizing_Common_Sense_Knowledge","221443006_Minimalism_subsumes_Default_Logic_and_Circumscription_in_Stratified_Logic_Programming","221306686_ASPIDE_Integrated_Development_Environment_for_Answer_Set_Programming","220773958_Encodings_for_Equilibrium_Logic_and_Logic_Programs_with_Nested_Expressions","220688307_Logic_Programming_and_Databases","220613518_Why_are_there_so_many_loop_formulas","220547100_A_Logic_for_Default_Reasoning","220546257_ASSAT_computing_answer_sets_of_a_logic_program_by_SAT_solvers","220431995_Putnam_H_A_Computing_Procedure_for_Quantification_Theory_Journal_of_the_ACM_7_201-215","213887971_A_Machine_Program_for_Theorem_Proving","200541403_Programming_in_Prolog","31636844_Programming_in_Prolog_W_F_Clocksin_C_S_Mellish","3497034_Constraint_processing_incorporating_back_jumping_learning_and_cutset-decomposition","3044093_GRASP_A_Search_Algorithm_for_Propositional_Satisfiability","2513472_Elaboration_Tolerance"]}