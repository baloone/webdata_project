{"id":"262355986_Approximating_s-t_minimum_cuts_in_O_n_2_time","abstract":"We improve on random sampling techniques for approximately solving problems that involve cuts in graphs. We give a linear-time construction that transforms any graph on n vertices into an O(nlogn)-edge graph on the same vertices whose cuts have approximately the same value as the original graph’s. In this new graph, for example, we can run O ˜(mn)-time maximum flow algorithm of Goldberg and Tarjan to find an s-t minimum cut in O ˜(n 2 ) time. This corresponds to a (1+ε)-times minimum s-t cut in the original graph. In a similar way, we can approximate a sparsest cut in O ˜(n 2 ) time.","authors":["András A. Benczúr","David Ron Karger"],"meta":["July 1996","DOI:10.1145/237814.237827","Conference: Proceedings of the twenty-eighth annual ACM symposium on Theory of computing"],"references":["228057564_Minimum_Cuts_in_Near-Linear_Time","220780039_Using_Randomized_Sparsification_to_Approximate_Minimum_Cuts","220617196_Verification_and_Sensitivity_Analysis_of_Minimum_Spanning_Trees_in_Linear_Time","265425391_Maximal_Flow_Through_a_Network","262371797_A_matroid_approach_to_finding_edge_connectivity_and_packing_arborescences","228057862_Linear_Time_Algorithms_for_Finding_k-Edge_Connected_and_k-Node_Connected_Spanning_Subgraphs","228057845_Computing_Edge_Connectivity_in_Multigraphs_and_Capacitated_Graphs","221591888_Leighton-Rao_Might_Be_Practical_Faster_Approximation_Algorithms_for_Concurrent_Flow_with_Uniform_Capacities","220431600_A_New_Approach_to_the_Maximum-Flow_Problem"]}