{"id":"220817786_Six_Learning_Barriers_in_End-User_Programming_Systems","abstract":"As programming skills increase in demand and utility, the learnability of end-user programming systems is of utmost importance. However, research on learning barriers in programming systems has primarily focused on languages, overlooking potential barriers in the environment and accompanying libraries. To address this, a study of beginning programmers learning Visual Basic.NET was performed. This identified six types of barriers: design, selection, coordination, use, understanding, and information. These barriers inspire a new metaphor of computation, which provides a more learner-centric view of programming system design","authors":["Andrew Jensen Ko","Brad A. Myers","Htet Htet Aung"],"meta":["January 2004","DOI:10.1109/VLHCC.2004.47","SourceDBLP","Conference: 2004 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2004), 26-29 September 2004, Rome, Italy"],"references":["245973978_Drawings_on_napkins_video-game_animation_and_other_ways_to_program_computers","221518887_Designing_the_Whyline_A_debugging_interface_for_asking_questions_about_program_behavior","270819200_The_Design_of_Everyday_Things","243764238_Language_Semantics_Mental_Models_and_Analogy","242393297_Learning_to_Program_with_Alice","238674180_Analyzing_the_high-frequenzy_bugs_in_novice_programs","228058013_Studying_the_language_and_structure_in_non-programmers'_solutions_to_programming_problems","222518500_A_survey_of_external_representations_employed_in_object-oriented_programming_environments","221516200_A_Case_Study_to_Distill_Structural_Scaffolding_Guidelines_for_Scaffolded_Software_Environments","200086019_The_Design_of_Everyday_Things"]}