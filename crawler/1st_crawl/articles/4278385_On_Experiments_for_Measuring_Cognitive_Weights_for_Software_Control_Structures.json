{"id":"4278385_On_Experiments_for_Measuring_Cognitive_Weights_for_Software_Control_Structures","abstract":"Shao and Wang have proposed a cognitive complexity measure as a metric that can be used for estimating the comprehension effort for understanding software written in imperative programming languages. The key idea of their approach is to assign a cognitive weight to basic software control structures. The more difficult a control structure is to understand, the greater is its cognitive weight. In this paper, we discuss the experiments that have been used for calibrating the cognitive weights and show how they can be improved.","authors":["Volker Gruhn","Ralf Laue"],"meta":["September 2007","DOI:10.1109/COGINF.2007.4341880","SourceIEEE Xplore","Conference: Cognitive Informatics, 6th IEEE International Conference on"],"references":["266559175_On_Cognitive_Informatics","221537057_Loop_exits_and_structured_programming_reopening_the_debate","4248289_Adopting_the_Cognitive_Complexity_Measure_for_Business_Process_Models","3454763_A_new_measure_of_software_complexity_based_on_cognitive_weights","3188260_Preliminary_Guidelines_for_Empirical_Research_in_Software_Engineering","234791827_Third_time_charm_Stronger_prediction_of_programmer_performance_by_software_complexity_metrics","226974816_Using_Process_Algebra_to_Describe_Human_and_Software_Behaviors","220694532_Basics_of_Software_Engineering_Experimentation","4248300_Cognitive_Complexity_of_Software_and_its_Measurement","3697332_Towards_standard_for_experiments_in_program_comprehension"]}