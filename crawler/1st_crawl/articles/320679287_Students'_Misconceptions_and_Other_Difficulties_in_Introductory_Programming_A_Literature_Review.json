{"id":"320679287_Students'_Misconceptions_and_Other_Difficulties_in_Introductory_Programming_A_Literature_Review","abstract":"Efforts to improve computer science education are underway, and teachers of computer science are challenged in introductory programming courses to help learners develop their understanding of programming and computer science. Identifying and addressing students’ misconceptions is a key part of a computer science teacher's competence. However, relevant research on this topic is not as fully developed in the computer science education field as it is in mathematics and science education. In this article, we first review relevant literature on general definitions of misconceptions and studies about students’ misconceptions and other difficulties in introductory programming. Next, we investigate the factors that contribute to the difficulties. Finally, strategies and tools to address difficulties including misconceptions are discussed.\nBased on the review of literature, we found that students exhibit various misconceptions and other difficulties in syntactic knowledge, conceptual knowledge, and strategic knowledge. These difficulties experienced by students are related to many factors including unfamiliarity of syntax, natural language, math knowledge, inaccurate mental models, lack of strategies, programming environments, and teachers’ knowledge and instruction. However, many sources of students’ difficulties have connections with students’ prior knowledge. To better understand and address students’ misconceptions and other difficulties, various instructional approaches and tools have been developed. Nevertheless, the dissemination of these approaches and tools has been limited. Thus, first, we suggest enhancing the dissemination of existing tools and approaches and investigating their long-term effects. Second, we recommend that computing education research move beyond documenting misconceptions to address the development of students’ (mis)conceptions by integrating conceptual change theories. Third, we believe that developing and enhancing instructors’ pedagogical content knowledge (PCK), including their knowledge of students’ misconceptions and ability to apply effective instructional approaches and tools to address students’ difficulties, is vital to the success of teaching introductory programming.","authors":["Yizhou Qian","James D. Lehman"],"meta":["October 2017ACM Transactions on Computing Education 18(1):1-24","DOI:10.1145/3077618"],"references":["303939858_An_Effective_Approach_to_Enhancing_Compiler_Error_Messages","298806912_Correlates_of_Success_in_Introductory_Programming_A_Study_with_Middle_School_Students","312915607_My_program_is_correct_but_it_doesn't_run_A_preliminary_investigation_of_novice_programmers'_problems","311489140_Modernizing_Plan-Composition_Studies","309073754_Conceptual_change_in_learning_and_instruction_The_framework_theory_approach","304417737_Further_evidence_of_a_relationship_between_explaining_tracing_and_writing_skills_in_introductory_programming","302944837_Misconceptions_and_attitudes_that_infere_with_learning_to_program","291064198_A_bird's-eye_view_of_the_pieces_vs_coherence_controversy_from_the_pieces_side_of_the_fence","290798690_Data_mining_for_individualised_hints_in_elearning","287391362_Learner-Centered_Design_of_Computing_Education_Research_on_Computing_for_Everyone"]}