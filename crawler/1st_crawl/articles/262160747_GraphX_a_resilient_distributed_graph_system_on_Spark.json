{"id":"262160747_GraphX_a_resilient_distributed_graph_system_on_Spark","abstract":"From social networks to targeted advertising, big graphs capture the structure in data and are central to recent advances in machine learning and data mining. Unfortunately, directly applying existing data-parallel tools to graph computation tasks can be cumbersome and inefficient. The need for intuitive, scalable tools for graph computation has lead to the development of new graph-parallel systems (e.g., Pregel, PowerGraph) which are designed to efficiently execute graph algorithms. Unfortunately, these new graph-parallel systems do not address the challenges of graph construction and transformation which are often just as problematic as the subsequent computation. Furthermore, existing graph-parallel systems provide limited fault-tolerance and support for interactive data mining.\nWe introduce GraphX, which combines the advantages of both data-parallel and graph-parallel systems by efficiently expressing graph computation within the Spark data-parallel framework. We leverage new ideas in distributed graph representation to efficiently distribute graphs as tabular data-structures. Similarly, we leverage advances in data-flow systems to exploit in-memory computation and fault-tolerance. We provide powerful new operations to simplify graph construction and transformation. Using these primitives we implement the PowerGraph and Pregel abstractions in less than 20 lines of code. Finally, by exploiting the Scala foundation of Spark, we enable users to interactively load, transform, and compute on massive graphs.","authors":["Reynold Xin","Joseph E. Gonzalez","Michael J. Franklin","Ion Stoica"],"meta":["June 2013","DOI:10.1145/2484425.2484427","Conference: First International Workshop on Graph Data Management Experiences and Systems"],"references":["262233351_Resilient_distributed_datasets_A_fault-tolerant_abstraction_for_in-memory_cluster_computing","221257383_Pregel_A_system_for_large-scale_graph_processing","220457221_The_combinatorial_BLAS_Design_implementation_and_applications","220412099_On_Two-Dimensional_Sparse_Matrix_Partitioning_Models_Methods_and_a_Recipe","4245421_Multilevel_algorithms_for_partitioning_power-law_graphs","2209684_Community_Structure_in_Large_Networks_Natural_Cluster_Sizes_and_the_Absence_of_Large_Well-Defined_Clusters","1821778_Error_and_Attack_Tolerance_of_Complex_Networks","307631671_The_pagerank_citation_ranking_Bringing_order_to_the_web","277687776_Pregel","262392280_PowerGraph_Distributed_graph-parallel_computation_on_natural_graphs","254008546_Kineograph_Taking_the_pulse_of_a_fast-changing_and_connected_world","228980465_Finding_good_nearly_balanced_cuts_in_power_law_graphs","221996591_The_PageRank_Citation_Ranking_Bringing_Order_to_the_Web","221466254_SignalCollect_Graph_Algorithms_for_the_Semantic_Web"]}