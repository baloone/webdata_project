{"id":"291951202_A_Survey_on_Software_Fault_Localization","abstract":"Software fault localization, the act of identifying the locations of faults in a program, is widely recognized to be one of the most tedious, time consuming, and expensive - yet equally critical - activities in program debugging. Due to the increasing scale and complexity of software today, manually locating faults when failures occur is rapidly becoming infeasible, and consequently, there is a strong demand for techniques that can guide software developers to the locations of faults in a program with minimal human intervention. This demand in turn has fueled the proposal and development of a broad spectrum of fault localization techniques, each of which aims to streamline the fault localization process and make it more effective by attacking the problem in a unique way. In this article, we catalog and provide a comprehensive overview of such techniques and discuss key issues and concerns that are pertinent to software fault localization as a whole.","authors":["W. Eric Wong","Ruizhi Gao","Yihao Li","Rui Abreu"],"meta":["August 2016IEEE Transactions on Software Engineering 42(8):1-1","DOI:10.1109/TSE.2016.2521368"],"references":["316921928_Interactive_Fault_Localization_Leveraging_Simple_User_Feedbacks","316921877_Where_should_the_bugs_be_fixed_More_accurate_information_retrieval-based_bug_localization_based_on_bug_reports","322509132_Automated_Fault_Localization_for_Service-Oriented_Software_Systems","316921842_Interactive_fault_localization_leveraging_simple_user_feedback","316921797_Where_should_the_bugs_be_fixed-more_accurate_information_retrieval-based_bug_localization_based_on_bug_reports","316921592_Diversity_maximization_speedup_for_fault_localization","316091937_Why_Programs_Fail","314879591_Cause_clue_clauses_error_localization_using_maximum_satisfiability","313580789_Program_slicing","313505336_Modeling_programs_with_unstructured_control_flow_for_debugging"]}