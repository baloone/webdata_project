{"id":"316947518_Do_Enhanced_Compiler_Error_Messages_Help_Students_Results_Inconclusive","abstract":"One common frustration students face when first learning to program in a compiled language is the difficulty in interpreting the compiler error messages they receive. Attempts to improve error messages have produced differing results. Two recently published papers showed conflicting results, with one showing measurable change in student behavior, and the other showing no measurable change. We conducted an experiment comparable to these two over the course of several semesters in a CS1 course. This paper presents our results in the context of previous work in this area. We improved the clarity of the compiler error messages the students receive, so that they may more readily understand their mistakes and be able to make effective corrections. Our goal was to help students better understand their syntax mistakes and, as a reasonable measure of our success, we expected to document a decrease in the number of times students made consecutive submissions with the same compilation error. By doing this, we could demonstrate that this enhancement is effective. After collecting and thoroughly analyzing our own experimental data, we found that--despite anecdotal stories, student survey responses, and instructor opinions testifying to the tool's helpfulness--enhancing compiler error messages shows no measurable benefit to students. Our results validate one of the existing studies and contradict another. We discuss some of the reasons for these results and conclude with projections for future research.","authors":["Raymond Pettit","John Homer","Roger Gee"],"meta":["March 2017","DOI:10.1145/3017680.3017768","Conference: the 2017 ACM SIGCSE Technical Symposium"],"references":["303939858_An_Effective_Approach_to_Enhancing_Compiler_Error_Messages","266657038_Enhancing_syntax_error_messages_appears_ineffectual","234820368_The_Scratch_Programming_Language_and_Environment","234816978_Debugging_The_good_the_bad_and_the_quirky_-a_qualitative_analysis_of_novices'_strategies","228832322_Measuring_the_effectiveness_of_error_messages_designed_for_novice_programmers","266656765_Compiler_error_notifications_revisited_An_interaction-first_approach_for_helping_developers_more_effectively_comprehend_and_resolve_error_notifications","262321546_BlueFix_Using_Crowd-Sourced_Feedback_to_Support_Programming_Students_in_Error_Diagnosis_and_Repair","261960466_LearnCS_a_new_browser-based_C_programming_environment_for_CS1","247928082_A_detector_for_non-literal_Java_errors","234821062_HiC_a_C_compiler_for_CS1"]}