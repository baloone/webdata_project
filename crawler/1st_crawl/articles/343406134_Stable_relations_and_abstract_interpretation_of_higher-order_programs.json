{"id":"343406134_Stable_relations_and_abstract_interpretation_of_higher-order_programs","abstract":"We present a novel denotational semantics for the untyped call-by-value λ-calculus, where terms are interpreted as stable relations , i.e. as binary relations between substitutions and values, enjoying a monotonicity property. The denotation captures the input-output behaviour of higher-order programs, and is proved sound and complete with respect to the operational semantics. The definition also admits a presentation as a program logic. Following the principles of abstract interpretation, we use our denotational semantics as a collecting semantics to derive a modular relational analysis for higher-order programs. The analysis infers equalities between the arguments of a program and its result—a form of frame condition for functional programs.","authors":["Benoît Montagu","Thomas P. Jensen"],"meta":["August 2020Proceedings of the ACM on Programming Languages 4(ICFP):1-30","DOI:10.1145/3409001"],"references":["330153368_Inferring_frame_conditions_with_static_correlation_analysis","315853226_A_Relational_Shape_Abstract_Domain","277679423_CakeML","266660663_Refinement_Types_For_Haskell","265352570_Principles_of_Program_Analysis","321025154_Refinement_Reflection_Complete_Verification_with_SMT","317595476_Compositional_recurrence_analysis_revisited","303385220_Nominal_techniques","266859603_Why3_-_Where_Programs_Meet_Provers","266660662_A_Relational_Framework_for_Higher-Order_Shape_Analysis"]}