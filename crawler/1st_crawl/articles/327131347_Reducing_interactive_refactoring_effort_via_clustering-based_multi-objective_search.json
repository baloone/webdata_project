{"id":"327131347_Reducing_interactive_refactoring_effort_via_clustering-based_multi-objective_search","abstract":"Refactoring is nowadays widely adopted in the industry because bad design decisions can be very costly and extremely risky. On the one hand, automated refactoring does not always lead to the desired design. On the other hand, manual refactoring is error-prone, time-consuming and not practical for radical changes. Thus, recent research trends in the field focused on integrating developers feedback into automated refactoring recommendations because developers understand the problem domain intuitively and may have a clear target design in mind. However, this interactive process can be repetitive, expensive, and tedious since developers must evaluate recommended refactorings, and adapt them to the targeted design especially in large systems where the number of possible strategies can grow exponentially.\nIn this paper, we propose an interactive approach combining the use of multi-objective and unsupervised learning to reduce the developer's interaction effort when refactoring systems. We generate, first, using multi-objective search different possible refactoring strategies by finding a trade-off between several conflicting quality attributes. Then, an unsupervised learning algorithm clusters the different trade-off solutions, called the Pareto front, to guide the developers in selecting their region of interests and reduce the number of refactoring options to explore. The feedback from the developer, both at the cluster and solution levels, are used to automatically generate constraints to reduce the search space in the next iterations and focus on the region of developer preferences. We selected 14 active developers to manually evaluate the effectiveness our tool on 5 open source projects and one industrial system. The results show that the participants found their desired refactorings faster and more accurate than the current state of the art.","authors":["Vahid Alizadeh","Marouane Kessentini"],"meta":["September 2018","DOI:10.1145/3238147.3238217","Conference: the 33rd ACM/IEEE International Conference","Project: Learning-Based Interactive Code Refactoring"],"references":["316858084_Recommendation_system_for_software_refactoring_using_innovization_and_interactive_dynamic_optimization","265339653_A_Cooperative_Parallel_Search-Based_Software_Engineering_Approach_for_Code-Smells_Detection","262364433_Supervised_software_modularisation","310821619_Interactive_and_guided_architectural_refactoring_with_search-based_recommendation","304915785_Multi-Criteria_Code_Refactoring_Using_Search-Based_Software_Engineering_An_Industrial_Case_Study","303836466_A_dendrite_method_for_cluster_analysis","303099432_Improving_refactoring_speed_by_10X","271528890_Refactoring_Improving_the_Design_of_Existing_Code","262395024_Search-Based_Software_Engineering_Trends_Techniques_and_Applications","262360211_A_Formal_Model_for_Automated_Software_Modularity_and_Evolvability_Analysis"]}