{"id":"224960000_A_Fast_String_Searching_Algorithm","abstract":"An algorithm is presented that searches for the location, ″i,″ of the first occurrence of a character string, ″pat,″ in another string, ″string.″ During the search operation, the characters of pat are matched starting with the last character of pat. The information gained by starting the match at the end of the pattern often allows the algorithm to proceed in large jumps through the text being searched. Thus the algorithm has the unusual property that, in most cases, not all of the first i characters of string are inspected. The number of characters actually inspected (on the average) decreases as a function of the length of pat. For a random English pattern of length 5, the algorithm will typically inspect i/4 characters of string before finding a match at i. Furthermore, the algorithm has been implemented so that (on the average) fewer than i plus patlen machine instructions are executed. These conclusions are supported with empirical evidence and a theoretical analysis of the average behavior of the algorithm. The worst case behavior of the algorithm is linear in i plus patlen, assuming the availability of array space for tables linear in patlen plus the size of the alphabet.","authors":["Robert S. Boyer","Strother J Moore"],"meta":["October 1977Communications of the ACM 20:762-772","DOI:10.1145/359842.359859","Sourcedoi.acm.org"],"references":["220423622_Efficient_string_matching_An_aid_to_bibliographic_search","220618247_Fast_Pattern_Matching_in_Strings","35340312_Relative_frequency_of_English_speech_sounds"]}