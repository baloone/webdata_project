{"id":"313566690_SMEDL_Combining_Synchronous_and","abstract":"Two major approaches have emerged in runtime verification, based on synchronous and asynchronous monitoring. Each approach has its advantages and disadvantages and is applicable in different situations. In this paper, we explore a hybrid approach, where low-level properties are checked synchronously, while higher-level ones are checked asynchronously. We present a tool for constructing and deploying monitors based on an architecture specification. Monitor logic and patterns of communication between monitors are specified in a language SMEDL. The language and the tool are illustrated using a case study of a robotic simulator.","authors":["Teng Zhang","Peter Michael Gebhard","Oleg Sokolsky"],"meta":["September 2016"],"references":["340514944_Java-MaC_A_Run-time_Assurance_Approach_for_Java_Programs","311736705_Concurrency-Preserving_and_Sound_Monitoring_of_Multi-Threaded_Component-Based_Systems","308338891_A_Theory_of_Monitors","303482198_Monitoring_Multi-threaded_Component-Based_Systems","226953747_An_overview_of_the_MOP_runtime_verification_framework","226914907_DMaC_Distributed_Monitoring_and_Checking","300077706_Parametric_Runtime_Verification_of_C_Programs","290917297_RV-Monitor_Efficient_Parametric_Runtime_Verification_with_Simultaneous_Properties","267236687_Compensations_and_Runtime_Monitoring","222552874_A_Brief_Account_of_Runtime_Verification"]}