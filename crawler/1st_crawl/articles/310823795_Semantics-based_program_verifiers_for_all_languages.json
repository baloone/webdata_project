{"id":"310823795_Semantics-based_program_verifiers_for_all_languages","abstract":"We present a language-independent verification framework that can be instantiated with an operational semantics to automatically generate a program verifier. The framework treats both the operational semantics and the program correctness specifications as reachability rules between matching logic patterns, and uses the sound and relatively complete reachability logic proof system to prove the specifications using the semantics. We instantiate the framework with the semantics of one academic language, KernelC, as well as with three recent semantics of real-world languages, C, Java, and JavaScript, developed independently of our verification infrastructure. We evaluate our approach empirically and show that the generated program verifiers can check automatically the full functional correctness of challenging heap-manipulating programs implementing operations on list and tree data structures, like AVL trees. This is the first approach that can turn the operational semantics of real-world languages into correct-by-construction automatic verifiers.","authors":["Andrei StefÄƒnescu","Daejun Park","Shijiao Yuwen","Yilong Li"],"meta":["October 2016ACM SIGPLAN Notices","DOI:10.1145/2983990.2984027","Conference: the 2016 ACM SIGPLAN International Conference"],"references":["281612280_Defining_the_Undefinedness_of_C","234816297_Specification_and_Verification_The_Spec_Experience","234809269_Verification_of_Object-Oriented_Software_the_KeY_Approach","228763277_Deadlock-free_Channels_and_Locks_extended_version","225727410_Boogie_A_Modular_Reusable_Verifier_for_Object-Oriented_Programs","225142568_Z3_an_efficient_SMT_solver","221602770_Deadlock-Free_Channels_and_Locks","221551117_Automated_Verification_of_Shape_and_Size_Properties_Via_Separation_Logic","221413058_VeriFast_A_Powerful_Sound_Predictable_Fast_Verifier_for_C_and_Java","221321764_jStar_Towards_Practical_Verification_for_Java","221302273_VCC_A_Practical_System_for_Verifying_Concurrent_C","220997440_An_executable_formal_semantics_of_C_with_applications","220997026_Verifying_properties_of_well-founded_linked_lists","220977001_Matching_Logic_An_Alternative_to_HoareFloyd_Logic","220884469_Generalized_efficient_array_decision_procedures","220752424_Separation_logic_superposition_calculus_heap_theorem_prover","321601603_Verification_of_Object-Oriented_Software_The_KeY_Approach_Foreword_by_K_Rustan_M_Leino","314879834_Mostly-automated_verification_of_low-level_programs_in_computational_separation_logic","311464696_Separation_logic_superposition_calculus_heap_theorem_prover","302242582_Verified_Software_Toolchain","300298435_Semantics-based_generation_of_verification_conditions_by_program_specialization","289691041_Checking_reachability_using_matching_logic","283025196_K-Java_A_complete_semantics_of_Java","282486721_KJS_A_Complete_Formal_Semantics_of_JavaScript","279957000_Dynamic_Logic","266980891_From_Hoare_Logic_to_Matching_Logic","266859603_Why3_-_Where_Programs_Meet_Provers","266657554_Natural_Proofs_for_Data_Structure_Manipulation_in_C_using_Separation_Logic","265775796_All-Path_Reachability_Logic","262398478_Towards_a_Unified_Theory_of_Operational_and_Axiomatic_Semantics","262278124_Checking_Reachability_using_Matching_Logic","262171138_Natural_Proofs_for_Structure_Data_and_Separation","261958912_Prototyping_Symbolic_Execution_Engines_for_Interpreted_Languages","257634951_An_Overview_of_the_K_Semantic_Framework","249428557_Winskel_is_almost_Right_Towards_a_Mechanized_Semantics","248594981_Efficient_Incremental_E_-_matching_for_SMT_Solvers","228521542_Synthesizing_Software_Verifiers_from_Proof_Rules","225149162_Dafny_An_Automatic_Program_Verifier_for_Functional_Correctness","224001211_The_RAISE_Development_Method","222655443_Automated_verification_of_shape_size_and_bag_properties_via_user-defined_predicates_in_separation_logic","222477350_Chemical_abstract_machine","222201915_Weakest_Precondition_Reasoning_for_Java_Programs_with_JML_Annotations","221602669_Verified_Software_Toolchain_-_Invited_Talk","221558301_Local_Reasoning_about_Programs_that_Alter_Data_Structures","221267843_Verifying_the_Microsoft_Hyper-V_Hypervisor_with_VCC","220997389_A_Needed_Narrowing_Strategy","220997224_Recursive_Proofs_for_Inductive_Tree_Data-Structures","220806346_Efficient_E-Matching_for_SMT_Solvers","220752148_The_Pointer_Assertion_Logic_Engine","220695342_Semantics_Engineering_with_PLT_Redex","220431200_A_needed_narrowing_strategy","29637557_The_WhyKrakatoaCaduceus_Platform_for_Deductive_Program_Verification","2877760_Java_program_verification_via_a_JVM_deep_embedding_in_ACL2","2438748_The_Pointer_Assertion_Logic_Engine","2423155_Winskel_is_almost_Right_-_Towards_a_Mechanized_Semantics_Textbook"]}