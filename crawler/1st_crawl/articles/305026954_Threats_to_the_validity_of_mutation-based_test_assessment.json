{"id":"305026954_Threats_to_the_validity_of_mutation-based_test_assessment","abstract":"Much research on software testing and test techniques relies on experimental studies based on mutation testing. In this paper we reveal that such studies are vulnerable to a potential threat to validity, leading to possible Type I errors; incorrectly rejecting the Null Hypothesis. Our findings indicate that Type I errors occur, for arbitrary experiments that fail to take countermeasures, approximately 62% of the time. Clearly, a Type I error would potentially compromise any scientific conclusion. We show that the problem derives from such studiesâ€™ combined use of both subsuming and subsumed mutants. We collected articles published in the last two years at three leading software engineering conferences. Of those that use mutation-based test assessment, we found that 68% are vulnerable to this threat to validity.","authors":["Mike Papadakis","Christopher Henard","Mark Harman","Yue Jia"],"meta":["July 2016","DOI:10.1145/2931037.2931040","Conference: the 25th International Symposium"],"references":["303099365_Featured_model-based_mutation_analysis","282895362_Guidelines_for_Coverage-Based_Comparisons_of_Non-Adequate_Test_Suites","282378950_Sound_and_Quasi-Complete_Detection_of_Infeasible_Test_Requirements","281584658_Trivial_Compiler_Equivalence_A_Large_Scale_Empirical_Study_of_a_Simple_Fast_and_Effective_Equivalent_Mutant_Detection_Technique","279773187_Overcoming_the_Equivalent_Mutant_Problem_A_Systematic_Literature_Review_and_a_Comparative_Experiment_of_Second_Order_Mutation","277664637_Are_Mutants_a_Valid_Substitute_for_Real_Faults_in_Software_Testing","267603851_Model-Based_Mutation_Testing_of_an_Industrial_Measurement_Device","263949597_Sampling_Program_Inputs_with_Mutation_Analysis_Going_Beyond_Combinatorial_Interaction_Testing","261092565_Assessing_Software_Product_Line_Testing_Via_Model-Based_Mutation_An_Application_to_Similarity_Testing","254034644_Do_Redundant_Mutants_Affect_the_Effectiveness_and_Efficiency_of_Mutation_Analysis","239761017_Better_predicate_testing","221555692_Sufficient_mutation_operators_for_measuring_test_effectiveness","221554380_Is_Mutation_an_Appropriate_Tool_for_Testing_Experiments","221554374_Is_operator-based_mutant_selection_superior_to_random_mutant_selection","221553870_Experiments_of_the_Effectiveness_of_Dataflow-_and_Controlflow-Based_Test_Adequacy_Criteria","221542064_Automatic_Mutation_Test_Case_Generation_via_Dynamic_Symbolic_Execution","221351679_Towards_Documenting_and_Automating_Collateral_Evolutions_in_Linux_Device_Drivers","220854552_The_influence_of_size_and_coverage_on_test_suite_effectiveness","220773040_Evaluating_Mutation_Testing_Alternatives_A_Collateral_Experiment","220719886_An_Empirical_Evaluation_of_the_First_and_Second_Order_Mutation_Testing_Strategies","220565910_Software_Unit_Test_Coverage_and_Adequacy","220516429_Using_Program_Slicing_to_Assist_in_the_Detection_of_Equivalent_Mutants","220069671_An_Analysis_and_Survey_of_the_Development_of_Mutation_Testing","4200521_Is_mutation_an_appropriate_tool_for_testing_experiments","304286579_Mutation-Based_Fault_Localization_for_Real-World_Multilingual_Programs_T","301392321_Balancing_trade-offs_in_test-suite_reduction","293814532_Static_analysis_of_mutant_subsumption","289400619_Mutation-driven_generation_of_unit_tests_and_oracles","271455697_Establishing_Theoretical_Minimal_Sets_of_Mutants","270906892_Selecting_a_software_engineering_tool_Lessons_learnt_from_mutation_analysis","266656203_Coverage_is_not_strongly_correlated_with_test_suite_effectiveness","262244378_Improving_logic-based_testing","261771229_Employing_second-order_mutation_for_isolating_first-order_equivalent_mutants","259543317_Metallaxis-FL_Mutation-based_fault_localization","257391090_Mutation_based_test_case_generation_via_a_path_selection_strategy","254462843_Regression_mutation_testing","240486276_Software_unit_test_coverage_and_adequacy","223091511_Reducing_the_Cost_of_Mutation_Testing_An_Empirical_Study","222575770_Higher_Order_Mutation_Testing","221560151_Strong_higher_order_mutation-based_test_data_generation","220854774_The_Coupling_Effect_Fact_or_Fiction","220854752_Efficient_mutation_testing_by_checking_invariant_violations","220854405_The_use_of_mutation_in_testing_experiments_and_its_sensitivity_to_external_threats","220854403_Mutation-Driven_Generation_of_Unit_Tests_and_Oracles","220691599_Introduction_to_Software_Testing","220610056_A_mutation_carol_Past_present_and_future","220281668_An_Experimental_Evaluation_of_Data_Flow_and_Mutation_Testing","220277799_Supporting_Controlled_Experimentation_with_Testing_Techniques_An_Infrastructure_and_its_Potential_Impact","220198298_Two_Notions_of_Correctness_and_Their_Relation_to_Testing","3556840_Predicate-based_test_generation_for_computer_programs","3189678_Using_Mutation_Analysis_for_Assessing_and_Comparing_Testing_Coverage_Criteria","2957629_Hints_on_Test_Data_Selection_Help_for_the_Practicing_Programmer","3189685_On_the_Use_of_Mutation_Faults_in_Empirical_Assessments_of_Test_Case_Prioritization_Techniques","3187807_Theory_of_fault-based_predicate_testing_for_computer_programs","2648992_Experiments_with_Data_Flow_and_Mutation_Testing"]}