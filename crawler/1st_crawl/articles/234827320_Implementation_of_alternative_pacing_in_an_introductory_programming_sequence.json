{"id":"234827320_Implementation_of_alternative_pacing_in_an_introductory_programming_sequence","abstract":"Appropriately placing freshmen students into introductory programming courses can be problematic. Performance in high school coursework, SAT scores, AP courses, and even pre-testing can be poor predictors of success for individuals. Yet, putting all students through the same curricular experience is not a good solution. Contention can develop between students who quickly grasp concepts and those who take longer to learn. However, experience has shown that performance in the first college programming course can be a predictor of future success.In the 2001-2 academic year, the Information Technology Department at the Rochester Institute of Technology began teaching a three-term introductory programming sequence in studio format. One unexpected benefit of this approach was the ability to quickly and accurately assess how well students were learning programming concepts (Hill et al, 2002).In the 2002-3 academic year, this assessment was used to design flexibility into the beginning programming sequence. A new curriculum was implemented that uses performance in the first course for placement in subsequent courses. All students took the same first programming course. Based on their performance, successful students were advised into one of two \"second course\" options, either the standard second course or an alternatively paced two-course sequence. The new two-term sequence included a review of the more difficult material from the first course along with the material from the standard second course, but taught at a slower pace. A questionnaire was given to all students who opted into the alternate-paced sequence for their feedback.The slower presentation pace and the time for additional projects in the alternative course sequence have proven to be a benefit to students.","authors":["Keith J. Whittington","Dianne P. Bills","Lawrence W. Hill"],"meta":["January 2003","DOI:10.1145/947121.947132"],"references":["242352389_A_studio_model_approach_to_teaching_introductory_object-oriented_programming_and_problem-solving_using_java"]}