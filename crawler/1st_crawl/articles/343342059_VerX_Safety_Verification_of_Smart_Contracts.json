{"id":"343342059_VerX_Safety_Verification_of_Smart_Contracts","authors":["Anton Permenev","Dimitar Dimitrov","Petar Tsankov","Dana Drachsler-Cohen"],"meta":["May 2020","DOI:10.1109/SP40000.2020.00024","Conference: 2020 IEEE Symposium on Security and Privacy (SP)"],"references":["328511070_MadMax_surviving_out-of-gas_conditions_in_Ethereum_smart_contracts","324512533_A_Semantic_Framework_for_the_Security_Analysis_of_Ethereum_Smart_Contracts","322136178_Online_Detection_of_Effectively_Callback_Free_Objects_with_Applications_to_Smart_Contracts","288890533_T2_Temporal_Property_Verification","256858854_Predicate_Abstraction_for_Relaxed_Memory_Models","225734990_Counterexample-Guided_Abstraction_Refinement","225142568_Z3_an_efficient_SMT_solver","225135368_Construction_of_state_graphs_with_PVS","221560458_CUTE_A_concolic_unit_testing_engine_for_C","221402899_Temporal_Property_Verification_as_a_Program_Analysis_Task","220997569_Predicate_abstraction_for_software_verification","220997507_Abstract_Interpretation_A_Unified_Lattice_Model_for_Static_Analysis_of_Programs_by_Construction_or_Approximation_of_Fixpoints","220957779_Fitness-Guided_Path_Exploration_in_Dynamic_Symbolic_Execution","220883167_Symbolic_PathFinder_symbolic_execution_of_Java_bytecode","213878365_Typestate_A_programming_language_concept_for_enhancing_software_reliability","200030230_Linearizability_A_Correctness_Condition_for_Concurrent_Objects","32964804_On_Safety_Properties_and_Their_Monitoring","3188432_Modular_verification_of_software_components_in_C","336848791_sCompile_Critical_Path_Identification_and_Analysis_for_Smart_Contracts","329635787_Chopped_symbolic_execution","328594467_Temporal_Properties_of_Smart_Contracts_8th_International_Symposium_ISoLA_2018_Limassol_Cyprus_November_5-9_2018_Proceedings_Part_IV","328321512_Securify_Practical_Security_Analysis_of_Smart_Contracts","327888502_Formal_Process_Virtual_Machine_for_Smart_Contracts_Verification","326948399_KEVM_A_Complete_Formal_Semantics_of_the_Ethereum_Virtual_Machine","326728355_SmartCheck_static_analysis_of_ethereum_smart_contracts","325727329_Symbolic_verification_of_regular_properties","323821756_Towards_verifying_ethereum_smart_contract_bytecode_in_IsabelleHOL","323257355_Finding_The_Greedy_Prodigal_and_Suicidal_Contracts_at_Scale","321147071_Defining_the_Ethereum_Virtual_Machine_for_Interactive_Theorem_Provers","321146810_A_Concurrent_Perspective_on_Smart_Contracts","316906731_Driller_Augmenting_Fuzzing_Through_Selective_Symbolic_Execution","309444724_Making_Smart_Contracts_Smarter","308827542_Regular_Property_Guided_Dynamic_Symbolic_Execution","281549980_Efficient_Scalable_Verification_of_LTL_Specifications","266043462_satabs_A_Bit-Precise_Verifier_for_C_Programs","262319515_Automated_Concolic_Testing_of_Smartphone_Apps","262216220_Predicate_abstraction_in_Java_Pathfinder","262214162_Solving_Existentially_Quantified_Horn_Clauses","234830175_SELECT-A_formal_system_for_testing_and_debugging_programs_by_symbolic_execution","225406330_Symbolic_execution_with_abstraction","225322247_Synthesizing_Monitors_for_Safety_Properties_-_This_Time_With_Calls_and_Returns_-","221602783_Trace_Partitioning_in_Abstract_Interpretation_Based_Static_Analyzers","220997530_Compositional_dynamic_test_generation","220854526_Automatic_partial_loop_summarization_in_dynamic_test_generation","220852376_JPF-SE_A_symbolic_execution_extension_to_Java_pathfinder","220852243_Demand-Driven_Compositional_Symbolic_Execution","220851853_KLEE_Unassisted_and_Automatic_Generation_of_High-Coverage_Tests_for_Complex_Systems_Programs","220691069_Temporal_Verification_of_Reactive_Systems_Safety","220431443_Serializability_Of_Concurrent_Database_Updates","220423278_Symbolic_Execution_and_Program_Testing","2523408_Automatic_Predicate_Abstraction_of_C_Programs","2876792_Abstractions_from_Proofs","2241035_Experience_with_Predicate_Abstraction"]}