{"id":"333944299_A_systematic_review_of_learning_computational_thinking_through_Scratch_in_K-9","abstract":"The text below is the accepted version. For the FINAL version, please visit https://authors.elsevier.com/a/1ZIfP1HucdHyVb [50 DAYS FREE SHARE LINK] . As computational thinking (CT) is being embraced by educational systems worldwide, researchers and teachers have posed important questions such as “what to teach” and “what can be learned.” These questions are universally crucial to the learning of all subjects. Nevertheless, there is no up-to-date, systematic overview of CT education for K-9 students that attempt to provide answers to these crucial questions. Thus, this systematic review presents a synthesis of 55 empirical studies, providing evidence of the development of computational thinking through programming in Scratch, one of the most popular visual block programming languages in schools. The purpose of this review is to systematically examine the CT skills that can be obtained through Scratch in K-9 based on empirical evidence. This systematic review has adopted Brennan and Resnick's (2012) framework as the basis for defining and identifying the expected CT skills in K-9. The major findings entail what computational thinking skills students in K-9 can learn through Scratch in relation to the framework mentioned above, taking the progression of learning into account. Additional CT skills that are not captured by the framework were identified including input/output, reading, interpreting and communicating code, using multimodal media, predictive thinking, and human-computer interaction. These additional CT skills are not currently presented in Brennan and Resnick's (2012) framework and can be considered as possible supplements to their framework. Furthermore, the paper discusses the difficulties regarding assessment and the progression of the identified skills, as well as problems with study designs. Finally, the paper sets out suggestions for future studies based on the current research gaps.","authors":["Lechen Zhang","Jalal Nouri"],"meta":["June 2019Computers & Education https://authors.elsevier.com/a/1ZIfP1HucdHyVb:103607","DOI:10.1016/j.compedu.2019.103607"],"references":["333642505_Development_of_computational_thinking_digital_competence_and_21st_century_skills_when_learning_programming_in_K-9","323780639_Understanding_Problem_Solving_Behavior_of_6-8_Graders_in_a_Debugging_Game","321332296_Comparing_loops_misconceptions_in_block-based_and_text-based_programming_languages_at_the_K-12_level","326840767_Coding_as_a_Playground_Programming_and_Computational_Thinking_in_the_Early_Childhood_Classroom","326256270_Can_computational_talent_be_detected_Predictive_validity_of_the_Computational_Thinking_Test","324373353_Mindstorms_Children_Computers_and_Powerful_Ideas","322415581_Integrating_computational_thinking_into_English_dialogue_learning_through_graphical_programming_tool","322349096_Designing_for_learning_mathematics_through_programming_A_case_study_of_pupils_engaging_with_place_value","322085069_Evaluation_of_Early_Introduction_to_Concurrent_Computing_Concepts_in_Primary_School","321810881_Evaluating_algorithmic_thinking_ability_of_primary_schoolchildren_who_learn_computer_programming"]}