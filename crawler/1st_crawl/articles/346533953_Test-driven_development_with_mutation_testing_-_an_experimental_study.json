{"id":"346533953_Test-driven_development_with_mutation_testing_-_an_experimental_study","abstract":"Test-driven development (TDD) is a popular design approach used by the developers with testing being the important software development driving factor. On the other hand, mutation testing is considered one of the most effective testing techniques. However, there is not so much research on combining these two techniques together. In this paper, we propose a novel, hybrid approach called TDD+M which combines test-driven development process together with the mutation approach. The aim was to check whether this modified approach allows the developers to write a better quality code. We verify our approach by conducting a controlled experiment and we show that it achieves better results than the sole TDD technique. The experiment involved 22 computer science students split into eight groups. Four groups (TDD+M) were using our approach, the other four (TDD) – a normal TDD process. We performed a cross-experiment by measuring the code coverage and mutation coverage for each combination (code of group X, tests from group Y). The TDD+M tests achieved better coverage on the code from TDD groups than the TDD tests on their own code (53.3% vs. 33.5% statement coverage and 64.9% vs. 37.5% mutation coverage). The TDD+M tests also found more post-release defects in the TDD code than TDD tests in the TDD+M code. The experiment showed that adding mutation into the TDD process allows the developers to provide better, stronger tests and to write a better quality code.","authors":["Adam Roman","Michał Mnich"],"meta":["March 2021Software Quality Journal 29(6):1-38","DOI:10.1007/s11219-020-09534-x"],"references":["327395450_Evaluating_the_effectiveness_of_test_driven_development_Advantages_and_pitfalls","317160803_An_empirical_study_on_the_application_of_mutation_testing_for_a_safety-critical_industrial_software_system","345081568_Are_mutation_scores_correlated_with_real_fault_detection_a_large_scale_empirical_study_on_the_relationship_between_mutants_and_real_faults","329477144_The_Interpretation_of_Interaction_in_Contingency_Tables","325371302_On_the_effectiveness_of_unit_tests_in_test-driven_development","325014033_Mutation_Testing_Advances_An_Analysis_and_Survey","323424582_Statistical_power_analysis_for_the_behavioral_sciences","317924009_New_Effect_Size_Rules_of_Thumb","316174387_Applying_Mutation_Analysis_on_Kernel_Test_Suites_An_Experience_Report","310425707_A_Dissection_of_Test-Driven_Development_Does_It_Really_Matter_to_Test-First_or_to_Test-Last","282895362_Guidelines_for_Coverage-Based_Comparisons_of_Non-Adequate_Test_Suites","305108788_Can_Testedness_be_Effectively_Measured","305026958_PIT_a_practical_mutation_testing_tool_for_Java_demo","304286565_How_Verified_is_My_Code_Falsification-Driven_Verification_T","300885399_Mutation_Testing_Process_Combined_with_Test-Driven_Development_in_NET_Environment"]}