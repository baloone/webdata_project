{"id":"356074738_Improving_Comprehension_Intelligent_Tutoring_System_Explaining_the_Domain_Rules_When_Students_Break_Them","abstract":"Intelligent tutoring systems have become increasingly common in assisting students but are often aimed at isolated subject-domain tasks without creating a scaffolding system from lower- to higher-level cognitive skills, with low-level skills often neglected. We designed and developed an intelligent tutoring system, CompPrehension, which aims to improve the comprehension level of Bloom’s taxonomy. The system features plug-in-based architecture, easily adding new subject domains and learning strategies. It uses formal models and software reasoners to solve the problems and judge the answers, and generates explanatory feedback about the broken domain rules and follow-up questions to stimulate the students’ thinking. We developed two subject domain models: an Expressions domain for teaching the expression order of evaluation, and a Control Flow Statements domain for code-tracing tasks. The chief novelty of our research is that the developed models are capable of automatic problem classification, determining the knowledge required to solve them and so the pedagogical conditions to use the problem without human participation. More than 100 undergraduate first-year Computer Science students took part in evaluating the system. The results in both subject domains show medium but statistically significant learning gains after using the system for a few days; students with worse previous knowledge gained more. In the Control Flow Statements domain, the number of completed questions correlates positively with the post-test grades and learning gains. The students’ survey showed a slightly positive perception of the system.","authors":["Oleg Sychev","Nikita Penskoy","Anton Anikin","Mikhail E Denisov"],"meta":["November 2021Education Sciences 11(11):719","DOI:10.3390/educsci11110719"],"references":["354499718_Inference_Engines_Performance_in_Reasoning_Tasks_for_Intelligent_Tutoring_Systems","354094460_Self-Directedness_for_Sustainable_Learning_in_University_Studies_Lithuanian_Students'_Perspective","352179794_Interactive_Feedback_for_Learning_Mathematics_in_a_Digital_Learning_Environment","350129183_Conceptual_Framework_for_Programming_Skills_Development_Based_on_Microlearning_and_Automated_Source_Code_Evaluation_in_Virtual_Learning_Environment","349960208_Verifying_Algorithm_Traces_and_Fault_Reason_Determining_Using_Ontology_Reasoning","353431525_A_gamified_web_based_system_for_computer_programming_learning","353113615_CompPrehension_-_Model-Based_Intelligent_Tutoring_System_on_Comprehension_Level","352540939_How_it_Works_Algorithms_-_A_Tool_for_Developing_an_Understanding_of_Control_Structures","352345768_An_Epistemic_Model-Based_Tutor_for_Imperative_Programming","347981391_Notional_Machines_in_Computing_Education_The_Education_of_Attention","344253919_Pedagogical_Transitions_Using_Blooms_Taxonomy","344227884_Automated_Assessment_in_Programming_Courses_A_Case_Study_during_the_COVID-19_Era","343921429_Cognitive_Learning_Analytics_Using_Assessment_Data_and_Concept_Map_A_Framework-Based_Approach_for_Sustainability_of_Programming_Courses","341839144_Student_Guided_Learning_-_from_Teaching_to_E_-_learning","342676940_Allowing_Revisions_While_Providing_Error-Flagging_Support_Is_More_Better"]}