{"id":"305341458_Alpha-Structural_Induction_and_Recursion_for_the_Lambda_Calculus_in_Constructive_Type_Theory","abstract":"We formulate principles of induction and recursion for a variant of lambda calculus in its original syntax (i.e., with only one sort of names) where α-conversion is based upon name swapping as in nominal abstract syntax. The principles allow to work modulo α-conversion and implement the Barendregt variable convention. We derive them all from the simple structural induction principle on concrete terms and work out applications to some fundamental meta-theoretical results, such as the substitution lemma for α-conversion and the lemma on substitution composition. The whole work is implemented in Agda.","authors":["Ernesto Copello","Álvaro Tasistro","Nora Szasz","Ana Bove"],"meta":["July 2016Electronic Notes in Theoretical Computer Science 323:109-124","DOI:10.1016/j.entcs.2016.06.008"],"references":["275366546_Formalisation_in_Constructive_Type_Theory_of_Stoughton's_Substitution_for_the_Lambda_Calculus","248801042_Towards_a_practical_programming_language_based_on_dependent_type_theory","319394269_Intuitionistic_Type_Theory","259089684_Viewing_-terms_through_maps","250400155_Alpha-Structural_Recursion_and_Induction_Extended_Abstract","232716955_Substitution_Revisited","226489235_The_Locally_Nameless_Representation","222294431_Lambda_Calculus_Notation_with_Nameless_Dummies_a_Tool_for_Automatic_Formula_Manipulation_with_Application_to_the_Church-Rosser_Theorem","222163957_Substitution_revisited","221302286_Recursive_Function_Definition_for_Types_with_Binders"]}