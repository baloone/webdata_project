{"id":"326526479_ThiNet_Pruning_CNN_Filters_for_a_Thinner_Net","abstract":"This paper aims at accelerating and compressing deep neural networks to deploy CNN models into small devices like mobile phones or embedded gadgets. We focus on filter level pruning, i.e., the whole filter will be discarded if it is less important. An effective and unified framework, ThiNet (stands for \"Thin Net\"), is proposed in this paper. We formally establish filter pruning as an optimization problem, and reveal that we need to prune filters based on statistics computed from its next layer, not the current layer, which differentiates ThiNet from existing methods. We also propose \"gcos\" (Group COnvolution with Shuffling), a more accurate group convolution scheme, to further reduce the pruned model size. Experimental results demonstrate the effectiveness of our method, which has advanced the state-of-the-art. Moreover, we show that the original VGG-16 model can be compressed into a very small model (ThiNet-Tiny) with only 2.66MB model size, but still preserve AlexNet level accuracy. This small model is evaluated on several benchmarks with different vision tasks (e.g., classification, detection, segmentation), and shows excellent generalization ability.","authors":["Jian-Hao Luo","Hao Zhang","Hong-Yu Zhou","Chen-Wei Xie"],"meta":["July 2018IEEE Transactions on Pattern Analysis and Machine Intelligence PP(99):1-1","DOI:10.1109/TPAMI.2018.2858232"],"references":["322059721_Channel_Pruning_for_Accelerating_Very_Deep_Neural_Networks","322057654_Learning_Efficient_Convolutional_Networks_through_Network_Slimming","319235652_Learning_Efficient_Convolutional_Networks_through_Network_Slimming","316184205_MobileNets_Efficient_Convolutional_Neural_Networks_for_Mobile_Vision_Applications","315697147_Selective_Convolutional_Descriptor_Aggregation_for_Fine-Grained_Image_Retrieval","307536925_Pruning_Filters_for_Efficient_ConvNets","305196650_Going_deeper_with_convolutions","301878495_SqueezeNet_AlexNet-level_accuracy_with_50x_fewer_parameters_and_05MB_model_size","286513835_SSD_Single_Shot_MultiBox_Detector","275279789_Compressing_Neural_Networks_with_the_Hashing_Trick","265295439_ImageNet_Large_Scale_Visual_Recognition_Challenge","264979485_Caffe_Convolutional_Architecture_for_Fast_Feature_Embedding","261368736_Exploiting_Linear_Structure_Within_Convolutional_Networks_for_Efficient_Evaluation","240308775_Representation_Learning_A_Review_and_New_Perspectives","329740172_ShuffleNet_An_Extremely_Efficient_Convolutional_Neural_Network_for_Mobile_Devices","322060368_Arbitrary_Style_Transfer_in_Real-Time_with_Adaptive_Instance_Normalization","322058942_Grad-CAM_Visual_Explanations_from_Deep_Networks_via_Gradient-Based_Localization","322058064_ThiNet_A_Filter_Level_Pruning_Method_for_Deep_Neural_Network_Compression","320967941_YOLO9000_Better_Faster_Stronger","319770367_Exploiting_Linear_Structure_Within_Convolutional_Networks_for_Efficient_Evaluation","319770342_Compressing_Deep_Convolutional_Networks_using_Vector_Quantization","319770334_Deep_Compression_Compressing_Deep_Neural_Networks_with_Pruning_Trained_Quantization_and_Huffman_Coding","319770183_Imagenet_classification_with_deep_convolutional_neural_networks","319770109_Fast_ConvNets_Using_Group-wise_Brain_Damage","319277492_Exploring_the_Granularity_of_Sparsity_in_Convolutional_Neural_Networks","318584216_ThiNet_A_Filter_Level_Pruning_Method_for_Deep_Neural_Network_Compression","318205093_ShuffleNet_An_Extremely_Efficient_Convolutional_Neural_Network_for_Mobile_Devices","315457372_Arbitrary_Style_Transfer_in_Real-time_with_Adaptive_Instance_Normalization","313601183_Optimal_brain_damage_in","311610246_Fast_ConvNets_Using_Group-Wise_Brain_Damage","311609522_You_Only_Look_Once_Unified_Real-Time_Object_Detection","311609205_Quantized_Convolutional_Neural_Networks_for_Mobile_Devices","310610828_Pruning_Convolutional_Neural_Networks_for_Resource_Efficient_Transfer_Learning","306218037_Learning_multiple_layers_of_features_from_tiny_images","306187229_Learning_Structured_Sparsity_in_Deep_Neural_Networks","305228885_Network_Trimming_A_Data-Driven_Neuron_Pruning_Approach_towards_Efficient_Deep_Architectures","303812083_DeepLab_Semantic_Image_Segmentation_with_Deep_Convolutional_Nets_Atrous_Convolution_and_Fully_Connected_CRFs","301921832_Fully_convolutional_networks_for_semantic_segmentation","287250939_Learning_Deep_Features_for_Discriminative_Localization","286512696_Deep_Residual_Learning_for_Image_Recognition","283560194_Channel-Level_Acceleration_of_Deep_Face_Representations","282692433_Structured_Transforms_for_Small-Footprint_Deep_Learning","278049038_You_Only_Look_Once_Unified_Real-Time_Object_Detection","277959043_Learning_both_Weights_and_Connections_for_Efficient_Neural_Networks","276923091_Learning_Deconvolution_Network_for_Semantic_Segmentation","269877085_Compressing_Deep_Convolutional_Networks_using_Vector_Quantization","269375158_The_Pascal_Visual_Object_Classes_Challenge_A_Retrospective","265385906_Very_Deep_Convolutional_Networks_for_Large-Scale_Image_Recognition","261121789_Cats_and_dogs","246666948_Learning_distributed_representations_of_concepts_from_relational_data_using_linear_relational_embedd","228102719_Improving_neural_networks_by_preventing_co-adaptation_of_feature_detectors","221364644_Recognizing_Indoor_Scenes","237000567_Predicting_Parameters_in_Deep_Learning","222817667_Learning_Generative_Visual_Models_from_Few_Training_Examples_An_Incremental_Bayesian_Approach_Tested_on_101_Object_Categories","221111619_Human_action_recognition_by_learning_bases_of_action_attributes_and_parts"]}