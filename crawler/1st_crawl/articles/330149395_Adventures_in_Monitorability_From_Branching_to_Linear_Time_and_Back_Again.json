{"id":"330149395_Adventures_in_Monitorability_From_Branching_to_Linear_Time_and_Back_Again","abstract":"This paper establishes a comprehensive theory of runtime monitorability for Hennessy-Milner logic with recursion, a very expressive variant of the modal µ-calculus. It investigates the monitorability of that logic with a linear-time semantics and then compares the obtained results with ones that were previously presented in the literature for a branching-time setting. Our work establishes an expressiveness hierarchy of monitorable fragments of Hennessy-Milner logic with recursion in a linear-time setting and exactly identifies what kinds of guarantees can be given using runtime monitors for each fragment in the hierarchy. Each fragment is shown to be complete, in the sense that it can express all properties that can be monitored under the corresponding guarantees. The study is carried out using a principled approach to monitoring that connects the semantics of the logic and the operational semantics of monitors. The proposed framework supports the automatic, compositional synthesis of correct monitors from monitorable properties.","authors":["Luca Aceto","Antonis Achilleos","Adrian Francalanza","Anna Ingólfsdóttir"],"meta":["January 2019Proceedings of the ACM on Programming Languages 3(POPL):1-29","DOI:10.1145/3290365"],"references":["326174163_On_Runtime_Enforcement_via_Suppressions","323798925_A_Framework_for_Parameterized_Monitorability","323798733_Monitoring_for_Silent_Actions","323082969_Introduction_to_Runtime_Verification","320077085_Consistently-Detecting_Monitors","319487966_A_Foundation_for_Runtime_Monitoring","315636229_Monitorability_for_the_Hennessy-Milner_logic_with_recursion","324491800_Introduction_to_Runtime_Verification","321826402_A_Note_on_Monitors_and_Buchi_Automata","318109465_On_the_Complexity_of_Determinizing_Monitors"]}