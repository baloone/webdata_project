{"id":"356773097_Impact_of_software_development_processes_on_the_outcomes_of_student_computing_projects_A_tale_of_two_universities","abstract":"Context\nProject-based courses are more and more commonly used as an opportunity to teach students structured methods of developing software. Two well-known approaches in this area—traditional and Agile—have been successfully applied to drive academic projects. However too often the default is still to have no organizational process at all. While a large variety of software development life-cycle models exists, little guidance is available on which one to choose to fit the context of working with students.\n\nObjective\nThis paper assesses the impact of iterative, sequential and “hands-off” development approaches on the success of student computing projects. A structured, metric-based assessment scheme was applied to investigate team productivity, teamwork and the quality of the final product.\n\nMethod\nEmpirical evidence was collected during a controlled experiment carried out at two engineering schools in Europe. More than 100 students at Bachelor’s and Master’s levels participated in the research, with varied software development and teamwork skill sets.\n\nResults\nSimilar patters were observed among both sets of subjects, with iterative teams demonstrating the highest productivity and superior team cohesion but a decline in the quality of the final product. Sequential development led to a considerable improvement in the external quality characteristics of the software produced, owing to the method’s stress on design activities.\n\nConclusion\nThe findings of this study will be of use to educators interested in applying software development processes to student groupwork. A set of guidelines is provided for applying a structured way of working in a project-based course.","authors":["Rafal Wlodarski","Aneta Poniszewska-Maranda","Jean-Remy Falleri"],"meta":["December 2021Information and Software Technology 144(2):106787","DOI:10.1016/j.infsof.2021.106787"],"references":["344434872_Comparative_Case_Study_of_Plan-Driven_and_Agile_Approaches_in_Student_Computing_Projects","331660283_Closing_the_Gap_Between_Software_Engineering_Education_and_Industrial_Needs","326226637_Adapting_Agile_Practices_in_University_Contexts","320012681_Measuring_dimensions_of_Software_Engineering_projects'_success_in_Academic_context","318125441_Agile_for_Millennials_A_Comparative_Study","316104791_Hybrid_Software_and_system_development_in_practice_Waterfall_Scrum_and_beyond","326114603_Project_Management_Research-The_Challenge_and_Opportunity","325902722_TEAMSCOPE_measuring_software_engineering_processes_with_teamwork_telemetry","319148044_Software_Process_Diversity_Conceptualization_Measurement_and_Analysis_of_Impact_on_Project_Performance","315951888_Source_Code_Metrics_A_Systematic_Mapping_Study"]}