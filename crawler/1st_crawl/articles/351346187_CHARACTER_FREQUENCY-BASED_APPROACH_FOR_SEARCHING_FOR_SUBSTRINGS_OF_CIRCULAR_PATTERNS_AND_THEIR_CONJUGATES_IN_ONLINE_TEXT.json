{"id":"351346187_CHARACTER_FREQUENCY-BASED_APPROACH_FOR_SEARCHING_FOR_SUBSTRINGS_OF_CIRCULAR_PATTERNS_AND_THEIR_CONJUGATES_IN_ONLINE_TEXT","abstract":"A fundamental problem in computational biology is dealing with circular patterns. The problem consists of finding a pattern and its rotations in a database. In this paper, we present two online algorithms. The first algorithm reports all of the substrings (factors) of a given pattern in an online text. Then, without losing efficiency, we extend the algorithm to process the circular rotations of the pattern. For a given pattern P of size M and a text T of size N, the extended algorithm reports all of the locations in the text where a substring of Pc is found where Pc is one of the rotations of P. For an alphabet size σ using O(M) space, the desired goals are achieved in an average O(MN/ σ ) time, which is O(N) for all patterns with length M ≤ σ. Traditional string-processing algorithms make use of advanced data structures such as suffix trees and automaton. The experimental results we have provided show that basic data structures such as arrays can be used in text-processing algorithms without compromising efficiency.\n\nPlease cite: \nComputer Science Vol 22, No 2, April 2021: 237–252\nDOI: https://doi.org/10.7494/csci.2021.22.2.3401","authors":["Prasad Vinod"],"meta":["April 2021"],"references":["261032577_Fast_Algorithms_for_Approximate_Circular_String_Matching","221013481_Indexing_Circular_Patterns","26690920_CSA_An_efficient_algorithm_to_improve_circular_DNA_multiple_alignment","274171431_Bit-Parallel_Algorithms_for_Exact_Circular_String_Matching","273866289_The_smallest_automation_recognizing_the_subwords_of_a_text","262168371_All-Against-All_Circular_Pattern_Matching","238176056_Algorithms_on_Strings_Trees_and_Strings","229067720_On-Line_Construction_of_Suffix_Trees","220639825_Fast_and_Flexible_String_Matching_by_Combining_Bit-Parallelism_and_Suffix_Automata","220431105_A_Space-Economical_Suffix_Tree_Construction_Algorithm"]}