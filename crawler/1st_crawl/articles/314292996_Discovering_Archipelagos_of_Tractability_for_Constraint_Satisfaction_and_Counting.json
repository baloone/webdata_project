{"id":"314292996_Discovering_Archipelagos_of_Tractability_for_Constraint_Satisfaction_and_Counting","abstract":"The Constraint Satisfaction Problem (CSP) is a central and generic computational problem which provides a common framework for many theoretical and practical applications. A central line of research is concerned with the identification of classes of instances for which CSP can be solved in polynomial time; such classes are often called “islands of tractability.” A prominent way of defining islands of tractability for CSP is to restrict the relations that may occur in the constraints to a fixed set, called a constraint language, whereas a constraint language is conservative if it contains all unary relations. Schaefer’s famous Dichotomy Theorem (STOC 1978) identifies all islands of tractability in terms of tractable constraint languages over a Boolean domain of values. Since then, many extensions and generalizations of this result have been obtained. Recently, Bulatov (TOCL 2011, JACM 2013) gave a full characterization of all islands of tractability for CSP and the counting version &num;CSP that are defined in terms of conservative constraint languages.\nThis article addresses the general limit of the mentioned tractability results for CSP and &num;CSP, that they only apply to instances where all constraints belong to a single tractable language (in general, the union of two tractable languages is not tractable). We show that we can overcome this limitation as long as we keep some control of how constraints over the various considered tractable languages interact with each other. For this purpose, we utilize the notion of a strong backdoor of a CSP instance, as introduced by Williams et al. (IJCAI 2003), which is a set of variables that when instantiated, moves the instance to an island of tractability, that is, to a tractable class of instances. We consider strong backdoors into scattered classes, consisting of CSP instances where each connected component belongs entirely to some class from a list of tractable classes. Figuratively speaking, a scattered class constitutes an archipelago of tractability. The main difficulty lies in finding a strong backdoor of given size k; once it is found, we can try all possible instantiations of the backdoor variables and apply the polynomial time algorithms associated with the islands of tractability on the list component-wise. Our main result is an algorithm that, given a CSP instance with n variables, finds in time f(k)nO(1) a strong backdoor into a scattered class (associated with a list of finite conservative constraint languages) of size k or correctly decides that there is not such a backdoor. This also gives the running time for solving (&num;)CSP, provided that (&num;)CSP is polynomial-time tractable for the considered constraint languages. Our result makes significant progress towards the main goal of the backdoor-based approach to CSPs—the identification of maximal base classes for which small backdoors can be detected efficiently.","authors":["Robert Ganian","Ramanujan M S","Stefan Szeider"],"meta":["March 2017ACM Transactions on Algorithms 13(2):1-32","DOI:10.1145/3014587"],"references":["282000460_Backdoors_into_heterogeneous_classes_of_SAT_and_CSP","265877348_Parameterized_Tractability_of_Multiway_Cut_with_Parity_Constraints","261847396_SIGACT_News_Complexity_Theory_Column_76_an_atypical_survey_of_typical-case_heuristic_algorithms","261636165_On_Backdoors_To_Tractable_Constraint_Languages","261160105_Meta_Kernelization","228828780_On_the_connections_between_backdoors_restarts_and_heavy-tailedness_in_combinatorial_search_Extended_Abstract","225447052_Lecture_Notes_in_Computer_Science","224861555_Strong_Backdoors_to_Bounded_Treewidth_SAT","220813506_Constraint_Satisfaction_Databases_and_Logic","220617670_The_Computational_Structure_of_Monotone_Monadic_SNP_and_Constraint_Satisfaction_A_Study_Through_Datalog_and_Group_Theory","2871393_Backdoors_To_Typical_Case_Complexity","2279742_Closure_Properties_of_Constraints","1959913_The_Connectivity_of_Boolean_Satisfiability_Computational_and_Structural_Dichotomies","1906306_Almost_2-SAT_is_Fixed-Parameter_Tractable","316800486_Monographs_in_Computer_Science","313903170_Parameterized_Algorithms","309874388_Meta_Kernelization","282373454_Solving_d-_SAT_via_Backdoors_to_Small_Treewidth","267114728_Graph_theory_4th_ed","265502171_Fundamentals_of_Parameterized_Complexity","262409339_Backdoors_to_typical_case_complexity","262175538_Detecting_and_Exploiting_Subproblem_Tractability","258727797_The_complexity_of_finite-valued_CSPs","226259495_A_Logical_Approach_to_Constraint_Satisfaction","223374176_A_Dichotomy_Theorem_for_Maximum_Generalized_Satisfiability_Problems","223328889_Characterising_tractable_constraints","223295622_Finding_odd_cycle_transversals","223053040_Complexity_of_Generalized_Satisfiability_Counting_Problems","222928995_On_the_Complexity_of_Database_Queries","222923068_Strong_computational_lower_bounds_via_parameterized_complexity","222420904_Colouring_constraint_satisfaction_and_complexity","221590978_Monotone_monadic_SNP_and_constraint_satisfaction","221590732_The_Complexity_of_Satisfiability_Problems","220944328_Detecting_Backdoor_Sets_with_Respect_to_Horn_and_Binary_Clauses","220613562_Complexity_of_Conservative_Constraint_Satisfaction_Problems","220568093_Variable_and_Term_Removal_From_Boolean_Formulae","220431974_A_dichotomy_theorem_for_Constraint_Satisfaction_Problems_on_a_3-element_set","220312642_Networks_of_Constraints_Fundamental_Properties_and_Applications_to_Picture_Processing","220247478_Towards_a_dichotomy_theorem_for_the_counting_constraint_satisfaction_problem","220139160_The_complexity_of_the_counting_constraint_satisfaction_problem","51945353_The_Complexity_of_Conservative_Valued_CSPs","2939706_Parameterized_Graph_Separation_Problems"]}