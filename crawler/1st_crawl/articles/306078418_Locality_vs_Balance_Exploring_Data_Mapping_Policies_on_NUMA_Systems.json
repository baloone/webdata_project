{"id":"306078418_Locality_vs_Balance_Exploring_Data_Mapping_Policies_on_NUMA_Systems","abstract":"In parallel architectures that have a Non-Uniform Memory Access (NUMA) behavior, the mapping of memory pages to NUMA nodes influences the performance of parallel applications. In order to improve traditional data mapping policies, two basic strategies can be employed: optimizing locality or balance of memory accesses. In a locality-based policy, memory pages are mapped to nodes that access the page the most. In a balance-based policy, memory pages are mapped such that the number of memory accesses resolved by each memory controller is similar. In this paper, we perform an in-depth exploration of these data mapping policies on the performance of parallel applications. We introduce metrics that describe their memory access behavior and evaluate their suitability for data mapping. We also present new mapping policies that focus on locality, balance or both. These policies were evaluated on three different NUMA architectures with applications from the NAS-OMP and PARSEC benchmark suites. Results show that the performance improvements of each policy depend on the characteristics of the applications and machines. Choosing the wrong policy can actually hurt the performance compared to the default first-touch mapping. Compared to traditional mapping policies and to policies that only focus on either locality or balance, taking into account both locality and balance results in the highest improvements. Furthermore, it avoids the performance reduction caused by the wrong data mapping.","authors":["Matthias Diener","Eduardo H M Cruz","Philippe Olivier Alexandre. Navaux"],"meta":["March 2015","DOI:10.1109/PDP.2015.11","Conference: International Conference on Parallel, Distributed, and Network-Based Processing (PDP)At: Turku, Finland"],"references":["266660543_kMAF_Automatic_kernel-level_management_of_thread_and_data_affinity","262159992_Traffic_Management_A_Holistic_Approach_to_Memory_Placement_on_NUMA_Systems","261357046_Communication-Based_Mapping_Using_Shared_Pages","224132799_Memphis_Finding_and_fixing_NUMA-related_performance_problems_on_multi-core_platforms","280292422_Pin","268461720_Traffic_management","264159793_A_Case_for_NUMA-Aware_Contention_Management_on_Multicore_Processors","262399044_A_Tool_to_Analyze_the_Performance_of_Multithreaded_Programs_on_NUMA_Architectures","261486341_Misunderstanding_the_NUMA_memory_system_performance_of_multithreaded_workloads","241623334_Memory_Management_for_Many-Core_Processors_with_Software_Configurable_Locality_Policies"]}