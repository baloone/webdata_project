{"id":"234832071_Dynamic_count_filters","abstract":"Bloom filters are not able to handle deletes and inserts on multisets over time. This is important in many situations when streamed data evolve rapidly and change patterns frequently. Counting Bloom Filters (CBF) have been proposed to overcome this limitation and allow for the dynamic evolution of Bloom filters. The only dynamic approach to a compact and efficient representation of CBF are the Spectral Bloom Filters (SBF).In this paper we propose the Dynamic Count Filters (DCF) as a new dynamic and space-time efficient representation of CBF. Although DCF does not make a compact use of memory, it shows to be faster and more space efficient than any previous proposal. Results show that the proposed data structure is more efficient independently of the incoming data characteristics.","authors":["Josep Aguilar-Saborit","Pedro Trancoso","Victor Munt√©s-Mulero","Josep-Lluis Larriba-Pey"],"meta":["March 2006ACM SIGMOD Record 35(1):26-32","DOI:10.1145/1121995.1122000","Sourcedoi.acm.org"],"references":["221214473_Spectral_Bloom_Filters","221164155_Summary_Cache_A_Scalable_Wide-Area_Web_Cache_Sharing_Protocol","220465609_Survey_Network_Applications_of_Bloom_Filters_A_Survey","220428568_Summary_Cache_A_Scalable_Wide-Area_Web_Cache_Sharing_Protocol","3789950_Web_Caching_and_Zipf-Like_Distributions_Evidence_and_Implications","242445578_Approximate_frequency_counts_over_data_streams","221311336_Bloom_Histogram1Path_Selectivity_Estimation_for_XML_Data_with_Updates","220426731_Practical_Performance_Of_Bloom_Filters_and_Parallel_Free-Text_Searching","220424808_SpaceTime_Trade-Offs_in_Hash_Coding_With_Allowable_Errors","220422797_A_Second_Look_at_Bloom_Filters"]}