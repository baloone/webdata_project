{"id":"346375278_SGEQ_A_New_Social_Group_Enlarging_Query_With_Size_Constraints","abstract":"In recent years, the problem of \n$k$ \n-core has attracted wide-spread research attention due to the popularity of the graph-related applications, such as social network analysis, community detection, and collaboration networks. To efficiently support group-based activity planning, the organizers need to guarantee the size and closeness of the group. Current applications of the \n$k$ \n-core only support searching for the maximum \n$k$ \n-core group or adding the minimum number of edges to obtain the \n$k$ \n-core. However, no research has focused on the problem of enlarging the \n$k$ \n-core. In reality, when new tasks arrive, a work team needs to not only recruit new team members based on the requirements but also guarantee sufficient closeness among the members for good cooperation. In this paper, we first formalize a new query, a social group enlarging query with size constraints (SGEQ), which aims to find \n$n$ \nusers to enlarge a subgraph from a \n$k$ \n-core of size \n$m$ \nto a (\n$k+\\Delta $ \n)-core of size (\n$m+n$ \n) by inserting the minimum number of edges. We prove that the SGEQ problem is NP-hard. To solve this problem, we first propose a novel algorithm, namely, the maximum connection edges algorithm (MCEA), which searches for the inserted vertex that has the most edges with an induced subgraph every time. Then, we develop an optimizing algorithm, namely, the maximum contribution degree algorithm (MCDA), which on average adds a number of edges in the expanded query less than that obtained by the MCEA. Finally, we conduct extensive experiments on two real-world datasets, and the results demonstrate the efficiency of the proposed algorithms.","authors":["Xiaoxu Song","Baoezeng Wang","Xiaochun Yang","Jing Qin"],"meta":["January 2020IEEE Access 8:193608-193620","DOI:10.1109/ACCESS.2020.3032987"],"references":["340391378_Incremental_Algorithms_of_the_Core_Maintenance_Problem_on_Edge-Weighted_Graphs","328874544_Scalable_K-Core_Decomposition_for_Static_Graphs_Using_a_Dynamic_Graph_Data_Structure","342402512_Cores_matter_An_analysis_of_graph_decomposition_effects_on_influence_maximization_problems","341691391_Finding_the_Best_k_in_Core_Decomposition_A_Time_and_Space_Optimal_Solution","337997248_Faster_Parallel_Core_Maintenance_Algorithms_in_Dynamic_Graphs","334843789_K-Core_Maximization_An_Edge_Addition_Approach","334711540_Efficient_Maximum_Clique_Computation_over_Large_Sparse_Graphs","330654111_Who_Should_Be_Invited_to_My_Party_A_Size-Constrained_k-Core_Problem_in_Social_Networks","328522782_Efficiently_Reinforcing_Social_Networks_over_User_Engagement_and_Tie_Strength","324722097_Can_We_Create_Large_k-Cores_by_Adding_Few_Edges","315303792_OLAK_an_efficient_algorithm_to_prevent_unraveling_in_social_networks","314943249_Core_Maintenance_in_Dynamic_Graphs_A_Parallel_Approach_Based_on_Matching","309854723_When_Engagement_Meets_Similarity_Efficient_kr-Core_Computation_on_Social_Networks","305446132_K-Core_decomposition_of_large_networks_on_a_single_PC","305077941_Diffusion_centrality_A_paradigm_to_maximize_spread_in_social_networks"]}