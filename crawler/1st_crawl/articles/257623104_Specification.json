{"id":"257623104_Specification","abstract":"The specification and implementation of computational artefacts occurs throughout the discipline of computer science. Consequently, unpacking its nature should constitute one of the core areas of the philosophy of computer science. This paper presents a conceptual analysis of the central role of specification in the discipline.","authors":["Raymond Turner"],"meta":["May 2011Minds and Machines 21(2)","DOI:10.1007/s11023-011-9239-x","Project: philosophy of computer science"],"references":["258568562_Codecharts_Roadmaps_and_Blueprints_for_Object-Oriented_Programs","224001240_Systematic_Software_Development_Using_VDM","224001127_Software_Architecture_In_Practice","220997139_Social_Processes_and_Proofs_of_Theorems_and_Programs","220692745_Computable_Models","220690719_Principles_of_Model_Checking","220636737_Understanding_Programming_Languages","346956262_The_VDM-SL_Reference_Guide","345224001_Ontology","321501459_Logical_Number_Theory_I","300855541_Definitions","297390689_Abstract_Objects","291264625_Thinking_Machines_and_the_Philosophy_of_Computer_Science_Concepts_and_Principles","289843532_Codecharts_Roadmaps_and_Blueprints_for_Object-Oriented_Programs","288631425_The_unified_modeling_language","287353180_Programming_Languages_as_Mathematical_Theories","279402808_Analytic_Philosophy_of_Technology","277290882_Software_Engineering_Principles_and_Practice","269443648_Wittgenstein_on_Rules_and_Private_Language","265455944_The_B-book_Assigning_programs_to_meanings_Forewords_by_Professor_A_Hoare_and_Pierre_Chapron","265356218_Using_Z_Specification_Refinement_and_Proof","264968533_Programming_languages_and_operational_semantics_An_introduction","264842191_Quality_Software_and_the_Unified_Modeling_Language","259182201_The_Normativity_of_Meaning_and_Content","255738606_Compilers_Principles_Techniques_and_Tools_Second_Edition","248526211_The_dual_nature_of_technical_artefacts","247990768_The_Rule-Following_Considerations_1","246810724_Metamathematics_of_First-Order_Arithmetic","245215779_Admissible_Sets_and_Structures_An_Approach_to_Definability_Theory","243787144_Abstract_Objects_An_Introduction_to_Axiomatic_Metaphysics","243774113_Constructive_foundations_for_functional_programming","243476256_What_is_This_Thing_Called_Science","242530283_The_vdm-sl_reference_guide","240074030_Kazman_Software_Architecture_in_Practice","239062902_Wittgenstein_on_Rules_and_Private_Language","238348482_The_Reason's_Proper_Study_Essays_Towards_a_Neo-Fregean_Philosophy_of_Mathematics","224001287_An_Introduction_to_Formal_Specification_Using_Z","224001168_Z_An_Introduction_to_Formal_Methods","224001120_Compilers_principles_and_techniques_and_tools","222459696_A_Theory_of_Type_Polymorphism_in_Programming","222128720_Process_languages_with_discrete_relative_time_based_on_the_Ordered_SOS_format_and_rooted_eager_bisimulation","221621692_Foundations_of_Denotational_Semantics","221558307_Abductive_Inductive_and_Deductive_Reasoning_about_Resources","220694801_Types_and_Programming_Languages","220694665_Programming_from_Specifications","220692370_Software_Engineering_Principles_and_Practice","220692330_An_Introduction_to_Formal_Specification_and_Z","220690963_Z_-_an_introduction_to_formal_methods","220689811_Systematic_Software_Development_using_VDM","220636857_The_Philosophy_of_Computer_Science_Introduction_to_the_Special_Issue","220425182_Social_Processes_and_Proofs_of_Theorems_and_Programs","220424504_Program_Verification_The_Very_Idea","220173464_Social_processes_program_verification_and_all_that","220118508_A_Structural_Approach_to_Operational_Semantics","216300415_What_is_This_Thing_Called_Science"]}