{"id":"309708569_Detecting_Source_Code_Plagiarism_on_Introductory_Programming_Course_Assignments_Using_a_Bytecode_Approach","abstract":"Even though there are various source code plagiarism detection approaches, most of them only concern with low-level plagiarism attack with an assumption that plagiarism is only conducted by students who are not proficient in programming. However, plagiarism is often conducted not only due to student incapability, but also because of bad time management. Thus, high-level plagiarism attack should be detected and evaluated. This paper proposes source code plagiarism detection approach which can detect most introductory-programming-course plagiarism attacks at any level by utilizing low-level instructions instead of source code tokens. Several mechanisms are also introduced to improve its effectiveness such as instruction generalization, instruction reinterpretation, method-based comparison, and method linearization. Since low-level instruction is a language-dependent feature, Java is selected as target programming language with bytecode as its low-level instruction. Based on evaluation, it can be concluded that our approach is more effective to detect most plagiarism attack types than raw source code approach on introductory programming course. This evaluation is based on plagiarism attack types that are collected through controlled experiment.","authors":["Oscar Karnalim"],"meta":["October 2016","DOI:10.1109/ICTS.2016.7910274","Conference: The 10th International Conference on Information & Communication Technology and Systems (ICTS)At: Surabaya, Indonesia"],"references":["282320838_Java_Archives_Search_Engine_using_Byte_Code_as_Information_Source","275720988_Plagiarism_Detection_for_Java_Programs_without_Source_Codes","262426534_Software_plagiarism_detection_A_graph-based_approach","236973201_Evaluating_the_Performance_of_LSA_for_Source-code_Plagiarism_Detection","236848548_A_novel_approach_based_on_formal_methods_for_clone_detection","234792131_Detection_of_similarities_in_student_programs_YAP'ing_may_be_preferable_to_Plague'ing","284768783_A_Machine_Learning_Based_Tool_for_Source_Code_Plagiarism_Detection","262990748_Multi-Agent_based_Sequence_Algorithm_for_Detecting_Plagiarism_and_Clones_in_Java_Source_Code_using_Abstract_Syntax_Tree","261261359_Detecting_source_code_similarity_using_low-level_languages","242487211_Running_karp-rabin_matching_and_greedy_string_tiling"]}