{"id":"284219514_Contextual_equivalences_in_configuration_structures_and_reversibility","abstract":"Contextual equivalence equate terms that have the same observable behaviour\nin any context. A standard contextual equivalence for CCS is the strong barbed\ncongruence. Configuration structures are a denotational semantics for processes\nin which one define equivalences that are more discriminating, i.e. that\ndistinguish the denotation of terms equated by barbed congruence. Hereditary\nhistory preserving bisimulation (HHPB) is such a relation. We define a strong\nback-and-forth barbed congruence on RCCS, a reversible variant of CCS. We show\nthat the relation induced by the back-and-forth congruence on configuration\nstructures is equivalent to HHPB, thus providing a contextual characterization\nof HHPB.","authors":["Cl√©ment Aubert","Ioana Cristescu"],"meta":["November 2015Journal of Logical and Algebraic Methods in Programming 86(1)","DOI:10.1016/j.jlamp.2016.08.004","SourcearXiv"],"references":["279260530_Reversible_Barbed_Congruence_on_Configuration_Structures","261157289_A_Compositional_Semantics_for_the_Reversible_p-Calculus","227087427_Petri_nets_event_structures_and_domains","223544686_Petri_Nets_Event_Structures_and_Domains_Part_I","222701650_Reversibility_and_Models_for_Concurrency","221443243_Weak_Bisimulation_and_Open_Maps","220898624_Event_Structure_Semantics_for_CCS_and_Related_Languages","220700934_Reversible_Communicating_Systems","220700801_Back_and_Forth_Bisimulations","220700366_Transactions_in_RCCS","220369323_Self-assembling_Trees","220248371_Bisimulation_from_Open_Maps","43611035_A_Non-Interleaving_Semantics_for_CCS_Based_on_Proved_Transitions","41394822_A_Hierarchy_of_Reverse_Bisimulations_on_Stable_Configuration_Structures","29618289_On_the_semantics_of_concurrency_Partial_orders_and_transition_systems","2765407_Models_For_Concurrency","303131457_Operational_and_denotational_semantics_for_the_reversible_pi-calculus","281603089_Higher-order_languages_dualities_and_bisimulation_enhancements","235712437_Evaluating_functions_as_processes","226465441_On_the_semantics_of_concurrency_Partial_orders_and_transition_systems","225576435_Refinement_of_actions_and_equivalence_notions_for_concurrent_systems","224001269_Communication_and_Concurrency","222783480_Reversing_Algebraic_Process_Calculi","222449825_On_reduction-based_process_semantics","222397673_Configuration_Structures_Event_Structures_and_Petri_Nets","222025370_Bisimulation_and_Action_Refinement","220976871_Equivalence_Notions_for_Concurrent_Systems_and_Refinement_of_Actions_Extended_Abstract","220700991_Reversing_Higher-Order_Pi","220404258_Origins_of_Bisimulation_and_Coinduction","220198233_On_the_Existence_of_Symmetric_Algorithms_to_Find_Leaders_in_Networks_of_Communicating_Sequential_Processes","51946440_A_Logic_for_True_Concurrency","2816587_Barbed_Bisimulation","2446921_Hereditary_History_Preserving_Bisimulations_or_What_is_the_Power_of_the_Future_Perfect_in_Program_Logics"]}