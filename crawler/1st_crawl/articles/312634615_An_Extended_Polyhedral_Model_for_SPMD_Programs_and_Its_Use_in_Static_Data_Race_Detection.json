{"id":"312634615_An_Extended_Polyhedral_Model_for_SPMD_Programs_and_Its_Use_in_Static_Data_Race_Detection","abstract":"Despite its age, SPMD (Single Program Multiple Data) parallelism continues to be one of the most popular parallel execution models in use today, as exemplified by OpenMP for multicore systems and CUDA and OpenCL for accelerator systems. The basic idea behind the SPMD model, which makes it different from task-parallel models, is that all logical processors (worker threads) execute the same program with sequential code executed redundantly and parallel code executed cooperatively. In this paper, we extend the polyhedral model to enable analysis of explicitly parallel SPMD programs and provide a new approach for static detection of data races in SPMD programs using the extended polyhedral model. We evaluate our approach using 34 OpenMP programs from the OmpSCR and PolyBench-ACC (PolyBench-ACC derives from the PolyBench benchmark suite and provides OpenMP, OpenACC, CUDA, OpenCL and HMPP implementations.) benchmark suites.","authors":["Prasanth Chatarasi","Jun Shirako","Martin Kong","Vivek Sarkar"],"meta":["January 2017Lecture Notes in Computer Science 10136:106-120","DOI:10.1007/978-3-319-52709-3_10","Conference: International Workshop on Languages and Compilers for Parallel Computing","Project: Extending Polyhedral Compilation Techniques for Explicitly Parallel Programs"],"references":["305258560_Fuzzy_Array_Dataflow_Analysis","262426403_Array_Dataflow_Analysis_for_Polyhedral_X10_Programs","261165162_Symbolic_Analysis_of_Concurrency_Errors_in_OpenMP_Programs","261094998_Auto-tuning_a_high-level_language_targeted_to_GPU_codes","258567117_Checking_Race_Freedom_of_Clocked_X10_Programs","254006514_Scalable_and_precise_dynamic_datarace_detection_for_structured_parallelism","233401207_Polyhedron_Model","228450803_Polyhedral_Extraction_Tool","221643460_May-happen-in-parallel_analysis_of_X10_programs","221496942_Concurrency_Analysis_for_Shared_Memory_Programs_with_Textually_Unaligned_Barriers","221496788_Concurrency_Analysis_for_Parallel_Programs_with_Textually_Aligned_Barriers","221392952_The_OpenMP_source_code_repository","220875763_ompVerify_Polyhedral_Analysis_for_the_OpenMP_Programmer","2574102_Compile-time_Support_for_Efficient_Data_Race_Detection_in_Shared-Memory_Parallel_Programs","305525154_ARCHER_Effectively_Spotting_Data_Races_in_Large_OpenMP_Applications","305258306_Compile-time_Support_for_Efficient_Data_Race_Detection_in_Shared-Memory_Parallel_Programs","300410767_Polyhedral_Optimizations_of_Explicitly_Parallel_Programs","293117426_Towards_Providing_Low-Overhead_Data_Race_Detection_for_Large_OpenMP_Applications","262367886_Symbolic_Consistency_Checking_of_OpenMP_Parallel_Programs","262213581_GPUVerify_a_verifier_for_GPU_kernels","250801297_Static_and_Dynamic_Data_Race_Detection","228654643_Software_Challenges_in_Extreme_Scale_Systems","221643753_Hybrid_dynamic_data_race_detection","220276842_A_single-program_multiple-data_computational_model_for_EPEXFORTRAN","3504583_A_compiler-assisted_approach_to_SPMD_execution"]}