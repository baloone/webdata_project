{"id":"348279719_Teaching_Strategies_in_Software_Engineering_Towards_Industry_Interview_Preparedness","abstract":"The Software Engineering (SE) curriculum in undergraduate computer science (CS) education is designed to train students in the process of software and systems development. Traditionally, topics such as software development methodologies, industry nomen-clatures, and solution analysis are delivered through lectures and group projects. We propose a novel approach in teaching SE that we call MACROVR: MAchine learning to select project team members; Cloud technologies required for project control, code versioning, and team communications; ROtational schedules in Agile/Scrum roles; an individual Video of the team project story board; and Rubrics for all presentations. Our teaching strategy with this approach utilizes the latest technologies currently employed in industry and corresponds to soft skills commonly assessed in interviews. The goal of our study is to measure if using the MACROVR approach contributes to preparedness for a computing job interview. Most often, this course is taken towards the end of a four-year CS degree program while students are job hunting or seeking an internship in the computing industry. We use an anonymous, fifteen question survey instrument sent to volunteers that indicated they are seeking a computing job and have successfully completed the SE course. The sample is comprised of three sections of the SE course using the MACROVR approach (135 students) and four sections that did not use all of the required strategies and technologies, which we call MACROVR-lite (184 students). Our two cohorts, MACROVR and MACROVR-lite, are each given the same survey questions. We analyze their Likert scale data responses using non-parametric methods. Our findings indicate the MACROVR approach better prepares students with the skills and highly valued qualities for success in computing industry interviews.","authors":["William Johnson","Rajshekhar Sunderraman","Anu G. Bourgeois"],"meta":["January 2021","DOI:10.1145/3442481.3442500","Conference: CSERC '20 - 9th Computer Science Education Research ConferenceAt: Leiden, Netherlands"],"references":["335354775_Perspectives_on_the_Gap_Between_the_Software_Industry_and_the_Software_Engineering_Education","334549544_Students_Perception_on_the_use_of_Project-Based_Learning_in_Software_Engineering_Education","334331231_Students'_and_Instructors'_Perceptions_of_Five_Different_Active_Learning_Strategies_Used_to_Teach_Software_Modeling","325837490_Improving_formation_of_student_teams_a_clustering_approach","338529227_Errors_and_Poor_Practices_of_Software_Engineering_Students_in_Using_Git","335362729_Incorporating_Real_Projects_Into_a_Software_Engineering_Undergraduate_Curriculum","331059966_Active_learning_experiences_in_engineering_education","330531362_How_Much_Authenticity_can_be_Achieved_in_Software_Engineering_Project_Based_Courses","326454485_Team_composition_in_software_engineering_project_courses","325350616_Pilot_experience_applying_an_active_learning_methodology_in_a_software_engineering_classroom"]}