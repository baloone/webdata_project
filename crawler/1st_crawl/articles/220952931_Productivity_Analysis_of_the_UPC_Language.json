{"id":"220952931_Productivity_Analysis_of_the_UPC_Language","abstract":"Summary form only given. Parallel programming paradigms, over the past decade, have focused on how to harness the computational power of contemporary parallel machines. Ease of use and code development productivity, has been a secondary goal. Recently, however, there has been a growing interest in understanding the code development productivity issues and their implications for the overall time-to-solution. Unified Parallel C (UPC) is a recently developed language which has been gaining rising attention. UPC holds the promise of leveraging the ease of use of the shared memory model and the performance benefit of locality exploitation. The performance potential for UPC has been extensively studied in recent research efforts. The aim of this study, however, is to examine the impact of UPC on programmer productivity. We propose several productivity metrics and consider a wide array of high performance applications. Further, we compare UPC to the most widely used parallel programming paradigm, MPI. The results show that UPC compares favorably with MPI in programmers productivity.","authors":["Fran√ßois Cantonnet","Yiyi Yao","Mohamed Zahran","Tarek A. El-Ghazawi"],"meta":["January 2004","DOI:10.1109/IPDPS.2004.1303318","SourceDBLP","Conference: 18th International Parallel and Distributed Processing Symposium (IPDPS 2004), CD-ROM / Abstracts Proceedings, 26-30 April 2004, Santa Fe, New Mexico, USA"],"references":["4054997_Parallel_programming_in_Split-C","242442873_1_History_of_Software_Measurement","239650274_A_Framework_of_Software_Measurement","228328538_A_Complexity_Measure","4222053_UPC_performance_and_potential_a_NPB_experimental_study","2911559_UPC_Language_Specification_v111","2534946_UPC_performance_and_potential_A_NPB_experimental_study","2422509_Software_Size_Measurement_A_Framework_for_Counting_Source_Statements","2390852_UPC_Language_Specifications_V10"]}