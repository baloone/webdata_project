{"id":"269577618_Answering_Conjunctive_Queries_with_Inequalities","abstract":"In this paper, we study the complexity of answering conjunctive queries (CQ)\nwith inequalities). In particular, we are interested in comparing the\ncomplexity of the query with and without inequalities. The main contribution of\nour work is a novel combinatorial technique that enables us to use any\nSelect-Project-Join query plan for a given CQ without inequalities in answering\nthe CQ with inequalities, with an additional factor in running time that only\ndepends on the query. The key idea is to define a new projection operator,\nwhich keeps a small representation (independent of the size of the database) of\nthe set of input tuples that map to each tuple in the output of the projection;\nthis representation is used to evaluate all the inequalities in the query.\nSecond, we generalize a result by Papadimitriou-Yannakakis [17] and give an\nalternative algorithm based on the color-coding technique [4] to evaluate a CQ\nwith inequalities by using an algorithm for the CQ without inequalities. Third,\nwe investigate the structure of the query graph, inequality graph, and the\naugmented query graph with inequalities, and show that even if the query and\nthe inequality graphs have bounded treewidth, the augmented graph not only can\nhave an unbounded treewidth but can also be NP-hard to evaluate. Further, we\nillustrate classes of queries and inequalities where the augmented graphs have\nunbounded treewidth, but the CQ with inequalities can be evaluated in\npoly-time. Finally, we give necessary properties and sufficient properties that\nallow a class of CQs to have poly-time combined complexity with respect to any\ninequality pattern. We also illustrate classes of queries where our\nquery-plan-based technique outperforms the alternative approaches discussed in\nthe paper.","authors":["Paraschos Koutris","Tova Milo","Sudeepa Roy","Dan Suciu"],"meta":["July 2017Theory of Computing Systems 61(1)","DOI:10.1007/s00224-016-9684-2","SourcearXiv"],"references":["319594330_Errata_for_Lightning_Fast_and_Space_Efficient_Inequality_Joins_PVLDB_813_2074--2085","280623203_Lightning_Fast_and_Space_Efficient_Inequality_Joins","262348273_Worst-case_Optimal_Join_Algorithms","321546594_Analysis_and_Design_of_Algorithms_in_Combinatorial_Optimization","321025240_Size_bounds_and_query_plans_for_relational_joins","314814535_Answering_queries_using_views_with_arithmetic_comparisons","303983439_Triejoin_A_simple_worst-case_optimal_join_algorithm","269200062_On_the_complexity_of_database_queries_extended_abstract","265461816_On_conjunctive_queries_containing_inequalities","257145110_On_some_coloring_problems_in_grids"]}