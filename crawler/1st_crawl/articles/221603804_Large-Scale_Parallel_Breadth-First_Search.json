{"id":"221603804_Large-Scale_Parallel_Breadth-First_Search","abstract":"Recently, best-first search algorithms have been introduced that store their nodes on disk, to avoid their inherent memory limitation. We introduce several improvements to the best of these, including parallel processing, to reduce their storage and time requirements. We also present a linear-time algorithm for bijectively mapping permutations to integers in lexicographic order. We use breadth-first searches of sliding-tile puzzles as testbeds. On the 3×5 Fourteen Puzzle, we reduce both the storage and time needed by a factor of 3.5 on two processors. We also performed the first complete breadth-first search of the 4×4 Fifteen Puzzle, with over 10 13 states. Copyright © 2005, American Association for Artificial Intelligence (www.aaai.org). All rights reserved.","authors":["Richard E. Korf","Peter Schultze"],"meta":["January 2005","SourceDBLP","Conference: Proceedings, The Twentieth National Conference on Artificial Intelligence and the Seventeenth Innovative Applications of Artificial Intelligence Conference, July 9-13, 2005, Pittsburgh, Pennsylvania, USA"],"references":["242916781_The_parallel_search_bench_ZRAM_and_its_applications","221562134_External_A","23595136_A_case_for_Redundant_Arrays_of_Inexpensive_Disks_RAID","222571499_Ranking_and_unranking_permutations_in_linear_time","221607008_Best-First_Frontier_Search_with_Delayed_Duplicate_Detection","221604372_Divide-and-Conquer_Frontier_Search_Applied_to_Optimal_Sequence_Alignment","221603185_Structured_Duplicate_Detection_in_External-Memory_Graph_Search","221024649_Elementary_Graph_Algorithms_in_External_Memory","220815843_Delayed_Duplicate_Detection_Extended_Abstract","220812751_A_Divide_and_Conquer_Bidirectional_Search_First_Results","3479333_A_Formal_Basis_for_the_Heuristic_Determination_of_Minimum_Cost_Paths","2822691_Using_Magnetic_Disk_instead_of_Main_Memory_in_the_Mur_phi_Verifier"]}