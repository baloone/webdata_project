{"id":"261464430_Automatic_Checking_of_Conformance_to_Requirement_Boilerplates_via_Text_Chunking_An_Industrial_Case_Study","abstract":"Context. Boilerplates have long been used in Requirements Engineering (RE) to increase the precision of natural language requirements and to avoid ambiguity problems caused by unrestricted natural language. When boilerplates are used, an important quality assurance task is to verify that the requirements indeed conform to the boilerplates. Objective. If done manually, checking conformance to boilerplates is laborious, presenting a particular challenge when the task has to be repeated multiple times in response to requirements changes. Our objective is to provide automation for checking conformance to boilerplates using a Natural Language Processing (NLP) technique, called Text Chunking, and to empirically validate the effectiveness of the automation. Method. We use an exploratory case study, conducted in an industrial setting, as the basis for our empirical investigation. Results. We present a generalizable and tool-supported approach for boilerplate conformance checking. We report on the application of our approach to the requirements document for a major software component in the satellite domain. We compare alternative text chunking solutions and argue about their effectiveness for boilerplate conformance checking. Conclusion. Our results indicate that: (1) text chunking provides a robust and accurate basis for checking conformance to boilerplates, and (2) the effectiveness of boilerplate conformance checking based on text chunking is not compromised even when the requirements glossary terms are unknown. This makes our work particularly relevant to practice, as many industrial requirements documents have incomplete glossaries.","authors":["Chetan Arora","Mehrdad Sabetzadeh","Lionel Briand","Frank Zimmer"],"meta":["October 2013","DOI:10.1109/ESEM.2013.13","Conference: Empirical Software Engineering and Measurement, 2013 ACM / IEEE International Symposium on"],"references":["242598296_Developing_Language_Processing_Components_with_GATE_Version_5_a_User_Guide","228861133_From_Contract_Drafting_to_Software_Specification_Linguistic_Sources_of_Ambiguity","225731398_A_natural_language_approach_for_Requirements_Engineering","225177725_Analysing_anaphoric_ambiguity_in_natural_language_requirements","224240011_DODT_Increasing_requirements_formalism_using_domain_ontologies_for_improved_embedded_systems_development","224193093_Ontology_and_Model_Alignment_as_a_Means_for_Requirements_Validation","220873814_Independence_and_Commitment_Assumptions_for_Rapid_Training_and_Execution_of_Rule-based_POS_Taggers","220403681_Reasoning_about_inconsistencies_in_natural_language_requirements","220277640_Hst_M_Guidelines_for_Conducting_and_Reporting_Case_Study_Research_in_Software_Engineering_Empirical_Software_Engineering_14_131-164","220092379_Listen_then_use_EARS","2473899_Text_Chunking_Using_Transformation-Based_Learning","2381816_Developing_Language_Processing_Components_with_GATE_a_User_Guide","310606656_Classification_and_regression_trees","289422378_Natural_Language_Processing_Techniques_in_Requirements_Engineering","247161871_Requirements_Engineering_Tools_Capabilities_Survey_and_Assessment","240310918_Classification_and_Regression_Trees_CART","235961479_Classification_and_Regression_Trees","229032267_A_systematic_review_of_transformation_approaches_between_user_requirements_and_analysis_models","220693866_Requirements_Engineering_Fundamentals_Principles_and_Techniques","220688577_Introduction_To_Modern_Information_Retrieval","220277638_Improving_automated_requirements_trace_retrieval_A_study_of_term-based_enhancement_methods","3854863_Lightweight_Validation_of_Natural_Language_Requirements_a_case_study"]}