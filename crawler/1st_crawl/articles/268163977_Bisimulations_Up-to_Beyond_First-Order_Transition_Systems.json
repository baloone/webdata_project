{"id":"268163977_Bisimulations_Up-to_Beyond_First-Order_Transition_Systems","abstract":"The bisimulation proof method can be enhanced by employing ‘bisimulations up-to’ techniques. A comprehensive theory of such enhancements has been developed for first-order (i.e., CCS-like) labelled transition systems (LTSs) and bisimilarity, based on the notion of compatible function for fixed-point theory.\n\nWe transport this theory onto languages whose bisimilarity and LTS go beyond those of first-order models. The approach consists in exhibiting fully abstract translations of the more sophisticated LTSs and bisimilarities onto the first-order ones. This allows us to reuse directly the large corpus of up-to techniques that are available on first-order LTSs. The only ingredient that has to be manually supplied is the compatibility of basic up-to techniques that are specific to the new languages. We investigate the method on the π-calculus, the λ-calculus, and a (call-by-value) λ-calculus with references.","authors":["Jean-Marie Madiot","Damien Pous","Davide Sangiorgi"],"meta":["September 2014","DOI:10.1007/978-3-662-44584-6_8","Conference: International Conference on Concurrency Theory"],"references":["220997280_Small_bisimulations_for_reasoning_about_higher-order_imperative_programs","220370562_From_Applicative_to_Environmental_Bisimulation","220367663_Bisimulation_in_Untyped_Lambda_Calculus","3811856_Towards_a_theory_of_bisimulation_for_local_names","2492932_The_Lazy_Lambda_Calculus","319541034_Polymorphic_pi-calculus_theory_and_implementation","311490305_Bisimulation_up-to_techniques_for_psi-calculi","303968960_A_Bisimulation_for_Type_Abstraction_and_Recursion","292449836_The_Polymorphic_Pi-Calculus_Theory_and_Implementation","266425464_The_p-Calculus_A_Theory_of_Mobile_Processes","265371850_Enhancements_of_the_bisimulation_proof_method","262257779_The_Power_of_Parameterization_in_Coinductive_Proof","257604838_First-Order_Reasoning_for_Higher-Order_Concurrency","244516316_Themes_in_Final_Semantics","240813346_Relational_Reasoning_about_Functions_and_Nondeterminism","234803172_Communication_and_Concurrency","227139184_An_efficiency_preorder_for_processes","226547745_An_efficiency_preorder_for_processes","224001269_Communication_and_Concurrency","223630020_A_bisimulation_for_dynamic_sealing","221602452_A_Bisimulation_Method_for_Cryptographic_Protocols","220690132_The_Pi-Calculus_-_a_theory_of_mobile_processes","220673109_A_Bisimulation_Method_for_Cryptographic_Protocols","220430673_Behavioral_theory_for_Mobile_Ambients","220404737_Environmental_Bisimulations_for_Higher-Order_Languages","213886036_A_bisimulation_for_type_abstraction_and_recursion","4263860_Environmental_Bisimulations_for_Higher-Order_Languages","2833859_A_Full_Formalisation_of_p-Calculus_Theory_in_the_Calculus_of_Constructions","2816767_On_the_Bisimulation_Proof_Method","2493112_Relational_Reasoning_about_Contexts","2245589_The_Polymorphic_Pi-calculus_Theory_and_Implementation"]}