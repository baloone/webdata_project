{"id":"328484456_Smart_Contracts_A_Killer_Application_for_Deductive_Source_Code_Verification_Essays_Dedicated_to_Arnd_Poetzsch-Heffter_on_the_Occasion_of_his_60th_Birthday","abstract":"Smart contracts are agreements between parties which, not only describe the ideal behaviour expected from those parties, but also automates such ideal performance. Blockchain, and similar distributed ledger technologies have enabled the realisation of smart contracts without the need of trusted parties—typically using computer programs which have access to digital assets to describe smart contracts, storing and executing them in a transparent and immutable manner on a blockchain. Many approaches have adopted fully fledged programming languages to describe smart contract, thus inheriting from software the challenge of correctness and verification—just as in software systems, in smart contracts mistakes happen easily, leading to unintended and undesirable behaviour. Such wrong behaviour may show accidentally, but as the contract code is public, malicious users can seek for vulnerabilities to exploit, causing severe damage. This is witnessed by the increasing number of real world incidents, many leading to huge financial losses. As in critical software, the formal verification of smart contracts is thus paramount. In this paper we argue for the use of deductive software verification as a way to increase confidence in the correctness of smart contracts. We describe challenges and opportunities, and a concrete research program, for deductive source code level verification, focussing on the most widely used smart contract platform and language, Ethereum and Solidity.","authors":["Wolfgang Ahrendt","Gordon J. Pace","Gerardo Schneider"],"meta":["January 2018","DOI:10.1007/978-3-319-98047-8_1","In book: Principled Software Development (pp.1-18)"],"references":["327515721_Runtime_Verification_of_Ethereum_Smart_Contracts","324512533_A_Semantic_Framework_for_the_Security_Analysis_of_Ethereum_Smart_Contracts","324175498_Formal_Verification_of_Smart_Contracts_Based_on_Users_and_Blockchain_Behaviors_Models","323558504_On_legal_contracts_imperative_and_declarative_smart_contracts_and_blockchain_systems","319164992_Runtime_Verification_for_Business_Processes_Utilizing_the_Bitcoin_Blockchain","311573669_Optimized_Execution_of_Business_Processes_on_Blockchain","303996559_Untrusted_Business_Process_Monitoring_and_Execution_Using_Blockchain","303679677_Evaluation_of_Logic-Based_Smart_Contracts_for_Blockchain_Systems","300646623_OpenJDK's_JavautilsCollectionsort_Is_Broken_The_Good_the_Bad_and_the_Worst_Case","265296462_A_Lesson_on_Proof_of_Programs_with_Frama-C_Invited_Tutorial_Paper","225727410_Boogie_A_Modular_Reusable_Verifier_for_Object-Oriented_Programs","345396329_Finding_The_Greedy_Prodigal_and_Suicidal_Contracts_at_Scale","328852422_Smart_Contracts_and_Opportunities_for_Formal_Methods","328590751_Smart_Contracts_and_Opportunities_for_Formal_Methods_8th_International_Symposium_ISoLA_2018_Limassol_Cyprus_November_5-9_2018_Proceedings_Part_IV","326948399_KEVM_A_Complete_Formal_Semantics_of_the_Ethereum_Virtual_Machine","325208438_Formal_Modeling_and_Verification_of_Smart_Contracts","323392357_A_Semantic_Framework_for_the_Security_Analysis_of_Ethereum_smart_contracts","323257355_Finding_The_Greedy_Prodigal_and_Suicidal_Contracts_at_Scale","321501767_Data_Privacy_Management_Cryptocurrencies_and_Blockchain_Technology_ESORICS_2017_International_Workshops_DPM_2017_and_CBT_2017_Oslo_Norway_September_14-15_2017_Proceedings","321147071_Defining_the_Ethereum_Virtual_Machine_for_Interactive_Theorem_Provers","315856245_A_Survey_of_Attacks_on_Ethereum_Smart_Contracts_SoK","313857769_A_Concurrent_Perspective_on_Smart_Contracts","311788080_Verifying_Java_Card_Programs","311788079_Formal_Specification_with_the_Java_Modeling_Language","311786683_Proof_Search_with_Taclets","311786677_Dynamic_Logic_for_Java","309448109_Formal_Verification_of_Smart_Contracts_Short_Paper","309444724_Making_Smart_Contracts_Smarter","290645743_The_KeY_Platform_for_Verification_and_Analysis_of_Java_Programs","290478054_KeY-ABS_A_Deductive_Verification_Tool_for_the_Concurrent_Modelling_Language_ABS","228640975_Bitcoin_A_Peer-to-Peer_Electronic_Cash_System","222552874_A_Brief_Account_of_Runtime_Verification","221047567_Boogie_A_Modular_Reusable_Verifier_for_Object-Oriented_Programs"]}