{"id":"316898433_Recaf_Java_dialects_as_libraries","abstract":"Mainstream programming languages like Java have limited support for language extensibility. Without mechanisms for syntactic abstraction, new programming styles can only be embedded in the form of libraries, limiting expressiveness. In this paper, we present Recaf, a lightweight tool for creating Java dialects; effectively extending Java with new language constructs and user defined semantics. The Recaf compiler generically transforms designated method bodies to code that is parameterized by a semantic factory (Object Algebra), defined in plain Java. The implementation of such a factory defines the desired runtime semantics. We applied our design to produce several examples from a diverse set of programming styles and two case studies: we define i) extensions for generators, asynchronous computations and asynchronous streams and ii) a Domain-Specific Language (DSL) for Parsing Expression Grammars (PEGs), in a few lines of code.","authors":["Aggelos Biboudis","Pablo Inostroza","Tijs van der Storm"],"meta":["October 2016ACM SIGPLAN Notices 52(3):2-13","DOI:10.1145/3093335.2993239"],"references":["262364569_Pause_'n'_play_formalizing_asynchronous_C","262276848_Feature-Oriented_Programming_With_Object_Algebras","262185072_Scala-Virtualized_Linguistic_Reuse_for_Deep_Embeddings_Preprint","262159833_Extensibility_for_the_masses_practical_extensibility_with_object_algebras","228556492_ASM_A_code_manipulation_tool_to_implement_adaptable_systems","221241484_Packrat_parsing_Simple_powerful_lazy_linear_time_-_Functional_pearl","220997740_Parsing_Expression_Grammars_A_Recognition-Based_Syntactic_Foundation","220703689_RASCAL_A_Domain_Specific_Language_for_Source_Code_Analysis_and_Manipulation","220676560_Finally_tagless_partially_evaluated_Tagless_staged_interpreters_for_simpler_typed_languages","345723630_Spicing_Up_Dart_with_Side_Effects_A_set_of_extensions_to_the_Dart_programming_language_designed_to_support_asynchrony_and_generator_functions","330265230_The_Art_of_the_Metaobject_Protocol","327549658_Coffee_Recent_Developments","309459105_Streams_a_la_carte_Extensible_Pipelines_with_Object_Algebras_Artifact","301452779_Modular_interpreters_for_the_masses_implicit_context_propagation_using_object_algebras","291585978_The_F_Computation_Expression_Zoo","290105010_SugarJ","283662110_Spicing_up_dart_with_side_effects","281334201_Evaluating_And_Comparing_Language_Workbenches_Existing_Results_And_Benchmarks_For_The_Future","266249757_The_next_700_programming_languages","247926657_Reactive_extensions_Rx_curing_your_asynchronous_programming_blues","245493962_The_Art_of_the_Metaobject_Protocol","242438352_The_art_of_the_metaobject_protocol","238715528_How_to_replace_failure_with_a_list_of_successes","234830547_Higher-order_abstract_syntax","224773145_Design_Patterns_Elements_of_Reusable_Object-Oriented_Software","221305616_How_to_Replace_Failure_by_a_List_of_Successes_A_method_for_exception_handling_backtracking_and_pattern_matching_in_lazy_functional_languages","221213723_LINQ_reconciling_object_relations_and_XML_in_the_NET_framework","220752181_Languages_as_Libraries","213879049_The_expression_problem","2838027_A_Metaobject_Protocol_for_C","2833352_Polyglot_An_Extensible_Compiler_Framework_for_Java","2512332_Javassist_-_A_Reflection-based_Programming_Wizard_for_Java"]}