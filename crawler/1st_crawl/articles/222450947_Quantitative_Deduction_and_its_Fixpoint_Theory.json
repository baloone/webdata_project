{"id":"222450947_Quantitative_Deduction_and_its_Fixpoint_Theory","abstract":"Logic programming provides a model for rule-based reasoning in expert systems. The advantage of this formal model is that it makes available many results from the semantics and proof theory of first-ordet predicate logic. A disadvantage is that in expert systems one often wants to use, instead of the usual two truth values, an entire continuum of “uncertainties” in between. That is, instead of the usual “qualitative” deduction, a form of “quantitative” deduction is required. We present an approach to generalizing the Tarskian semantics of Horn clause rules to justify a form of quantitative deduction. Each clause receives a numerical attenuation factor. Herbrand interpretations, which are subsets of the Herbrand base, are generalized to subsets which are fuzzy in the sense of Zadeh. We show that as result the fixpoint method in the semantics of Horn clause rules can be developed in much the same way for the quantitative case. As for proof theory, the interesting phenomenon is that a proof should be viewed as a two-person game. The value of the game turns out to be the truth value of the atomic formula to be proved, evaluated in the minimal fixpoint of the rule set. The analog of the PROLOG interpreter for quantitative deduction becomes a search of the game tree ( = proof tree) using the alpha-beta heuristic well known in game theory.","authors":["Maarten H. van Emden"],"meta":["April 1986The Journal of Logic Programming 3(1):37-53","DOI:10.1016/0743-1066(86)90003-8","SourceCiteSeer"],"references":["234779982_The_Semantics_of_Predicate_Logic_as_a_Programming_Language","221278188_Negation_as_Failure","220431697_The_Semantics_of_Predicate_Logic_as_a_Programming_Language","220431483_Contributions_to_the_Theory_of_Logic_Programming","265371940_Artificial_Intelligence_2nd_ed","239592298_Foundation_of_Logic_Programming","222439366_Fuzzy_Sets","220813517_Logic_Programs_With_Uncertainties_A_Tool_for_Implementing_Rule-Based_Systems","44490490_Problem-Solving_Methods_in_Artifical_Intelligence"]}