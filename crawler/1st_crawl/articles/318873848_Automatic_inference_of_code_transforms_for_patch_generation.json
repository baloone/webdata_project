{"id":"318873848_Automatic_inference_of_code_transforms_for_patch_generation","abstract":"We present a new system, Genesis, that processes human patches to automatically infer code transforms for automatic patch generation. We present results that characterize the effectiveness of the Genesis inference algorithms and the complete Genesis patch generation system working with real-world patches and defects collected from 372 Java projects. To the best of our knowledge, Genesis is the first system to automatically infer patch generation transforms or candidate patch search spaces from previous successful patches.","authors":["Fan Long","Peter Amidon","Martin Rinard"],"meta":["August 2017","DOI:10.1145/3106237.3106253","Conference: the 2017 11th Joint Meeting"],"references":["307540812_Learning_Syntactic_Program_Transformations_from_Examples","307307206_Precise_Condition_Synthesis_for_Program_Repair","299487436_History_Driven_Program_Repair","279830550_Spoon_A_Library_for_Implementing_Analyses_and_Transformations_of_Java_Source_Code","277334296_Automatic_Repair_of_Real_Bugs_An_Experience_Report_on_the_Defects4J_Dataset","264673563_A_Critical_Review_of_Automatic_Patch_Generation_Learned_from_Human-Written_Patches_Essay_on_the_Problem_Statement_and_the_Evaluation_of_Automatic_Software_Repair","261598130_Automatic_Repair_of_Buggy_If_Conditions_and_Missing_Preconditions_with_SMT","260424732_The_Strength_of_Random_Search_on_Automated_Program_Repair","241632971_Automated_repair_of_HTML_generation_errors_in_PHP_applications_using_string_constraint_solving","220910210_Automatically_Patching_Errors_in_Deployed_Software","220752039_Systematic_Editing_Generating_Program_Transformations_from_an_Example","318870600_CodeCarbonCopy","311488076_Predicting_Program_Properties_from_Big_Code","311474159_Systematic_editing_generating_program_transformations_from_an_example","308804703_Does_Automated_Refactoring_Obviate_Systematic_Editing","305252944_Qlose_Program_Repair_with_Quantitative_Objectives","305046499_Automatic_Inference_of_Code_Transforms_and_Search_Spaces_for_Automatic_Patch_Generation_Systems","303284530_Automatic_patch_generation_by_learning_correct_code","303099518_An_Analysis_of_the_Search_Spaces_for_Generate_and_Validate_Patch_Generation_Systems","303099279_Angelix_Scalable_Multiline_Program_Patch_Synthesis_via_Symbolic_Analysis","303011915_Learning_programs_from_noisy_data","301274054_Automatic_patch_generation_by_learning_correct_code","300205053_Automated_Software_Transplantation","299909645_Staged_program_repair_with_condition_synthesis","296659225_Repair_Abstractions_for_More_Efficient_Data_Structure_Repair","285624614_RoleCast","279835627_Automatic_Error_Elimination_by_Multi-Application_Code_Transfer","279835496_An_Analysis_of_Patch_Plausibility_and_Correctness_for_Generate-And-Validate_Patch_Generation_Systems","276464587_Predicting_Program_Properties_from_Big_Code","266657552_Code_Completion_with_Statistical_Language_Models","261276659_Leveraging_program_equivalence_for_adaptive_program_repair_Models_and_first_results","261230128_Automatic_patch_generation_learned_from_human-written_patches","261192671_Lase_Locating_and_applying_systematic_edits_by_learning_from_examples","261166224_SemFix_Program_repair_via_semantic_analysis","254041670_A_systematic_study_of_automated_program_repair_Fixing_55_out_of_105_bugs_for_8_each","234801914_Enhancing_server_availability_and_security_through_failure-oblivious_computing","228863627_Inference_and_enforcement_of_data_structure_consistency_specifications","221553687_Angelic_debugging","221553516_Automatically_finding_patches_using_genetic_programming","221320442_RoleCast_Finding_Missing_Security_Checks_When_You_Do_Not_Know_What_Checks_Are","221105631_Repairing_Structurally_Complex_Data","220854671_Inference_and_enforcement_of_data_structure_consistency_specifications","3189704_Goal-Directed_Reasoning_for_Specification-Based_Data_Structure_Repair"]}