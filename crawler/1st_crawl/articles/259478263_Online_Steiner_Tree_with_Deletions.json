{"id":"259478263_Online_Steiner_Tree_with_Deletions","abstract":"In the online Steiner tree problem, the input is a set of vertices that\nappear one-by-one, and we have to maintain a Steiner tree on the current set of\nvertices. The cost of the tree is the total length of edges in the tree, and we\nwant this cost to be close to the cost of the optimal Steiner tree at all\npoints in time. If we are allowed to only add edges, a tight bound of\n$\\Theta(\\log n)$ on the competitiveness is known. Recently it was shown that if\nwe can add one new edge and make one edge swap upon every vertex arrival, we\ncan maintain a constant-competitive tree online.\nBut what if the set of vertices sees both additions and deletions? Again, we\nwould like to obtain a low-cost Steiner tree with as few edge changes as\npossible. The original paper of Imase and Waxman had also considered this\nmodel, and it gave a greedy algorithm that maintained a constant-competitive\ntree online, and made at most $O(n^{3/2})$ edge changes for the first $n$\nrequests. In this paper give the following two results.\nOur first result is an online algorithm that maintains a Steiner tree only\nunder deletions: we start off with a set of vertices, and at each time one of\nthe vertices is removed from this set: our Steiner tree no longer has to span\nthis vertex. We give an algorithm that changes only a constant number of edges\nupon each request, and maintains a constant-competitive tree at all times. Our\nalgorithm uses the primal-dual framework and a global charging argument to\ncarefully make these constant number of changes.\nWe then study the natural greedy algorithm proposed by Imase and Waxman that\nmaintains a constant-competitive Steiner tree in the fully-dynamic model (where\neach request either adds or deletes a vertex). Our second result shows that\nthis algorithm makes only a constant number of changes per request in an\namortized sense.","authors":["Anupam Gupta","Amit Kumar"],"meta":["December 2013","DOI:10.1137/1.9781611973402.34","SourcearXiv"],"references":["220779582_A_group-strategyproof_mechanism_for_Steiner_forests","220618223_A_Group-Strategyproof_Cost_Sharing_Mechanism_for_the_Steiner_Forest_Game","249315987_The_Power_of_Deferral_Maintaining_a_Constant-Competitive_Steiner_Tree_Online","247009847_On-line_algorithms_for_Steiner_tree_problems","220533709_Dynamic_Steiner_Tree_Problem","220365644_The_Design_of_Competitive_Online_Algorithms_via_a_Primal-Dual_Approach","2721659_A_General_Approximation_Technique_For_Constrained_Forest_Problems","2642634_When_Trees_Collide_An_Approximation_Algorithm_for_the_Generalized_Steiner_Problem_on_Networks","2434388_On-line_Generalized_Steiner_Problem"]}