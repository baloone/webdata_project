{"id":"284119593_Modular_Language_Implementation_In_Rascal_-_Experience_Report","abstract":"All software evolves, and programming languages and programming language tools are no exception. And just like in ordinary software construction, modular implementations can help ease the process of changing a language implementation and its dependent tools. However, the syntactic and semantic dependencies between language features make this a challenging problem. In this paper we detail how programming languages can be implemented in a modular fashion using the Rascal meta-programming language. Rascal supports extensible definition of concrete syntax, abstract syntax and operations on concrete and abstract syntax trees like matching, traversal and transformation. As a result, new language features can be added without having to change existing code. As a case study, we detail our solution of the LDTA'11 Tool Challenge: a modular implementation of Oberon-0, a relatively simple imperative programming language. The approach we sketch can be applied equally well to the implementation of domain-specific languages.","authors":["Bas Basten","Jeroen Van den Bos","Mark Hills","Paul Klint"],"meta":["November 2015Science of Computer Programming 114","DOI:10.1016/j.scico.2015.11.003"],"references":["262296294_Parse_Forest_Diagnostics_with_Dr_Ambiguity","262204432_Integrating_Attribute_Grammar_and_Functional_Programming_Language_Features","258132408_The_State_Of_The_Art_In_Language_Workbenches_Conclusions_From_The_Language_Workbench_Challenge","237107559_Towards_a_Mathematical_Semantics_for_Computer_Languages","228988592_Language_and_IDE_Modularization_Extension_and_Composition_with_MPS","228469508_A_pure_embedding_of_attribute_grammars","224182596_AMBIDEXTER_Practical_ambiguity_detection_tool_demonstration","221569548_Using_The_Meta-Environment_for_Maintenance_and_Renovation","221321535_The_Spoofax_Language_Workbench_Rules_for_Declarative_Specification_of_Languages_and_IDEs","221302808_Faster_Scannerless_GLR_Parsing","221278539_Ruler_Programming_Type_Rules","221202314_Modular_Name_Analysis_for_Java_Using_JastAdd","221108662_Context-aware_scanning_for_parsing_extensible_languages","221014921_MetaLexer_A_modular_lexical_specification_language","220976580_Theory_and_Practice_of_Action_Semantics","220819004_Attribute_grammars_in_the_functional_style","220752076_Verifiable_Composition_of_Deterministic_Grammars","220703689_RASCAL_A_Domain_Specific_Language_for_Source_Code_Analysis_and_Manipulation","220404320_Compiling_language_definitions_The_ASFSDF_compiler","220403794_Term_Rewriting_with_Traversal_Functions","220403674_A_Meta-Environment_for_Generating_Programming_Environments","220368128_GLL_parsing","220197490_Modularity_and_Reusability_in_Attribute_Grammars","220178482_The_syntax_definition_formalism_SDF","213882271_Syntax_Definition_for_Language_Prototyping","47757666_AmbiDexter_Practical_Ambiguity_Detection_Tool_Demonstration","47648937_Language_Boxes","2808232_Implicit_Parameters_Dynamic_Scoping_with_Static_Types","2776938_Generation_of_Formatters_for_Context-Free_Languages","319394405_Toward_a_Mathematical_Semantics_for_Computer_Languages","319391010_Notions_of_computation_and_monads","271398224_TXL_A_rapid_prototyping_system_for_programming_language_dialects","268157154_Semantics_of_programming_languages_Using_ASF_plus_SDF","262165188_Towards_a_One-Stop-Shop_for_Analysis_Transformation_and_Visualization_of_Software","261563448_Modular_grammar_specification","225204149_Semantics_of_context-free_languages_Math_Syst_Theory_2_95","223713052_Silver_An_extensible_attribute_grammar_system","222394603_Modular_Structural_Operational_Semantics","221335614_A_Meta-Environment_for_Generating_Programming_Environments","221321430_Language_extension_and_composition_with_language_workbenches","221202327_Lightweight_Language_Processing_in_Kiama","220752181_Languages_as_Libraries","220751787_Better_extensibility_through_modular_syntax","220544146_Correction_Semantics_of_Context-Free_Languages","220543592_Semantics_of_Context-Free_Languages","213877689_The_JastAdd_system_---_modular_extensible_compiler_construction","46696896_Program_Transformation_with_StrategoXT","2857010_Forwarding_in_Attribute_Grammars_for_Modular","2792948_Lambda_Lifting_Transforming_Programs_to_Recursive_Equations","2661383_Monad_Transformers_and_Modular_Interpreters","2545261_Forwarding_in_Attribute_Grammars_for_Modular_Language_Design","2645158_Parser_Generation_for_Interactive_Environments","2593171_Notions_of_Computation_and_Monads","2577830_Modular_Domain_Specific_Languages_and_Tools"]}