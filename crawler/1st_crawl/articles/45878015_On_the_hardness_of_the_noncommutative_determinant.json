{"id":"45878015_On_the_hardness_of_the_noncommutative_determinant","abstract":"In this paper, we study the computational complexity of computing the noncommutative determinant. We first consider the arithmetic circuit complexity of computing the noncommutative determinant polynomial. Then, more generally, we also examine the complexity of computing the determinant (as a function) over noncommutative domains. Our hardness results are summarized below: We show that if the noncommutative determinant polynomial has small noncommutative arithmetic circuits then so does the noncommutative permanent. Consequently, the commutative permanent polynomial has small commutative arithmetic circuits.\nFor any field F\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$${\\mathbb{F}}$$\\end{document} we show that computing the n×n\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$${n\\times n}$$\\end{document} permanent over F\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$${\\mathbb{F}}$$\\end{document} is polynomial-time reducible to computing the 2n×2n\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$${2n\\times 2n}$$\\end{document} (noncommutative) determinant whose entries are O(n2)×O(n2)\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$${O(n^2)\\times O(n^2)}$$\\end{document} matrices over the field F\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$${\\mathbb{F}}$$\\end{document}.\nWe also derive as a consequence that computing the n×n\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$${n\\times n}$$\\end{document} permanent over nonnegative rationals is polynomial-time reducible to computing the noncommutative determinant over Clifford algebras of nO(1)\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$${n^{O(1)}}$$\\end{document} dimension.\nOur techniques are elementary and use primarily the notion of the Hadamard Product of noncommutative polynomials.","authors":["Vikraman Arvind","Srikanth Srinivasan"],"meta":["March 2018computational complexity 27(1)","DOI:10.1007/s00037-016-0148-5","SourcearXiv"],"references":["226528876_Quaternionic_Determinants","226488690_Deterministic_polynomial_identity_testing_in_non-commutative_models","268196953_Noncommutative_Determinant_is_Hard_A_Simple_Proof_Using_an_Extension_of_Barrington's_Theorem","248747661_Introduction_to_quadratic_forms_over_elds","234828972_Lower_bounds_for_non-commutative_computation","223537844_Gap-Definable_Counting_Classes","222808307_The_Complexity_of_Computing_the_Permanent","222451162_Counting_classes_Thresholds_parity_mods_and_fewness","222450604_Bounded-width_polynomial-size_branching_programs_recognize_exactly_those_languages_in_NC1","222121428_Clifford_algebras_and_approximating_the_permanent","221590846_Bounded-Width_Polynomial-Size_Branching_Programs_Recognize_Exactly_Those_Languages_in_NC","221583470_Arithmetic_Circuits_and_the_Hadamard_Product_of_Polynomials","220617199_A_Monte-Carlo_Algorithm_for_Estimating_the_Permanent","221590219_Lower_Bounds_for_Non-Commutative_Computation_Extended_Abstract","220617508_Algebras_with_Polynomial_Identities_and_Computing_the_Determinant"]}