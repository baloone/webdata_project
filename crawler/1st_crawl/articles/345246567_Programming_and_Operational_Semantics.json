{"id":"345246567_Programming_and_Operational_Semantics","abstract":"Programming is the act of writing meaningful instructions for the computer to perform specific tasks. Different languages can be used to write programs but each language has its syntax and semantics. The syntax helps to understand the grammar of the language while the semantics deals with the meaning of grammatically correct programs. Formal semantics is a tool in computer science that demonstrates how to use semantics for validating prototype implementations of programming languages, for verifying analyses used in more advanced implementations of programming languages and for verifying useful program properties including information about execution time. Operational semantics (OS) is a branch of formal semantics that deals with how the effect of a computation is produced. Hence, this article demonstrates the application of operational semantics by showing how a valid program is being interpreted as sequences of computational steps. The understanding of this concept will make it easy for any programmer to understand the execution of his/her program thereby making programming an interesting tool to the learners. Keywords: Programming, Structural Operational Semantics, Natural Semantics, Formal Semantics","authors":["Ibiyinka Temilola Ayorinde"],"meta":["January 2020","DOI:10.15640/jcsit.v8n1a3"],"references":["234791551_Software_Development_A_Rigorous_Approach","220694535_Semantics_of_programming_languages_-_an_elementary_introduction_using_structural_operational_semantics","220691984_Formal_syntax_and_semantics_of_programming_languages_A_laboratory_based_approach"]}