{"id":"352982052_A_Framework_for_Proof-carrying_Logical_Transformations","authors":["Quentin Garchery"],"meta":["July 2021","DOI:10.4204/EPTCS.336.2"],"references":["280047357_Checking_Zenon_Modulo_Proofs_in_Dedukti","278763240_Checking_foundational_proof_certificates_for_first-order_logic","272030442_Let's_Verify_This_with_Why3","221278434_A_Computational_Approach_to_Pocklington_Certificates_in_Type_Theory","221255118_Expressing_Polymorphic_Types_in_a_Many-Sorted_Language","315341494_The_Essence_of_Higher-Order_Concurrent_Separation_Logic","307993109_Automated_proof-producing_abstraction_of_C_code","303011829_Dependent_types_and_multi-monadic_effects_in_F","240491663_Preuve_de_programmes_imperatifs_en_theorie_des_types","222459696_A_Theory_of_Type_Polymorphism_in_Programming","221234915_Fast_LCF-Style_Proof_Reconstruction_for_Z3","220896176_A_Tactic_Language_for_the_System_Coq","220818752_A_Modular_Integration_of_SATSMT_Solvers_to_Coq_through_Proof_Witnesses","220727323_Embedding_Pure_Type_Systems_in_the_Lambda-Pi-Calculus_Modulo","220267944_The_Calculus_of_Constructions_State_of_the_Art"]}