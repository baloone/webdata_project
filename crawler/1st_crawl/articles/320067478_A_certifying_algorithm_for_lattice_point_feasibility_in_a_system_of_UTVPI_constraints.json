{"id":"320067478_A_certifying_algorithm_for_lattice_point_feasibility_in_a_system_of_UTVPI_constraints","abstract":"This paper is concerned with the design and analysis of a certifying algorithm for checking the lattice point feasibility of a class of constraints called unit two variable per inequality (UTVPI) constraints. A UTVPI constraint has at most two non-zero variables and the coefficients of the non-zero variables belong to the set \\(\\{+\\,1,\\ -\\,1\\}\\). These constraints occur in a number of application domains, including but not limited to program verification, abstract interpretation, and operations research. As per the literature, the fastest known model generating algorithm for checking lattice point feasibility in UTVPI constraint systems runs in \\(O(m \\cdot n+n^{2} \\cdot \\log n)\\) time and \\(O(n^{2})\\) space, where m represents the number of constraints and n represents the number of variables in the constraint system (Lahiri and Musuvathi, in: Proceedings of the 5th international workshop on the frontiers of combining systems (FroCos), lecture notes in computer science, vol 3717, pp 168â€“183, 2005). In this paper, we design and analyze a new algorithm for checking the lattice point feasibility of UTVPI constraints. The presented algorithm runs in \\(O(m \\cdot n)\\) time and \\(O(m+n)\\) space. Additionally it is certifying in that it produces a satisfying assignment in the event that it is presented with feasible instances and refutations in the event that it is presented with infeasible instances. The importance of providing certificates cannot be overemphasized, especially in mission-critical applications. Our approaches for the lattice point feasibility problem in UTVPI constraint systems is fundamentally different from existing approaches for this problem; indeed, it is based on new insights into combining well-known inference rules for these systems.","authors":["K. Subramani","Piotr Wojciechowski"],"meta":["February 2018Journal of Combinatorial Optimization 35(3)","DOI:10.1007/s10878-017-0176-3"],"references":["221403307_DPLLT_with_Exhaustive_Theory_Propagation_and_Its_Application_to_Difference_Logic","301718124_A_Combinatorial_Certifying_Algorithm_for_Linear_Feasibility_in_UTVPI_Constraints","266711003_Introduction_to_algorithms_3rd_revised_and_extended_ed","265953356_Introduction_to_algorithms_Translation_of_the_2nd_English_ed","264951753_Introduction_to_algorithms_4th_revised_and_corrected_ed_Algorithmen_-_eine_Einfuhrung","258819341_Efficient_Generation_of_Correctness_Certificates_for_the_Abstract_Domain_of_Polyhedra","247442902_Introduction_To_Algorithms","225987351_Shortest_Paths_Algorithms_Theory_and_Experimental_Evaluation","225573236_The_LEDA_Platform_for_Combinatorial_and_Geometric_Computing","222805511_The_intractability_of_Resolution","220997507_Abstract_Interpretation_A_Unified_Lattice_Model_for_Static_Analysis_of_Programs_by_Construction_or_Approximation_of_Fixpoints","220970637_Tightened_Transitive_Closure_of_Integer_Addition_Constraints","221316975_Simple_and_Fast_Algorithms_for_Linear_and_Integer_Programs_with_Two_Variables_Per_Inequality","221255184_An_Efficient_Decision_Procedure_for_UTVPI_Constraints","220896205_Abstract_DPLL_and_Abstract_DPLL_Modulo_Theories"]}