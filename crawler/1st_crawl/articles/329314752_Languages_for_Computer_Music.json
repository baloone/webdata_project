{"id":"329314752_Languages_for_Computer_Music","abstract":"Specialized languages for computer music have long been an important area of research in this community. Computer music languages have enabled composers who are not software engineers to nevertheless use computers effectively. While powerful general-purpose programming languages can be used for music tasks, experience has shown that time plays a special role in music computation, and languages that embrace musical time are especially expressive for many musical tasks. Time is expressed in procedural languages through schedulers and abstractions of beats, duration and tempo. Functional languages have been extended with temporal semantics, and object-oriented languages are often used to model stream-based computation of audio. This article considers models of computation that are especially important for music programming, how these models are supported in programming languages, and how this leads to expressive and efficient programs. Concrete examples are drawn from some of the most widely used music programming languages.","authors":["Roger B Dannenberg"],"meta":["November 2018Frontiers in Digital Humanities 5:26","DOI:10.3389/fdigh.2018.00026"],"references":["290159716_Formal_semantics_for_music_notation_control_flow","289495366_ChucK_A_Strongly_Timed_Computer_Music_Language","289495172_Kronos_A_Declarative_Metaprogramming_Language_for_Digital_Signal_Processing","265665893_FAUST_an_Efficient_Functional_Approach_to_DSP_Programming","317846962_The_Technology_of_Computer_Music","310542626_Csound","298816276_ANIMAL-A_Rapid_Prototyping_Environment_for_Computer_Music_Systems","275849206_Abstract_Time_Warping_of_Compound_Events_and_Signals","274140679_Designing_Musical_Instruments_for_the_Browser","255708460_Computer_Assisted_Composition_at_Ircam_patchWork_OpenMusic"]}