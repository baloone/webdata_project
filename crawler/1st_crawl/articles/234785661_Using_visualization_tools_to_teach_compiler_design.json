{"id":"234785661_Using_visualization_tools_to_teach_compiler_design","abstract":"A project-based compiler course presents several challenges to the student-implementor. In addition to the “book learning about” various compiler topics, a student must assimilate a large amount of information about the compiler's implementation. Furthermore he or she must be able understand each source-program construct at a number of different representation levels. Finally, the student must apply that knowledge during implementation and debugging of a compiler.\nThis paper describes a pair of packages that employ Java's graphical capabilities so that a program may be visualized at various stages of the compilation process. We argue that these tools are effective in helping students understand the transformation process from source program to machine code. We summarize our experience in using these tools in the context of a project-based compiler course. We also discuss other features of Java that make it well-suited for a student compiler project.","authors":["Steven R. Vegdahl"],"meta":["January 2000Journal of Computing Sciences in Colleges 16(2):72-83"],"references":["245823349_CUP_parser_generator_for_Java"]}