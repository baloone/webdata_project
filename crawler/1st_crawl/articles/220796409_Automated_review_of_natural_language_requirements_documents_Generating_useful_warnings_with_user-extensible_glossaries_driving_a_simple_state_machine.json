{"id":"220796409_Automated_review_of_natural_language_requirements_documents_Generating_useful_warnings_with_user-extensible_glossaries_driving_a_simple_state_machine","abstract":"We present an approach to automating some of the quality assurance review of software requirements documents, and promoting best practices for requirements documentation. The system we describe -- the Requirements Analysis Tool (RAT) - has been deployed and is currently being used in pilot projects with large and complex requirements documents. Preliminary results indicate a reduction in time needed to review documents and reduction in requirements defects as well as a change in the way users think about writing requirements. Our approach allows users to write requirements in natural language instead of an artificial formalism. RAT enforces requirements documentation best practices such as using standardized syntaxes and internally-consistent use of terminology. It supports the use of user-extensible glossaries to define terms. The formalism driving RAT is a state-machine, which is used to classify requirements into types based on keywords and then verify that the requirements follow one of the best practice syntaxes supported by the tool. It generates helpful warning messages explaining where requirements are not following best practices and suggests ways to rectify.","authors":["Prateek Jain","Kunal Verma","Alex Kass","Reymonrod G. Vasquez"],"meta":["January 2009","DOI:10.1145/1506216.1506224","SourceDBLP","Conference: Proceeding of the 2nd Annual India Software Engineering Conference, ISEC 2009, Pune, India, February 23-26, 2009"],"references":["255678083_Effective_requirements_practices","249886816_QuARS_A_Tool_for_Analyzing_Requirements","227316226_On_formal_support_for_industrial-scale_requirements_analysis","225125961_Requirements_Analysis_Tool_A_Tool_for_Automatically_Analyzing_Software_Requirements_Documents","220376241_A_formal_software_requirements_specification_method_for_digital_nuclear_plant_protection_systems","3247182_Identifying_Quality-Requirement_Conflicts","2348562_IEEE_Recommended_Practice_for_Software_Requirements_Specications"]}