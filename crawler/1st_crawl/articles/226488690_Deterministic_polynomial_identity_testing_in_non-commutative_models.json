{"id":"226488690_Deterministic_polynomial_identity_testing_in_non-commutative_models","abstract":"We give a deterministic polynomial time algorithm for polynomial identity testing in the following two cases: 1.\nNon-commutative arithmetic formulas: The algorithm gets as an input an arithmetic formula in the non-commuting variables x1,,xn and determines whether or not the output of the formula is identically 0 (as a formal expression).2.\nPure arithmetic circuits: The algorithm gets as an input a pure set-multilinear arithmetic circuit (as defined by Nisan and Wigderson) in the variables x1,,xn and determines whether or not the output of the circuit is identically 0 (as a formal expression). One application is a deterministic polynomial time identity testing for set-multilinear arithmetic circuits of depth 3. We also give a deterministic polynomial time identity testing algorithm for non-commutative algebraic branching programs as defined by Nisan. Finally, we obtain an exponential lower bound for the size of pure setmultilinear arithmetic circuits for the permanent and for the determinant. (Only lower bounds for the depth of pure circuits were previously known.)","authors":["Ran Raz","Amir Shpilka"],"meta":["April 2005computational complexity 14(1):1-19","DOI:10.1007/s00037-005-0188-8","SourceDBLP"],"references":["221590356_Derandomizing_Polynomial_Identity_Tests_Means_Proving_Circuit_Lower_Bounds","221580927_Depth-3_Arithmetic_Formulae_over_Fields_of_Characteristic_Zero","314795955_Derandomizing_polynomial_identity_tests_means_proving_circuit_lower_bounds","287013723_Multilinear-NC_1_multilinear-NC_2","234828972_Lower_bounds_for_non-commutative_computation","234812500_Fast_Probabilistic_Algorithms_for_Verification_of_Polynomial_Identities","225210920_On_the_Descriptive_and_Algorithmic_Power_of_Parity_Ordered_Binary_Decision_Diagrams","221590219_Lower_Bounds_for_Non-Commutative_Computation_Extended_Abstract","221149827_Probabilistic_algorithms_for_sparse_polynomials","220431235_Fast_Probabilistic_Algorithms_for_Verification_of_Polynomial_Identities"]}