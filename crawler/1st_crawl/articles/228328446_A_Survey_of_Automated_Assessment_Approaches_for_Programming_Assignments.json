{"id":"228328446_A_Survey_of_Automated_Assessment_Approaches_for_Programming_Assignments","abstract":"Practical programming is one of the basic skills pursued in computer science education. On programming courses, the coursework consists of programming assignments that need to be assessed from different points of view. Since the submitted assignments are executable programs with a formal structure, some features can be assessed automatically. The basic requirement for automated assessment is the numerical measurability of assessment targets, but semiautomatic approaches can overcome this restriction. Recognizing automatically assessable features can help teachers to create educational models, where automatic tools let teachers concentrate their work on the learning issues that need student-teacher interaction the most.Several automatic tools for both static and dynamic assessment of computer programs have been reported in the literature. This article promotes these issues by surveying several automatic approaches for assessing programming assignments. Not all the existing tools will be covered, simply because of the vast number of them. The article concentrates on bringing forward different assessment techniques and approaches to give an interested reader starting points for finding further information in the area. Automatic assessment tools can be used to help teachers in grading tasks as well as to support students' working process with automatic feedback. Common advantages of automation are the speed, availability, consistency and objectivity of assessment. However, automatic tools emphasize the need for careful pedagogical design of the assignment and assessment settings. To effectively share the knowledge and good assessment solutions already developed, better interoperability and portability of the tools is needed.","authors":["Kirsti Ala-Mutka"],"meta":["June 2005Computer Science Education 15:83-102","DOI:10.1080/08993400500150747"],"references":["234673833_The_Use_of_Formative_Quizzes_for_Deep_Learning","225935337_The_CourseMarker_CBA_System_Improvements_over_Ceilidh","221574039_A_Web_Based_Environment_for_Learning_to_Program","221537823_Automated_grading_assistance_for_student_programs","221425111_An_Environment_for_Self-Assessing_Java_Programming_Skills_in_Undergraduate_First_Programming_Courses","221214940_Winnowing_Local_Algorithms_for_Document_Fingerprinting","220832247_First_Year_Programming_Let_All_the_Flowers_Bloom","220832207_Static_Analysis_of_Students'_Java_Programs","220808456_Algorithm_simulation_with_automatic_assessment","220807994_Fully_automatic_assessment_of_programming_exercises","220807657_Grading_programming_assignments_using_rubrics","220613379_A_multi-national_multi-institutional_study_of_assessment_of_programming_skills_of_first-year_CS_students","220613231_How_shall_we_assess_this","220590602_Supporting_Students_in_C_Programming_Courses_with_Automatic_Program_Style_Assessment","220565952_Product_Metrics_for_Object-Oriented_Systems","220460047_Plagiarism_a_la_Mode_A_Comparison_of_Automated_Systems_for_Detecting_Suspected_Plagiarism","220094582_Improving_student_performance_by_evaluating_how_well_students_test_their_own_programs","45949372_Steganography-The_Art_of_Hiding_Data","4104882_Online_submission_of_coursework_-_a_technological_perspective","314828363_Effectiveness_of_online_assessment","310827725_Using_redundancies_to_find_errors","305261770_The_reliability_of_analytic_and_holistic_methods_in_rating_students'_computer_programs","305258688_Automated_Grading_Assistance_for_Student_Programs","252251759_Checking_C_programs_with_LINT","242403035_Taxonomy_of_educational_objectives_the_classification_of_educational_goals_handbook_i","235978157_Elements_Of_Software_Science","234768612_Interactive_program_demonstration_as_a_form_of_student_program_assessment","233303090_Java_Facilities_for_Automating_Analysis_Feedback_and_Assessment_of_Laboratory_Work","223543341_Guided_programming_and_automated_error_analysis_in_an_intelligent_Prolog_tutor","223081013_Automatic_Programming_Assessment_Metrics","222949660_PASS_An_automated_system_for_program_assessment","222542122_On_automated_grading_of_programming_assignments_in_an_academic_institution","222247710_Object-oriented_design_patterns_recovery","221537645_Effectiveness_of_online_assessment","221537610_The_TRY_System_-_or_-_How_to_Avoid_Testing_Student_Programs","221537476_Grading_student_programs_using_ASSYST","221536686_The_reliability_of_analytic_and_holistic_methods_in_rating_students'_computer_programs","221476127_A_Taxonomy_for_Programming_Style","220808180_Effective_peer_assessment_for_learning_computer_programming","220808013_Experience_with_a_computer-assisted_formal_programming_examination","220807342_Automated_assessment_of_GUI_programs_using_JEWL","220807174_Semi-automated_approach_to_online_assessment","220613432_Fostering_the_growth_of_a_software_quality_culture","220613366_Developing_intelligent_programming_tutors_for_novice_programmers","220178478_Automatic_Assessment_Aids_for_Pascal_Programs","220070444_A_Complexity_Measure","200085837_Learning_and_Teaching_Programming_A_Review_and_Discussion","4104774_Assessment_process_for_programming_assignments","4054843_Automatic_grading_of_student's_programming_assignments_An_interactive_process_and_suite_of_programs","4007218_Diagram-based_CBA_using_DATsys_and_CourseMaster","3794577_Case_study_of_the_analysis_of_novice_student_programs","3844651_WebToTeach_an_interactive_focused_programming_exercise_system","3640144_Automatic_analysis_of_functional_program_style","3189025_A_Complexity_Measure","3188366_Using_Redundancies_to_Find_Errors"]}