{"id":"328617764_Mechanizing_Focused_Linear_Logic_in_Coq","abstract":"Linear logic has been used as a foundation (and inspiration) for the development of programming languages, logical frameworks and models for concurrency. Linear logic's cut-elimination and the completeness of focusing are two of its fundamental properties that have been exploited in such applications. Cut-elimination guarantees that linear logic is consistent and has the so-called sub-formula property. Focusing is a discipline for proof search that was introduced to reduce the search space, but has proved to have more value, as it allows one to specify the shapes of proofs available. This paper formalizes first-order linear logic in Coq and mechanizes the proof of cut-elimination and the completeness of focusing. Moreover, the implemented logic is used to encode an object logic, such as in a linear logical framework, and prove adequacy.","authors":["Bruno Xavier","Carlos Olarte","Giselle Reis","Vivek Nigam"],"meta":["October 2018Electronic Notes in Theoretical Computer Science 338:219-236","DOI:10.1016/j.entcs.2018.10.014"],"references":["317825244_Formalized_Meta-Theory_of_Sequent_Calculi_for_Substructural_Logics","260310168_The_Next_700_Challenge_Problems_for_Reasoning_with_Higher-Order_Abstract_Syntax_Representations_Part_2-A_Survey","282492191_Subexponential_concurrent_constraint_programming","275748872_Investigations_into_Logical_Deduction","269935532_Polarities_Focussing_a_journey_from_Realisability_to_Automated_Reasoning","267665670_Cut_Reduction_in_Linear_Logic_as_Asynchronous_Session-Typed_Communication","266215870_A_Hybrid_Logical_Framework","262251627_A_General_Proof_System_for_Modalities_in_Concurrent_Constraint_Programming","257144704_A_formal_framework_for_specifying_sequent_calculus_proof_systems","243787191_Interactive_Theorem_Proving_and_Program_Development"]}