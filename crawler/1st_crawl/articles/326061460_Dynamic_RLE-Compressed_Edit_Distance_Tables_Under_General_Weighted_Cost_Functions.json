{"id":"326061460_Dynamic_RLE-Compressed_Edit_Distance_Tables_Under_General_Weighted_Cost_Functions","abstract":"Kim and Park [A dynamic edit distance table, J. Disc. Algo., 2:302–312, 2004] proposed a method (KP) based on a “dynamic edit distance table” that allows one to efficiently maintain unit cost edit distance information between two strings A of length m and B of length n when the strings can be modified by single-character edits to their left or right ends. This type of computation is useful e.g. in cyclic string comparison. KP uses linear time, O(m+n), to update the distance representation after each single edit. Recently Hyyrö et al. [Incremental string comparison, J. Disc. Algo., 34:2-17, 2015] presented an efficient method for maintaining the dynamic edit distance table under general weighted edit distance, running in O(c(m+n)) time per single edit, where c is the maximum weight of the cost function. The work noted that the Θ(mn) space requirement, and not the running time, may be the main bottleneck in using the dynamic edit distance table. In this paper we take the first steps towards reducing the space usage of the dynamic edit distance table by RLE compressing A and B. Let M and N be the lengths of RLE compressed versions of A and B, respectively. We propose how to store the dynamic edit distance table using Θ(mN+Mn) space while maintaining the same time complexity as the previous methods for uncompressed strings.","authors":["Heikki Hyyrö","Shunsuke Inenaga"],"meta":["June 2018International Journal of Foundations of Computer Science 29(04):623-645","DOI:10.1142/S0129054118410083"],"references":["263693615_Edit_distance_of_run-length_encoded_strings","220618221_Incremental_String_Comparison","220617068_All_Highest_Scoring_Paths_in_Weighted_Grid_Graphs_and_Their_Application_to_Finding_All_Approximate_Repeats_in_Strings","220224715_Approximate_Matching_of_Run-Length_Compressed_Strings","220115673_A_fast_and_simple_algorithm_for_computing_the_longest_common_subsequence_of_run-length_encoded_strings","220114939_Deques_with_Heap_Order","220114800_An_Improved_Algorithm_for_Computing_the_Edit_Distance_of_Run-Length_Coded_Strings","2307795_Matching_for_Run-Length_Encoded_Strings"]}