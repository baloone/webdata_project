{"id":"313127070_Change-driven_development_for_scientific_software","abstract":"Scientific software production dates back to the days before the computer science discipline obtained its own name. Over the past 76 years, scientists have been producing software, which means that most of the modern techniques and software engineering methods available these days did not exist while part of this process was taking place. Change-driven development was born as a new approach to maintain and develop scientific software. Founded on the principles of software essence (changeability, complexity, intangibility, and conformity), integrated development tools, and automated source code transformation. This new, agile approach takes change as a working unit devised to drive the entire development process, which is performed in a four-stage cycle. One of the most interesting approaches to apply change-driven development on scientific software is to update, modernize and even parallelize sequential programs that have been written 20 or 30 years ago and are still running in production environments. This process will be thoroughly described and implemented. Two successful case studies will be presented and analyzed in depth.","authors":["Mariano Mendez","Fernando G. Tinetti"],"meta":["May 2017The Journal of Supercomputing 73(5)","DOI:10.1007/s11227-017-1966-1"],"references":["303895511_Aplicaciones_de_Computo_Cientifico_Mantenimiento_del_Software_Heredado","340038232_On_understanding_laws_evolution_and_conservation_in_the_large-program_life_cycle","334555554_Where's_the_Real_Bottleneck_in_Scientific_Computing","315150698_ENIAC_as_a_Stored_Program_Computer_A_New_Look_at_the_Old_Records","305260213_The_history_of_fortran_I_II_and_III","294858701_Maintaining_Your_Competitive_Edge","286717414_The_maintenance_iceberg","284760093_The_point_source_solution","279791948_Panorama_of_information_systems_for_the_maintenance_management","278377927_Where's_the_Real_Bottleneck_in_Scientific_Computing"]}