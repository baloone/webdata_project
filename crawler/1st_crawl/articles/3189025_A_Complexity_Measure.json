{"id":"3189025_A_Complexity_Measure","abstract":"This paper describes a graph-theoretic complexity measure and illustrates how it can be used to manage and control program complexity. The paper first explains how the graph-theory concepts apply and gives an intuitive explanation of the graph concepts in programming terms. The control graphs of several actual Fortran programs are then presented to illustrate the correlation between intuitive complexity and the graph-theoretic complexity. Several properties of the graph-theoretic complexity are then proved which show, for example, that complexity is independent of physical size (adding or subtracting functional statements leaves complexity unchanged) and complexity depends only on the decision structure of a program.","authors":["Thomas J. McCabe"],"meta":["January 1977IEEE Transactions on Software Engineering SE-2(4):308- 320","DOI:10.1109/TSE.1976.233837","SourceIEEE Xplore"],"references":["302558561_Graphs_and_Hypergraphs","242410081_Mathematical_Foundations_for_Structured_Programming","242386367_Improving_the_programming_process","222966476_Analysis_of_structured_programs","220573192_Analysis_of_Structured_Programs","220565939_Structured_Programming_with_GOTO_Statements","220423617_A_Genealogy_of_Control_Structures"]}