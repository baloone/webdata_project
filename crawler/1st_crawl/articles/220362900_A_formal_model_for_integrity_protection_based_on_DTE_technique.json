{"id":"220362900_A_formal_model_for_integrity_protection_based_on_DTE_technique","abstract":"In order to provide integrity protection for the secure operating system to satisfy the structured protection classâ€™ requirements,\na DTE technique based integrity protection formalization model is proposed after the implications and structures of the integrity\npolicy have been analyzed in detail. This model consists of some basic rules for configuring DTE and a state transition model,\nwhich are used to instruct how the domains and types are set, and how security invariants obtained from initial configuration\nare maintained in the process of system transition respectively. In this model, ten invariants are introduced, especially,\nsome new invariants dealing with information flow are proposed, and their relations with corresponding invariants described\nin literatures are also discussed. The thirteen transition rules with well-formed atomicity are presented in a well-operational\nmanner. The basic security theorems correspond to these invariants and transition rules are proved. The rationalities for\nproposing the invariants are further annotated via analyzing the differences between this model and ones described in literatures.\nAt last but not least, future works are prospected, especially, it is pointed out that it is possible to use this model to\nanalyze SE-Linux security.","authors":["Qingguang Ji","Sihan Qing","Yeping He"],"meta":["October 2006Science in China Series F Information Sciences 49(5):545-565","DOI:10.1007/s11432-006-2014-6","SourceDBLP"],"references":["3188857_Extending_the_Noninterference_Version_of_MLS_for_SAT","242911358_Sidewinder_Defense_in_depth_using_type_enforcement","239667643_The_Rule_Set_Based_Access_Control_RSBAC_Linux_Kernel_Security_Extension","238713679_Confining_root_programs_with_domain_and_type_enforcement","238314845_Secure_Computing_The_Secure_Ada_Target_Approach","235045409_Integrity-Oriented_Control_Objectives_Proposed_Revisions_to_the_Trusted_Computer_System_Evaluation_Criteria_TCSEC_DOD_520028-STD","235011271_Integrity_in_Automated_Information_Systems","232640945_Practical_Domain_and_Type_Enforcement_for_UNIX","232634133_Non-Discretionery_Controls_for_Commercial_Applications","222450366_Trusted_system_concepts","222447707_Computer_Viruses-Theory_and_Experiments","221495481_Role-Based_Application_Design_and_Enforcement","220593596_Practical_Safety_in_Flexible_Access_Control_Models","3748089_Ensuring_continuity_during_dynamic_security_policy_reconfiguration_in_DTE","3735269_Modeling_the_Multipolicy_Machine","3728370_Implementing_RBAC_on_a_type_enforced_system","3499276_Integrity_controls_for_military_and_commercial_applications","3497443_Using_mandatory_integrity_to_enforce_commercial'_security","2939539_LOMAC_low_water-mark_integrity_protection_for_COTS_environments","2677818_On_Five_Definitions_of_Data_Integrity","2609046_An_Approach_to_Dynamic_Domain_and_Type_Enforcement"]}