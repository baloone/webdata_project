{"id":"325489129_Introduction_to_Software_Testing","abstract":"Cambridge Core - Software Engineering and Development - Introduction to Software Testing - by Paul Ammann","authors":["Paul Ammann","Jeff Offutt"],"meta":["December 2016","DOI:10.1017/9781316771273","ISBN: 9781107172012"],"references":["305793864_Test_Oracle_Strategies_for_Model-Based_Testing","282965915_Metamorphic_Testing_for_Software_Quality_Assessment_A_Study_of_Search_Engines","276255185_The_Oracle_Problem_in_Software_Testing_A_Survey","246172383_Fault_Classes_and_Error_Detection_Capability_of_Specification_Based_Testing","228545130_Efficient_OO_Integration_and_Regression_Testing","226844550_An_Overview_of_JML_Tools_and_Applications","224111741_Semi-Proving_An_Integrated_Method_for_Program_Proving_Testing_and_Debugging","222526483_On_the_identification_of_categories_choices_for_specification-based_test_case_generation","220882601_Coverage_Based_Test-Case_Generation_Using_Model_Checkers","220565910_Software_Unit_Test_Coverage_and_Adequacy","220432498_Designing_Programs_that_Check_Their_Work","220424587_Design_for_Testability_in_Object-Oriented_Systems","220422305_The_Category-Partition_Method_for_Specifying_and_Generating_Functional_Tests","220403784_Experimental_Results_from_an_Automatic_Test_Case_Generator","220277762_An_evaluation_of_combination_strategies_for_test_case_selection","220091812_Generating_Test_Data_with_Enhanced_Context-Free_Grammars","287798530_What_to_Expect_of_Predicates_An_Empirical_Analysis_of_Predicates_in_Real_World_Programs","268018244_On_a_Theory_of_Boolean_Functions","264612024_Theory_of_Program_Testing-An_Overview","262272204_Guest_Editorial_for_the_Special_Issue_on_Model-Based_Testing","262244378_Improving_logic-based_testing","262206388_An_orchestrated_survey_on_automated_software_test_case_generation","260648590_An_Experimental_Program-Testing_Facility","260624400_Structured_Design","257559884_An_industrial_study_of_applying_input_space_partitioning_to_test_financial_calculation_engines","255677889_Automated_generation_of_testcase_datasets","255677789_A_formalised_technique_for_expressing_compiler_exercisers","247844324_The_Dynamic_Domain_Reduction_Approach_to_Test_Data_Generation","239666980_Experimental_evaluation_of_the_assumption_of_independence_in_multiversion_software","234829988_An_extended_fault_class_hierarchy_for_specification-based_testing","234803997_Automatic_generation_of_random_self-checking_test_cases","230718835_Revisions_to_Software_Engineering_2004_Curriculum_Guidelines_for_Undergraduate_Degree_Programs_in_Software_Engineering","226788973_A_sentence_generator_for_testing_parsers","226022584_Fault_detection_effectiveness_of_mutation_and_data_flow_testing","224001141_Extensible_markup_language_XML_10","222793709_Applications_of_symbolic_evaluation","222633527_Data_flow_testing_in_STAD","222340515_Fundamental_differences_in_the_reliability_of_N-modular_redundancy_and_N-version_programming","221555634_Program_Slicing","220854753_Software_Error_Analysis_A_Real_Case_Study_Involving_Real_Faults_and_Mutations","220566553_An_Approach_to_Program_Testing","220516289_Combination_Testing_Strategies_A_Survey","220459975_The_Automatic_Generation_of_Test_Data","220458859_A_Strategy_for_Using_Genetic_Algorithms_to_Automate_Branch_and_Fault-Based_Testing","220423866_A_Program_Data_Flow_Analysis_Procedure","220420559_Orthogonal_Latin_squares_an_application_of_experiment_design_to_compiler_testing","220403847_The_Chaining_Approach_for_Software_Test_Data_Generation","220403701_Designing_and_comparing_automated_test_oracles_for_GUI-based_software_applications","220198298_Two_Notions_of_Correctness_and_Their_Relation_to_Testing","220113626_On_Finding_Test_Data_Sets_for_Loop_Free_Programs","220069671_An_Analysis_and_Survey_of_the_Development_of_Mutation_Testing","220069100_Test_Selection_Based_on_Finite_State_Models","220069813_Testability_of_Software_Components","30957291_Using_Coupling-Based_Weights_for_the_Class_Integration_and_Test_Order_Problem","23912841_Conceptual_Modeling_of_Coincident_Failures_in_Multiversion_Software"]}