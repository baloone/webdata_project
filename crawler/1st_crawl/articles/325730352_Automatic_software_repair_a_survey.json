{"id":"325730352_Automatic_software_repair_a_survey","abstract":"Debugging software failures is still a painful, time consuming, and expensive process. For instance, recent studies showed that debugging activities often account for about 50% of the overall development cost of software products [3]. There are many factors contributing to the cost of debugging, but the most impacting one is the extensive manual effort that is still required to identify and remove faults. So far, the automation of debugging activities essentially resulted in the development of techniques that provide useful insights about the possible locations of faults, the inputs and states of the application responsible for the failures, as well as the anomalous operations executed during failures. However, developers must still put a relevant effort on the analysis of the failed executions to exactly identify the faults that must be fixed. In addition, these techniques do not help the developers with the synthesis of an appropriate fix.","authors":["Luca Gazzola","Daniela Micucci","Leonardo Mariani"],"meta":["May 2018","DOI:10.1145/3180155.3182526","Conference: the 40th International Conference"],"references":["345843594_Reversible_Debugging_Software_Quantify_the_time_and_cost_saved_using_reversible_debuggers","320722921_Automatic_Software_Repair_A_Survey","221556183_On_the_automation_of_fixing_software_bugs","221553516_Automatically_finding_patches_using_genetic_programming"]}