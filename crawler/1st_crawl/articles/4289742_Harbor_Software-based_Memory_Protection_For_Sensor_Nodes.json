{"id":"4289742_Harbor_Software-based_Memory_Protection_For_Sensor_Nodes","abstract":"Many sensor nodes contain resource constrained microcontrollers where user level applications, operating system components, and device drivers share a single address space with no form of hardware memory protection. Programming errors in one application can easily corrupt the state of the operating system or other applications. In this paper, we propose Harbor, a memory protection system that prevents many forms of memory corruption. We use software based fault isolation (\"sandboxing\") to restrict application memory accesses and control flow to protection domains within the address space. A flexible and efficient memory map data structure records ownership and layout information for memory regions; writes are validated using the memory map. Control flow integrity is preserved by maintaining a safe stack that stores return addresses in a protected memory region. Run-time checks validate computed control flow instructions. Cross domain calls perform low-overhead control transfers between domains. Checks are introduced by rewriting an application's compiled binary. The sand- boxed result is verified on the sensor node before it is admitted for execution. Harbor's fault isolation properties depend only on the correctness of this verifier and the Harbor runtime. We have implemented and tested Harbor on the SOS operating system. Harbor detected and prevented memory corruption caused by programming errors in application modules that had been in use for several months. Harbor's overhead, though high, is less than that of application-specific virtual machines, and reasonable for typical sensor workloads.","authors":["Ram Kumar","Eddie Kohler","Mani Srivastava"],"meta":["May 2007","DOI:10.1109/IPSN.2007.4379694","SourceIEEE Xplore","Conference: Information Processing in Sensor Networks, 2007. IPSN 2007. 6th International Symposium on"],"references":["249883540_T2_A_Second_Generation_OS_For_Embedded_Sensor_Networks","234755058_Design_and_deployment_of_industrial_sensor_networks_experiences_from_a_semiconductor_plant_and_the_north_sea","221091786_Taming_the_Underlying_Challenges_of_Reliable_Multihop_Routing_in_Sensor_Networks","220832126_Active_Sensor_Networks","4149787_Design_of_a_wireless_sensor_network_platform_for_detecting_rare_random_and_ephemeral_events","3437071_Sensor_Networks_for_Emergency_Response_Challenges_and_Opportunities","2822784_Efficient_Software-Based_Fault_Isolation","278693342_CCured","267975876_SOS_-A_Dynamic_operating_system_for_Sensor_Networks","247440335_Safety_and_Performance_in_the_SPIN_Operating_System","246804741_Memory_Safety_and_Untrusted_Extensions_for_TinyOS","234797782_Application_Performance_and_Flexibility_on_Exokernel_Systems","234781369_Evaluating_SFI_for_a_CISC_architecture","228348666_t-kernel_Providing_reliable_OS_support_to_wireless_sensor_networks","221933002_Design_and_deployment_of_industrial_sensor_networks_experiences_from_a_semiconductor_plant_and_the_North_Sea","221321222_Virgil_Objects_on_the_head_of_a_pin","221234536_A_dynamic_operating_system_for_sensor_nodes","221091690_Run-time_dynamic_linking_for_reprogramming_wireless_sensor_networks","221091519_Cyclops_image_sensing_and_interpretation_in_wireless_networks","220910225_Application_Performance_and_Flexibility_on_Exokernel_Systems","220910183_Extensibility_Safety_and_Performance_in_the_SPIN_Operating_System","220851727_XFI_Software_Guards_for_System_Address_Spaces","220800777_Multi-level_software_reconfiguration_for_sensor_networks","33517516_Improving_the_reliability_of_commodity_operating_systems","4149788_SYS1_Avrora_Scalable_Sensor_Network_Simulation_with_Precise_Timing","2917139_Improving_the_Reliability_of_Commodity_Operating_Systems","2676366_Proof-Carrying_Code","2396655_CCured_Type-Safe_Retrofitting_of_Legacy_Code"]}