{"id":"303099230_On_the_techniques_we_create_the_tools_we_build_and_their_misalignments_a_study_of_KLEE","abstract":"Our community constantly pushes the state-of-the-art by introducing \"new\" techniques. These techniques often build on top of, and are compared against, existing systems that realize previously published techniques. The underlying assumption is that existing systems correctly represent the techniques they implement. This paper examines that assumption through a study of KLEE, a popular and well-cited tool in our community. We briefly describe six improvements we made to KLEE, none of which can be considered \"new\" techniques, that provide order-of-magnitude performance gains. Given these improvements, we then investigate how the results and conclusions of a sample of papers that cite KLEE are affected. Our findings indicate that the strong emphasis on introducing \"new\" techniques may lead to wasted effort, missed opportunities for progress, an accretion of artifact complexity, and questionable research conclusions (in our study, 27% of the papers that depend on KLEE can be questioned). We conclude by revisiting initiatives that may help to realign the incentives to better support the foundations on which we build.","authors":["Eric F. Rizzi","S. Elbaum","Matthew B. Dwyer"],"meta":["May 2016","DOI:10.1145/2884781.2884835","Conference: the 38th International Conference"],"references":["306395228_A_Synergistic_Analysis_Method_for_Explaining_Failed_Regression_Tests","306395227_Postconditioned_Symbolic_Execution","302574274_Jitk_A_Trustworthy_In-Kernel_Interpreter_Infrastructure","279977053_Instrumentation_of_Annotated_C_Programs_for_Test_Generation","278305554_GKLEE","263887754_Unit_Testing_Tool_Competitions_-_Lessons_Learned","263847351_Transitive_Credit_as_a_Means_to_Address_Social_and_Technological_Concerns_Stemming_from_Citation_and_Attribution_of_Digital_Products","262967587_Reproducing_Field_Failures_for_Programs_with_Complex_Grammar-Based_Input","262357161_Automatic_Detection_of_Floating-Point_Exceptions","262352357_Green_Reducing_reusing_and_recycling_constraints_in_program_analysis","262212678_Detecting_problematic_message_sequences_and_frequencies_in_distributed_systems","262003721_Researcher_Bias_The_Use_of_Machine_Learning_in_Software_Defect_Prediction","260085803_A_SOFT_Way_for_Openflow_Switch_Interoperability_Testing","254040845_iTree_Efficiently_Discovering_High-Coverage_Configurations_Using_Interaction_Trees","254034808_A_Scalable_Distributed_Concolic_Testing_Approach_An_Empirical_Evaluation","241770404_Probabilistic_symbolic_execution","344483499_Automatic_detection_of_floating-point_exceptions","313432589_Sahara_Guiding_the_Debugging_of_Failed_Software_Upgrades","308862503_Combining_Symbolic_Execution_and_Model_Checking_for_Data_Flow_Testing","308827542_Regular_Property_Guided_Dynamic_Symbolic_Execution","308052677_Why_most_published_research_findings_are_false","307748639_Views_on_Internal_and_External_Validity_in_Empirical_Software_Engineering","302188600_Extending_the_Theory_of_Arrays_memset_memcpy_and_Beyond","301428627_Solving_complex_path_conditions_through_heuristic_search_on_induced_polytopes","301428546_How_we_get_there_a_context-guided_search_strategy_in_concolic_testing","296407974_Modeling_Firmware_as_Service_Functions_and_Its_Application_to_Test_Generation","292667446_SAGE_Whitebox_fuzzing_for_security_testing_SAGE_has_had_a_remarkable_impact_at_Microsoft","286774189_Automated_software_testing_of_memory_performance_in_embedded_GPUs","286292570_Control_Flow_Obfuscation_Using_Neural_Network_to_Fight_Concolic_Testing","284411763_An_extensible_SAT-solver","283664005_Software_Dataplane_Verification","280953132_Discovery_Over_Application_A_Case_Study_of_Misaligned_Incentives_in_Software_Engineering","276441993_The_real_software_crisis","275480288_Path-exploration_lifting","275172702_The_Scholarship_of_Teaching_from_Scholarship_Reconsidered_Priorities_of_the_Professoriate","265050491_Docovery_Toward_Generic_Automatic_Document_Recovery","264799726_Best_practices_memo_Evaluating_computer_scientists_and_engineers_for_promotion_and_tenure","262601560_Status_Report_on_Software_Verification_Competition_Summary_SV-COMP_2014","262403892_Safely_reducing_the_cost_of_unit_level_symbolic_execution_through_readwrite_analysis","262351720_Performance_and_participation_in_open_source_software_on_GitHub","262293932_Incentives_and_integration_in_scientific_software_production","262166247_Static_Analysis_Driven_Cache_Performance_Testing","261958912_Prototyping_Symbolic_Execution_Engines_for_Interpreted_Languages","261461919_Automatic_concolic_test_generation_with_virtual_prototypes_for_post-silicon_validation","261192384_Reliability_analysis_in_Symbolic_PathFinder","261076730_Symbolic_software_model_validation","260146006_CRAXweb_Automatic_Web_Application_Testing_and_Attack_Generation","257468444_Revealing_and_repairing_configuration_inconsistencies_in_large-scale_system_software","254041571_BugRedux_Reproducing_field_failures_for_in-house_debugging","254008467_Scalable_testing_of_file_system_checkers","241632920_Industrial_application_of_concolic_testing_approach_A_case_study_on_libexif_by_using_CREST-BV_and_KLEE","238951545_Chaining_Test_Cases_for_Reactive_System_Testing_extended_version","237054160_MintHint_Automated_Synthesis_of_Repair_Hints","236278770_Body_Armor_for_Binaries_preventing_buffer_overflows_without_recompilation","238446033_Design_and_Results_of_the_2nd_Annual_Satisfiability_Modulo_Theories_Competition"]}