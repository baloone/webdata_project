{"id":"311101865_Knowledge_engineering_tools_in_planning_State-of-the-art_and_future_challenges","abstract":"Encoding a planning domain model is a complex task in realistic applications. It includes the analysis of planning application requirements, formulating a model that describes the domain, and testing it with suitable planning engines. In this paper we introduce a variety of new planning domains, and we then use and evaluate three separate strategies for knowledge formulation, encoding domain models from a textual, structural description of requirements using (i) the traditional method of a PDDL expert and text editor (ii) a leading planning GUI with built in UML modelling tools (iii) a hierarchical, object- based notation inspired by formal methods.\nWe distill lessons learned from these experiences. The results of the comparison give insights into strengths and weaknesses of the considered approaches, and point to needs in the design of future tools supporting PDDL- inspired development.","authors":["Mohammad M S Shah","Lukáš Chrpa","Falilat Jimoh","D. E. Kitchin"],"meta":["January 2013"],"references":["258091802_itSIMPLE40_Enhancing_the_Modeling_Experience_of_Planning_Problems","228938091_The_ANML_language","226319923_A_Distributed_Approach_for_Coordination_of_Traffic_Signal_Agents","220936262_Efficiently_Handling_Temporal_Knowledge_in_an_HTN_Planner","342094672_Adaptive_fuzzy_urban_traffic_flow_control_using_a_cooperative_multi-agent_system_based_on_two_stage_fuzzy_clustering","258091674_A_Brief_Review_of_Tools_and_Methods_for_Knowledge_Engineering_for_Planning_Scheduling","254008058_Autonomic_Multi-Policy_Optimization_in_Pervasive_Systems_Overview_and_Evaluation","231743665_Planning_domain_definition_using_GIPO","228567744_PDDL2_2_The_language_for_the_classical_part_of_the_4th_international_planning_competition","221461193_MARIO_middleware_for_assembly_and_deployment_of_multi-platform_flow-based_applications"]}