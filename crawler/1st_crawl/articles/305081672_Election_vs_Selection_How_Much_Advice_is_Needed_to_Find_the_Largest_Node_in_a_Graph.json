{"id":"305081672_Election_vs_Selection_How_Much_Advice_is_Needed_to_Find_the_Largest_Node_in_a_Graph","abstract":"Finding the node with the largest label in a labeled network, modeled as an undirected connected graph, is one of the fundamental problems in distributed computing. This is the way in which leader election is usually solved. We consider two distinct tasks in which the largest-labeled node is found deterministically. In selection, this node has to output 1 and all other nodes have to output 0. In election, the other nodes must additionally learn the largest label (everybody has to know who is the elected leader). Our aim is to compare the difficulty of these two seemingly similar tasks executed under stringent running time constraints. The measure of difficulty is the amount of information that nodes of the network must initially possess, in order to solve the given task in an imposed amount of time. Following the standard framework of algorithms with advice, this information (a single binary string) is provided to all nodes at the start by an oracle knowing the entire graph. The length of this string is called the size of advice. The paradigm of algorithms with advice has a far-reaching importance in the realm of network algorithms. Lower bounds on the size of advice give us impossibility results based strictly on the amount of initial knowledge outlined in a model's description. This more general approach should be contrasted with traditional results that focus on specific kinds of information available to nodes, such as the size, diameter, or maximum node degree. Consider the class of n-node graphs with any diameter diam ≤ D, for some integer D. If time is larger than diam, then both tasks can be solved without advice. For the task of election, we show that if time is smaller than $diam$, then the optimal size of advice is Θ(log n), and if time is exactly diam, then the optimal size of advice is Θ(log D). For the task of selection, the situation changes dramatically, even within the class of rings. Indeed, for the class of rings, we show that, if time is O(diamε), for any ε exponential increase of difficulty (measured by the size of advice) between selection in time O(diamε), for any ε","authors":["Avery Miller","Andrzej Pelc"],"meta":["July 2016","DOI:10.1145/2935764.2935772","Conference: the 28th ACM Symposium"],"references":["276922998_Time_vs_Information_Tradeoffs_for_Leader_Election_in_Anonymous_Trees","262399606_Knowledge_Level_of_Symmetry_and_Time_of_Leader_Election","234801373_Efficient_algorithms_for_leader_election_in_radio_networks","226242568_Trade-offs_Between_the_Size_of_Advice_and_Broadcasting_Time_in_Trees","225190159_Engineering_Tree_Labeling_Schemes_A_Case_Study_on_Least_Common_Ancestors","225113225_Proof_labeling_schemes","225069673_Leader_Election_for_Anonymous_Asynchronous_Agents_in_Arbitrary_Networks","223165189_Sorting_and_election_in_anonymous_asynchronous_rings","221343443_Efficient_algorithms_for_leader_election_in_radio_networks","221329975_Distributed_Systems_-_Towards_a_Formal_Approach","221233847_How_Much_Memory_Is_Needed_for_Leader_Election","220779575_Labeling_Schemes_for_Flow_and_Connectivity","220779084_Compact_labeling_schemes_for_ancestor_queries","220617011_Labeling_Schemes_for_Flow_and_Connectivity","220566997_How_much_memory_is_needed_for_leader_election","220544286_Local_MST_Computation_with_Short_Advice","29618737_Election_and_Local_Computations_on_Edges","29603113_Distributed_Computing_with_Advice_Information_Sensitivity_of_Graph_Coloring","3300642_Uniform_Leader_Election_Protocols_for_Radio_Networks","3300000_Kameda_T_Computing_on_Anonymous_Networks_Part_I-Characterizing_the_Solvable_Cases_IEEE_Trans_Parallel_Distrib_Syst_7_69-89","286326051_Use_Knowledge_to_Learn_Faster_Topology_Recognition_with_Advice","277296348_Distributed_Algorithms","245954051_Distributed_Algorithms_Chapter_6_7","243763312_Global_and_local_properties_in_networks_of_processors","239593861_Distributed_Computing_A_Locality-Sensitive_Approach","238759104_A_formal_model_for_message_passing_systems","234829122_Decentralized_Extrema-Finding_in_Circular_Configurations_of_Processors","222692430_Communication_algorithms_with_advice","222431035_Tree_exploration_with_advice","222411454_Fast_Radio_Broadcasting_with_Advice","221590390_Local_and_Global_Properties_in_Networks_of_Processors_Extended_Abstract","221448233_Better_Computing_on_the_Anonymous_Ring","221343262_Computing_on_an_anonymous_ring","221234034_Electing_a_Leader_when_Processor_Identity_Numbers_are_not_Distinct_Extended_Abstract","221233806_Drawing_Maps_with_Advice","221134053_Leader_Election_in_Rings_with_Nonunique_Labels","220898782_Online_Computation_with_Advice","220779076_Distance_Labeling_in_Graphs","220616975_Log-Logarithmic_Selection_Resolution_Protocols_in_a_Multiple_Access_Channel","220444719_Leader_Election_in_Rings_with_Nonunique_Labels","220406219_Better_Computing_on_the_Anonymous_Ring","220404811_An_Onlog_n_Unidirectional_Algorithm_for_the_Circular_Extrema_Problem","220151176_Graph_searching_with_advice","29626266_Local_Computations_on_Closed_Unlabelled_Edges_The_Election_Problem_and_the_Naming_Problem","4329304_Electing_a_Leader_in_the_Local_Computation_Model_Using_Mobile_Agents","2935062_Approximate_Distance_Oracles","2541499_Electing_a_Leader_in_a_Synchronous_Ring","2372489_Computing_Anonymously_with_Arbitrary_Knowledge"]}