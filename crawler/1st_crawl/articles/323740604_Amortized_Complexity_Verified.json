{"id":"323740604_Amortized_Complexity_Verified","abstract":"A framework for the analysis of the amortized complexity of functional data structures is formalized in the proof assistant Isabelle/HOL and applied to a number of standard examples and to the following non-trivial ones: skew heaps, splay trees, splay heaps and pairing heaps. The proofs are completely algebraic and are presented in some detail.","authors":["Tobias Nipkow","Hauke Brinkop"],"meta":["March 2019Journal of Automated Reasoning 62(1â€“2)","DOI:10.1007/s10817-018-9459-3"],"references":["324519763_A_Verified_Compiler_from_IsabelleHOL_to_CakeML","319988809_Verifying_the_Correctness_and_Amortized_Complexity_of_a_Union-Find_Implementation_in_Separation_Logic_with_Time_Credits","316898926_Towards_Automatic_Resource_Bound_Analysis_for_OCaml","312013362_Towards_automatic_resource_bound_analysis_for_OCaml","321146399_Verified_Root-Balanced_Trees","318369848_Automated_Resource_Analysis_with_Coq_Proof_Objects","317136428_Denotational_cost_semantics_for_functional_languages_with_inductive_types","317126467_A_Coq_library_for_internal_verification_of_running-times","316899072_Contract-based_resource_verification_for_higher-order_functions_with_memoization","311473699_Lightweight_semiformal_time_complexity_analysis_for_purely_functional_data_structures","309031447_Contract-based_Resource_Verification_for_Higher-order_Programs_with_Memoization","305906339_Automatic_Functional_Correctness_Proofs_for_Functional_Search_Trees","303296458_A_Coq_Library_for_Internal_Verification_of_Running-Times","289770367_Static_prediction_of_heap_space_usage_for_first-order_functional_programs","284886771_Machine-Checked_Verification_of_the_Correctness_and_Amortized_Complexity_of_an_Efficient_Union-Find_Implementation"]}