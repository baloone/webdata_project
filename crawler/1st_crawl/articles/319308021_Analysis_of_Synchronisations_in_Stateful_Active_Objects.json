{"id":"319308021_Analysis_of_Synchronisations_in_Stateful_Active_Objects","abstract":"This paper presents a static analysis technique based on effects and behavioural types for deriving synchronisation patterns of stateful active objects and verifying the absence of deadlocks in this context. This is challenging because active objects use futures to refer to results of pending asynchronous invocations and because these futures can be stored in object fields, passed as method parameters, or returned by invocations. Our effect system traces the access to object fields, thus allowing us to compute behavioural types that express synchronisation patterns in a precise way. The behavioural types are thereafter analysed by a solver that discovers potential deadlocks.","authors":["Ludovic Henrio","Cosimo Laneve","Vincenzo Mastandrea"],"meta":["August 2017","DOI:10.1007/978-3-319-66845-1_13","Conference: International Conference on Integrated Formal Methods"],"references":["234812709_Polymorphic_effect_systems","221047641_ABS_A_Core_Language_for_Abstract_Behavioral_Specification","221047574_Rebeca_Theory_Applications_and_Tools","332927537_Translating_active_objects_into_colored_Petri_nets_for_communication_analysis","320301612_Translating_Active_Objects_into_Colored_Petri_Nets_for_Communication_Analysis","313149923_Deadlock_analysis_of_unbounded_process_networks","307574488_Actors_may_synchronize_safely","293805646_May-Happen-in-Parallel_Based_Deadlock_Analysis_for_Concurrent_Objects","281598344_Behavioural_Semantics_for_Asynchronous_Components","278650481_A_Petri_Net_Based_Analysis_of_Deadlocks_for_Active_Objects_and_Futures","276315092_A_framework_for_deadlock_detection_in_core_ABS","268163982_Deadlock_Analysis_of_Unbounded_Process_Networks","222832766_Scala_Actors_Unifying_thread-based_and_event-based_programming","222689673_A_concurrent_lambda_calculus_with_futures","2876858_Asynchronous_Sequential_Processes","2533480_Ownership_Types_for_Safe_Programming_Preventing_Data_Races_and_Deadlocks"]}