{"id":"311489140_Modernizing_Plan-Composition_Studies","abstract":"Plan composition is an important but under-studied topic in programming education. Most studies were done three decades ago, under assumptions that miss important issues that today's students must confront. This paper presents rationale and details for a modernized study of plan composition that accommodates a broader range of programming languages and problem features. Our study design has two novelties: the problems require students to deal with data-processing challenges (such as noisy data), and the questions ask students to not only produce but also evaluate programs. We present preliminary results from using our study in multiple courses from different linguistic paradigms. We discuss several future studies that are prompted by these results.","authors":["Kathi Fisler","Shriram Krishnamurthi","Janet Siegmund"],"meta":["February 2016","DOI:10.1145/2839509.2844556","Conference: the 47th ACM Technical Symposium"],"references":["234796737_Learning_to_Program_Learning_to_Construct_Mechanisms_and_Explanations","220812001_Simulating_Student_Programmers","220420651_Cognitive_Strategies_and_Looping_Constructs_An_Empirical_Study","200085877_On_the_Criteria_To_Be_Used_in_Decomposing_Systems_into_Modules","266661046_The_recurring_rainfall_problem","261341097_Soloway's_Rainfall_Problem_Has_Become_Harder","222455139_Learning_to_program_in_LISP","221209606_A_closer_look_at_tracing_explaining_and_code_writing_skills_in_the_novice_programmer","220808064_Pattern-oriented_instruction_and_its_influence_on_problem_decomposition_and_solution_construction","200086130_Novice_programmer_errors_language_constructs_and_plan_composition","36073631_Problem_solving_by_analogy_and_skill_acquisition_in_the_domain_of_programming_microform"]}