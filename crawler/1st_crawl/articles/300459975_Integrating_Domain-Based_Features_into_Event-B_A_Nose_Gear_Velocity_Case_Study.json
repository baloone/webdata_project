{"id":"300459975_Integrating_Domain-Based_Features_into_Event-B_A_Nose_Gear_Velocity_Case_Study","abstract":"This paper presents the formal modelling of a nose gear velocity system, a software-based system for estimating the ground velocity of an aircraft. We employ the Event-B modelling language to conduct this case study. Event-B allows us to construct and verify the formal model of the system using the incremental refinement-based process. The main goal of the case study is to highlight the need for separating and integrating explicit semantics of application domain into the formal development process. Traditionally in Event-B development, domain descriptions of systems containing domain knowledge are treated as second-class citizens, and the modelling is implicit and usually distributed between the requirements model and the system model. In this paper, we highlight the need for explicit modelling of domain contexts as first-class citizens, and we illustrate concepts related to implicit and explicit semantics with the help of an example in Event-B.","authors":["Dominique Mery","Rushikesh Sawant","Anton Tarasyuk"],"meta":["January 2015","DOI:10.1007/978-3-319-23781-7_8","In book: Model and Data Engineering (pp.89-102)","Project: IMPEX IMPlicit and EXplicit semantics integration in proof based developments of discrete systems"],"references":["227050544_From_Domain_to_Requirements","221015830_Towards_Ontology-Based_Formal_Verification_Methods_for_Context_Aware_Systems","43652213_Rodin_An_Open_Toolset_for_Modelling_and_Reasoning_in_Event-B","281329465_On_Implicit_and_Explicit_Semantics_Integration_Issues_in_Proof-Based_Development_of_Systems","262170799_Practical_Theory_Extension_in_Event-B","246980815_Notes_on_Formalizing_Context","220695465_Modeling_in_Event-B_-_System_and_Software_Engineering","220461232_Context_Representation_in_Domain_Ontologies_and_Its_Use_for_Semantic_Integration_of_Data"]}