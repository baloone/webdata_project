{"id":"220473318_Model-integrated_development_of_embedded_software","abstract":"The paper describes a model-integrated approach for embedded software development that is based on domain-specific, multiple-view models used in all phases of the development process. Models explicitly represent the embedded software and the environment it operates in, and capture the requirements and the design of the application, simultaneously. Models are descriptive , in the sense that they allow the formal analysis, verification, and validation of the embedded system at design time. Models are also generative, in the sense that they carry enough information for automatically generating embedded systems using the techniques of program generators. Because of the widely varying nature of embedded systems, a single modeling language may not be suitable for all domains; thus, modeling languages are often domain-specific. To decrease the cost of defining and integrating domain-specific modeling languages and corresponding analysis and synthesis tools, the model-integrated approach is applied in a metamodeling architecture, where formal models of domain-specific modeling languages-called metamodels-play a key role in customizing and connecting components of tool chains. This paper discusses the principles and techniques of model-integrated embedded software development in detail, as well as the capabilities of the tools supporting the process. Examples in terms of real systems will be given that illustrate how the model-integrated approach addresses the physical nature, the assurance issues, and the dynamic structure of embedded software.","authors":["Gabor Karsai","Janos Sztipanovits","Akos Ledeczi","Ted Bapty"],"meta":["January 2003Proceedings of the IEEE 91(1):145-164","DOI:10.1109/JPROC.2002.805824","SourceDBLP"],"references":["252554427_Model-integrated_program_synthesis_environment_for_parallelreal-time_image_processing","239580441_Handbook_of_Graph_Grammars_and_Computing_by_Graph_Transformation","236607388_Towards_Automatic_Translation_of_UML_Models_into_Semantic_Domains","235069032_Turbine_Engine_Diagnostics_Using_a_Parallel_Signal_Processor","230978908_Non-thermal_plasma_application_to_the_abatement_of_noxious_emissions_in_automotive_exhaust_gases","228965830_Reconfigurable_target_recognition_system","225177231_Engineering_Modelling_Languages_A_Precise_Meta-Modelling_Approach","221553213_Model_Reuse_with_Metamodel-Based_Transformations","221115453_The_Metamodelling_Language_Calculus_Foundation_Semantics_for_UML","220540569_Heterogeneous_Simulation_-_Mixing_Discrete-Event_Models_with_Dataflow","220071204_A_Formal_Model_for_Module_Interconnection_Languages","3929961_On_metamodel_composition","3868935_Component_generation_technology_for_semantic_tool_integration","3824311_UMLAUT_an_extendible_UML_transformation_framework","3502151_SPNP_stochastic_Petri_net_package","277293820_A_DENOTATIONAL_FRAMEWORK_FOR_COMPARING_MODELS_OF_COMPUTATION","262392170_Model-integrated_toolset_for_fault_detection_isolation_and_recovery_FDIR","248245562_Usage_scenarios_for_a_model_compiler","247344005_Real-Time_Systems_Design_for_Distributed_Embedded_Applications","245236906_Akehurst_Model_translation_A_uml-based_specification_technique_and_active_implementation_approach","243778791_John_Irwin_Aspect-Oriented_Programming","243621216_The_Z_Reference_Manual","242637839_Design_Space_Representation_and_Management_for_Model-Based_Embedded_System_Synthesis","242549047_Larch_Languages_and_Tools_for_Formal_Specification","242452074_Defining_Platform-Based_Design","240482435_Design_-_Space_Construction_and_Exploration_in_Platform_-_Based_Design","239566102_Adaptive_object-oriented_software","239007042_The_design_and_performance_of_the_TAO_real-time_object_request_broker","238769005_Modeling_Reactive_Systems_with_Statecharts_The_Statemate_Approach","237133080_IMPLEMENTATION_OF_IMAGE_PROCESSING_ALGORITHMS_ON_FPGA_HARDWARE","234793883_Strategies_For_Real-Time_System_Specification","234125619_Real_Time_Systems_Design_Principles_for_Distributed_Embedded_Applictions","230629686_Aspect-Oriented_Programming","228558953_Intentional_programming_Asymptotic_fun","224001303_The_Z_Notation_a_Reference_Manual","224001197_Larch_Languages_and_Tools_for_Formal_Specification","222505579_The_design_of_the_TAO_real-time_object_request_broker","221550627_Lecture_Notes_in_Computer_Science","220859331_An_Image_Registration_Algorithm_Based_on_Cylindrical_Prototype_Model","220800885_Embedded_Software_Challenges_and_Opportunities","220800860_Usage_Scenarios_for_an_Automated_Model_Compiler","220280185_Computing_with_Graphs_and_Graph_Transformations","220070637_Automatic_Model_Transformations_Using_Extended_UML_Object_Diagrams_in_Modeling_Environments","3896883_The_new_metamodeling_generation","3884593_Specifying_graphical_modeling_systems_using_constraint-based_meta_models","3775462_Transformation_Rules_Based_on_Meta-Modelling","3756092_Transformation_in_intentional_programming","3756090_JTS_tools_for_implementing_domain-specific_languages","3677441_The_theory_of_hybrid_automata","3627469_Model-integrated_toolset_for_fault_detection_isolation_andrecovery_FDIR","3224429_Hierarchical_finite_state_machines_with_multiple_concurrency_models","3224353_A_Framework_for_Comparing_Models_of_Computation","3187853_Composition_validation_and_subjectivity_in_GenVoca_generators","3188222_Milicev_D_Automatic_model_transformations_using_extended_UML_object_diagrams_in_modeling_environments_IEEE_Trans_Softw_Eng_284_413-431","3187759_Formal_semantics_for_object_model_diagrams"]}