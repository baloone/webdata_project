{"id":"281329465_On_Implicit_and_Explicit_Semantics_Integration_Issues_in_Proof-Based_Development_of_Systems","abstract":"All software systems execute within an environment or context. Reasoning about the correct behavior of such systems is a ternary relation linking the requirements, system and context models. Formal methods are concerned with providing tool (automated) support for the synthesis and analysis of such models. These methods have quite successfully focused on binary relationships, for example: validation of a formal model against an informal one, verification of one formal model against another formal model, generation of code from a design, and generation of tests from requirements. The contexts of the systems in these cases are treated as second-class citizens: in general, the modelling is implicit and usually distributed between the requirements model and the system model. This paper is concerned with the explicit modelling of contexts as first-class citizens and illustrates concepts related to implicit and explicit semantics on an example using the Event B language.","authors":["Yamine AÃ¯t-Ameur","J. Paul Gibson","Dominique Mery"],"meta":["October 2014","DOI:10.1007/978-3-662-45231-8_50","Conference: International Symposium On Leveraging Applications of Formal Methods, Verification and Validation","Project: IMPEX IMPlicit and EXplicit semantics integration in proof based developments of discrete systems"],"references":["234776619_Roadmap_for_enhanced_languages_and_methods_to_aid_verification","227297774_Deductive_software_verification","224920490_Functional_Behavior_of_a_Cardiac_Pacing_System","222455259_On_Correct_Refinement_of_Programs","220997507_Abstract_Interpretation_A_Unified_Lattice_Model_for_Static_Analysis_of_Programs_by_Construction_or_Approximation_of_Fixpoints","220443711_Refinement_Decomposition_and_Instantiation_of_Discrete_Models_Application_to_Event-B","220371115_Refinement_A_Constructive_Approach_to_Formal_Software_Design_for_a_Secure_e-voting_Interface","200043063_OWL_Web_Ontology_Language_Reference","313348173_Roadmap_for_Enhanced_Languages_and_Methods_to_Aid_Verification","267020452_Software_engineering_2_Specification_of_systems_and_languages_With_contributions_from_Christian_Krog_Madsen","267001177_Software_engineering_3_Domains_requirements_and_software_design","265457621_Parallel_Program_Design_A_Foundation","262289225_Handling_Heterogeneity_in_Formal_Developments_of_Hardware_and_Software_Systems","244437488_A_Translation_Approach_to_Portable_Ontology_Specifications","235720353_A_Translational_Approach_to_Portable_Ontologies","221603048_A_Logic_of_Implicit_and_Explicit_Belief","221473583_A_Proof_Based_Approach_for_Modelling_and_Verifying_Web_Services_Compositions","221135377_Model-based_Adaptation_for_Self-Healing_Systems","221004573_Context-explication_in_conceptual_ontologies_the_PLIB_approach","220695465_Modeling_in_Event-B_-_System_and_Software_Engineering","220695256_The_B-book_-_assigning_programs_to_meanings","220604804_Where_Are_the_Semantics_in_the_Semantic_Web","220102360_A_Mechanically_Proved_and_Incremental_Development_of_IEEE_1394_Tree_Identify_Protocol","37442661_Spatio-Temporal_Conceptual_Models_Data_Structures_Space_Time","29641570_Domain_Ontologies_A_Database-Oriented_Analysis","3187984_Inferring_declarative_requirements_specifications_from_operational_scenarios"]}