{"id":"220557053_Software_complexity_A_statistical_case_study_through_insertion_sort","abstract":"The present paper makes use of factorial experiments to assess software complexity using insertion sort as a trivial example. We next propose to implement the methodology in quicksort and other advanced algorithms.","authors":["Anchala Kumari","Soubhik Chakraborty"],"meta":["July 2007Applied Mathematics and Computation 190(1):40-50","DOI:10.1016/j.amc.2007.01.019","SourceDBLP"],"references":["238768209_On_Why_Parameters_of_Input_Distributions_Need_be_Taken_Into_Account_For_a_More_Precise_Evaluation_of_Complexity_for_Certain_Algorithms","38363493_Design_and_Analysis_of_Computer_Experiments_Rejoinder","3186968_Evaluating_software_complexity_measures_IEEE_Trans_Softw_Eng","262493823_The_Art_of_Computer_Programming","256476561_In_Applied_Regression_Analysis","243776947_Sorting_A_Distribution_Theory","238768454_On_How_Statistics_Provides_a_Reliable_and_Valid_Measure_for_an_Algorithm's_Complexity","235127121_The_Art_of_Computer_Programming","222071652_On_why_an_algorithmic_time_complexity_measure_can_be_system_invariant_rather_than_system_independent","220688483_The_Art_of_Computer_Programming_Volume_I_Fundamental_Algorithms","220561669_Replacement_sort_revisited_The_gold_standard_unearthed","220317402_A_statistical_analysis_of_an_algorithm's_complexity","216457274_The_Art_Of_Computer_Programming_Vol3_Sorting_and_Searching","38363487_The_Design_and_Analysis_of_Computer_Experiments"]}