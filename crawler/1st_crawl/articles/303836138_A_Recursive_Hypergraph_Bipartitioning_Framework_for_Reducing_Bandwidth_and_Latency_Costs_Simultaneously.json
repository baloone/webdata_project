{"id":"303836138_A_Recursive_Hypergraph_Bipartitioning_Framework_for_Reducing_Bandwidth_and_Latency_Costs_Simultaneously","abstract":"Intelligent partitioning models are commonly used for efficient parallelization of irregular applications on distributed systems. These models usually aim to minimize a single communication cost metric, which is either related to communication volume or message count. However, both volume- and message-related metrics should be taken into account during partitioning for a more efficient parallelization. There are only a few works that consider both of them and they usually address each in separate phases of a two-phase approach. In this work, we propose a recursive hypergraph bipartitioning framework that reduces the total volume and total message count in a single phase. In this framework, the standard hypergraph models, nets of which already capture the bandwidth cost, are augmented with message nets. The message nets encode the message count so that minimizing conventional cutsize captures the minimization of bandwidth and latency costs together. Our model provides a more accurate representation of the overall communication cost by incorporating both the bandwidth and the latency components into the partitioning objective. The use of the widely-adopted successful recursive bipartitioning framework provides the flexibility of using any existing hypergraph partitioner. The experiments on instances from different domains show that our model on the average achieves up to 52 percent reduction in total message count and hence results in 29 percent reduction in parallel running time compared to the model that considers only the total volume.","authors":["R. Oguz Selvitopi","Seher Acer","Cevdet Aykanat"],"meta":["January 2016IEEE Transactions on Parallel and Distributed Systems 28(2):1-1","DOI:10.1109/TPDS.2016.2577024"],"references":["308872749_Semi-two-dimensional_Partitioning_for_Parallel_Sparse_Matrix-Vector_Multiplication","268241267_A_Medium-Grain_Method_for_Fast_2D_Bipartitioning_of_Sparse_Matrices","259970650_Scalable_Matrix_Computations_on_Large_Scale-Free_Graphs_Using_2D_Graph_Partitioning","250405750_Revisiting_Hypergraph_Models_for_Sparse_Matrix_Partitioning","242479489_Kumar_V_A_Fast_and_High_Quality_Multilevel_Scheme_for_Partitioning_Irregular_Graphs_SIAM_Journal_on_Scientific_Computing_201_359-392","220781844_A_scalable_eigensolver_for_large_scale-free_graphs_using_2D_graph_partitioning","220492625_The_University_of_Florida_Sparse_Matrix_Collection","220412099_On_Two-Dimensional_Sparse_Matrix_Partitioning_Models_Methods_and_a_Recipe","220171387_An_Efficient_Parallel_Algorithm_for_Matrix-Vector_Multiplication","51944584_Parallel_Breadth-First_Search_on_Distributed_Memory_Systems","50910616_A_Two-Dimensional_Data_Distribution_Method_For_Parallel_Sparse_Matrix-Vector_Multiplication","4376049_Challenges_and_Advances_in_Parallel_Sparse_Matrix-Matrix_Multiplication","3842965_Multi-way_Partitioning_Using_Bi-partition_Heuristics","3337005_Multilevel_hypergraph_partitioning_Applications_in_VLSI_domain","2797268_A_Fast_And_High_Quality_Multilevel_Scheme_For_Partitioning_Irregular_Graphs","2611715_Sparse_Matrix_Computations_on_Parallel_Processor_Arrays","301757813_Reducing_latency_cost_in_2D_sparse_matrix_partitioning_models","272369733_A_Novel_Method_for_Scaling_Iterative_Solvers_Avoiding_Latency_Overhead_of_Parallel_Sparse-Matrix_Vector_Multiplies","269820692_Hypergraph_partitioning_for_multiple_communication_cost_metrics_Model_and_methods","267068984_Encyclopedia_of_Parallel_Computing","257014640_A_new_metric_enabling_an_exact_hypergraph_model_for_the_communication_volume_in_distributed-memory_parallel_applications","228362451_Encapsulating_Multiple_Communication-Cost_Metrics_in_Partitioning_Sparse_Rectangular_Matrices_for_Parallel_Matrix-Vector_Multiplies","225233516_Graph_partitioning_and_parallel_solvers_Has_the_emperor_no_clothes","222556497_Kolda_TG_Graph_Partitioning_Models_for_Parallel_Computing_Parallel_Computing_26_1519-1534","221349466_SCOTCH_A_Software_Package_for_Static_Mapping_by_Dual_Recursive_Bipartitioning_of_Process_and_Architecture_Graphs","220781731_Distributed_memory_matrix-vector_multiplication_and_conjugate_gradient_algorithms","220781549_A_hypergraph-partitioning_approach_for_coarse-grain_decomposition","220694152_Combinatorial_algorithms_for_integrated_circuit_layout","3300380_Hypergraph-Partitioning_Based_Decomposition_for_Parallel_Sparse-Matrix_Vector_Multiplication","2823196_Partitioning_Rectangular_And_Structurally_Nonsymmetric_Sparse_Matrices_For_Parallel_Processing","2691043_Matrix-Vector_Multiplication_and_Conjugate_Gradient_Algorithms_on_Distributed_Memory_Computers","2458866_Parallel_Multilevel_Algorithms_for_Multi-constraint_Graph_Partitioning"]}