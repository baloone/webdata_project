{"id":"281788895_Speed_Faults_in_Computation_by_Chemical_Reaction_Networks","abstract":"Chemical reaction networks (CRNs) formally model chemistry in a well-mixed solution. Assuming a fixed molecular population size and bimolecular reactions, CRNs are formally equivalent to population protocols, a model of distributed computing introduced by Angluin, Aspnes,\nDiamadi, Fischer, and Peralta (PODC 2004). The challenge of fast computation by CRNs (or population protocols) is to ensure that there is never a bottleneck \"slow\" reaction that requires two molecules (agent states) to react (communicate), both of which are present in low (O(1))\ncounts. It is known that CRNs can be fast in expectation by avoiding slow reactions with high probability. However, states may be reachable (with low probability) from which the correct answer may only be computed by executing a slow reaction. We deem such an event a speed fault. We show that the problems decidable by CRNs guaranteed to avoid speed faults are precisely the detection problems: Boolean combinations of questions of the form \"is a certain\nspecies present or not?\". This implies, for instance, that no speed fault free CRN could decide\nwhether there are at least two molecules of a certain species, although a CRN could decide this\nin \"fast\" expected time â€” i.e. speed fault free CRNs \"can't count.\"","authors":["Ho-Lin Chen","Rachel Cummings","David Doty","David Soloveichik"],"meta":["September 2015Distributed Computing 30(5)","DOI:10.1007/s00446-015-0255-6"],"references":["264833897_Morphisms_of_reaction_networks_that_couple_structure_to_function","257204777_Programmable_chemical_controllers_made_from_DNA","236202775_Timing_in_chemical_reaction_networks","230851043_The_Cell_Cycle_Switch_Computes_Approximate_Majority","226549261_Computation_in_Networks_of_Passively_Mobile_Finite-State_Sensors","225081088_Less_Haste_Less_Waste_On_Recycling_and_Its_Limits_in_Strand_Displacement_Systems","29471068_Natural_Computing_Series","29471062_Computation_with_Finite_Stochastic_Chemical_Reaction_Networks","304263470_Probability_1_Computation_with_Chemical_Reaction_Networks","285855378_DNA_as_a_Universal_Substrate_for_Chemical_Kinetics","279285414_Probability_1_Computation_with_Chemical_Reaction_Networks","272423141_Stable_Leader_Election_in_Population_Protocols_Requires_Linear_Time","267804545_Vector_Addition_Systems_Reachability_Problem_A_Simpler_Solution","262722970_Communication_with_automata","243764858_Finiteness_of_the_odd_perfect_and_primitive_abundant_numbers_with_n_distinct_prime_factors","225685483_A_simple_population_protocol_for_fast_robust_approximate_majority","225453605_Fast_computation_by_population_protocols_with_a_leader","225450002_Self-stabilizing_Population_Protocols","224043664_Exact_Stochastic_Simulation_Of_Coupled_Chemical-Reactions","222850848_Parallel_program_schemata","221591404_Exponential_Space_Complete_Problems_for_Petri_Nets_and_Commutative_Semigroups_Preliminary_Report","221344022_Computation_in_networks_of_passively_mobile_finite-state_sensors","221343971_Stably_computable_predicates_are_semilinear","220520758_Self-Stabilizing_Population_Protocols","220151637_On_the_Reachability_Problem_for_5-Dimensional_Vector_Addition_Systems","41760522_DNA_as_a_Universal_Substrate_for_Chemical_Kinetics_Extended_Abstract"]}