{"id":"276555166_From_Scratch_to_Real_Programming","abstract":"Computer science (CS) activities for young students are widely used, particularly visual programming environments. We investigated the use of the Scratch environment for teaching CS concepts to middle school students. In a previous article [Meerbaum-Salant et al. 2013], we reported on the extent to which the CS concepts were successfully learned. In this article, we look at the transition from studying CS with the visual Scratch environment in middle school to studying CS with a professional textual programming language (C# or Java) in secondary school. We found that the programming knowledge and experience of students who had learned Scratch greatly facilitated learning the more advanced material in secondary school: less time was needed to learn new topics, there were fewer learning difficulties, and they achieved higher cognitive levels of understanding of most concepts (although at the end of the teaching process, there were no significant differences in achievements compared to students who had not studied Scratch). Furthermore, there was increased enrollment in CS classes, and students were observed to display higher levels of motivation and self-efficacy. This research justifies teaching CS in general and visual programming in particular in middle schools.","authors":["Michal Armoni","Orni Meerbaum-Salant","Mordechai Ben-Ari"],"meta":["February 2015ACM Transactions on Computing Education 14(4):25:1-15","DOI:10.1145/2677087","Project: Teaching concepts and ideas of computer science to middle school students using Scratch"],"references":["279618267_Content_validity_evidences_in_test_development_An_applied_perspective","241623944_Mediated_transfer_Alice_3_to_Java","241623893_CS_Unplugged_and_Middle-School_Students'_Views_Attitudes_and_Intentions_Regarding_CS","225083749_Mixed_Methods_Research_A_Research_Paradigm_Whose_Time_Has_Come","220426817_Scratch_Programming_for_All","38413358_Scratch_for_Budding_Computer_Scientists","2954457_A_High_School_Program_in_Computer_Science","311473376_Unlocking_the_clubhouse_women_in_computing","298972479_Learning_Computer_Science_Concepts_with_Scratch","278358129_Starting_from_scratch","277374591_Lowering_the_barriers_to_programming","245104165_A_Taxonomy_for_Learning_Teaching_and_Assessing_A_revision_of_Bloom''s_Taxonomy_of_Educational_Objec","242393297_Learning_to_Program_with_Alice","238203016_Clarifying_Qualitative_Research_A_Focus_on_Traditions","235465787_A_Taxonomy_for_Learning_Teaching_and_Assessing_A_Revision_of_Bloom's_Taxonomy_of_Educational_Objectives","234827817_Pattern_oriented_instruction_and_the_enhancement_of_analogical_reasoning","234826597_Why_students_drop_out_CS1_course","231513994_Toward_A_Theory_of_Instruction","222825891_The_Jeliot_2000_program_animation_system","221538931_Starting_with_scratch_in_CS_1","221538105_Why_students_with_an_apparent_aptitude_for_computer_science_don't_choose_to_major_in_computer_science","221537226_Unlocking_The_Clubhouse_Women_in_Computing","221437598_Didactics_of_Introduction_to_Computer_Science_in_High_School","221209623_Learning_computer_science_concepts_with_Scratch","220808157_Habits_of_programming_in_scratch","220807462_Engaging_with_computer_science_through_magic_shows","215915768_The_Discovery_Of_Grounded_Theory_Strategies_For_Qualitative_Research","215900261_Lowering_the_barriers_to_programming_A_taxonomy_of_programming_environments_and_languages_for_novice_programmers","48130877_The_Process_of_Education","44561699_Evaluating_the_Quality_of_Learning_the_SOLO_Taxonomy","32231255_Language-Independent_Conceptual_Bugs_in_Novice_Programming"]}