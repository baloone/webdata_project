{"id":"328922647_Loosely-Stabilizing_Leader_Election_for_Arbitrary_Graphs_in_Population_Protocol_Model","abstract":"In the population protocol model [Angluin et al. 2006], it is impossible to design a self-stabilizing leader election protocol without any knowledge of the exact number of nodes in the system. The notion of loose-stabilization, which relaxes the closure requirement of self -stabilization, was introduced in 2009 to circumvent this impossibility. The notion can be described as follows: a loosely-stabilizing protocol guarantees that, starting from any initial configuration, a system reaches a safe configuration eventually, and after that, the system maintains its specification (e.g. the unique leader) not forever, but for a sufficiently long time. The previous work of the authors presented a loosely-stabilizing protocol that solves the leader election on complete graphs using only a given upper bound\n$N$ \non the number of nodes n in the system, instead of the exact value of n. In this paper, we propose two loosely-stabilizing protocols that solve leader election for arbitrary graphs. One is a deterministic protocol that uses the unique identifiers of nodes while the other is a probabilistic protocol that works on anonymous networks. Given an upper bound\n$N$ \non the number of nodes, both protocols maintain a unique leader for\n$\\Omega(Ne^{2N})$ \nexpected steps (holding time) after entering a safe configuration. The first algorithm enters a safe configuration within\n$O(mN \\log\\;n)$ \nexpected steps (convergence time) while the second one does this within\n$O(mN^2 \\log\\;N)$ \nexpected steps, where m is the number of edges in the graph. Both protocols require only\n$O(\\log\\;N)$ \nbits for each node's memory. A novel concept, called the same speed timer is introduced, by which all nodes of the system can count down their timers at the same speed. This concept allows to achieve fast convergence time of both algorithms. To design the second protocol, we design a self-stabilizing two-hop coloring protocol, which is interesting in its own right. This protocol uses only\n$O(\\log\\;N)$ \nmemory space per node. We establish a lower bound. Any loosely-stabilizing leader election protocol with expected exponential holding time requires\n$\\Omega(mN)$ \nexpected convergence time. This lower bound shows a near-optimality of the first algorithm.","authors":["Yuichi Sudo","Fukuhito Ooshita","Hirotsugu Kakugawa","Toshimitsu Masuzawa"],"meta":["November 2018IEEE Transactions on Parallel and Distributed Systems PP(99):1-1","DOI:10.1109/TPDS.2018.2881125"],"references":["304821918_Determining_majority_in_networks_with_local_interactions_and_very_small_local_memory","262029666_Determining_Majority_in_Networks_with_Local_Interactions_and_Very_Small_Local_Memory","226549261_Computation_in_Networks_of_Passively_Mobile_Finite-State_Sensors","220544166_How_to_Prove_Impossibility_Under_Global_Fairness_On_Space_Complexity_of_Self-Stabilizing_Leader_Election_on_a_Population_Protocol_Model","220151789_Mediated_population_protocols","322215834_Fast_Space_Optimal_Leader_Election_in_Population_Protocols","320248658_Space-Optimal_Proportion_Consensus_with_Population_Protocols","312718650_Loosely-Stabilizing_Leader_Election_on_Arbitrary_Graphs_in_Population_Protocols","312078010_Time-Space_Trade-offs_in_Population_Protocols","306062963_The_Same_Speed_Timer_in_Population_Protocols","301854595_Time-Space_Trade-offs_in_Population_Protocols","300251306_On_Space_and_Time_Complexity_of_Loosely-Stabilizing_Leader_Election","300175420_Fast_and_Exact_Majority_in_Population_Protocols","299681227_Space_Complexity_of_Self-Stabilizing_Leader_Election_in_Population_Protocol_Based_on_k-Interaction","296673883_Non-deterministic_Population_Protocols","278666512_Self-stabilizing_Leader_Election_in_Population_Protocols_over_Arbitrary_Communication_Graphs","225453605_Fast_computation_by_population_protocols_with_a_leader","225450002_Self-stabilizing_Population_Protocols","221233221_Loosely-Stabilizing_Leader_Election_in_Population_Protocol_Model","221039382_Self-stabilizing_Leader_Election_in_Networks_of_Finite-State_Anonymous_Agents","220520758_Self-Stabilizing_Population_Protocols","37451951_Even_Small_Birds_are_Unique_Population_Protocols_with_Identifiers","29650545_Stabilizing_leader_election_in_population_protocols"]}