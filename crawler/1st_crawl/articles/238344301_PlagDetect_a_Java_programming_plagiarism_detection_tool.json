{"id":"238344301_PlagDetect_a_Java_programming_plagiarism_detection_tool","abstract":"Practical computing courses that involve signifi cant amount of programming assessment tasks suffer from e-Plagiarism. A pragmatic solution for this problem could be by discouraging plagiarism particularly among the beginners in programming. One way to address this is to automate the detection of plagiarized work during the marking phase. Our research in this context involves at fi rst examining various metrics used in plagiarism detection in program codes and secondly selecting an appropriate statistical measure using attribute counting metrics (ATMs) for detecting plagiarism in Java programming assignments. The goal of this investigation is to study the effectiveness of ATMs for detecting plagiarism among assignment submissions of introductory programming courses.","authors":["Zuhoor Abdullah Al-Khanjari","J. A. Fiaidhi","Raeda Al-Hinai","N. S. Kutti"],"meta":["December 2010ACM Inroads 1(4)","DOI:10.1145/1869746.1869766"],"references":["234800714_Similarity_and_originality_in_code_Plagiarism_and_normal_variation_in_student_assignments","234788509_A_plagiarism_detection_system","220482608_AC_An_Integrated_Source_Code_Plagiarism_Detection_Environment","251219115_Embedding_plagiarism_education_in_the_assessment_process","235978157_Elements_Of_Software_Science","234830599_An_algorithmic_approach_to_the_detection_and_prevention_of_plagiarism","234777218_A_tool_that_detects_plagiarism_in_Pascal_programs","228328538_A_Complexity_Measure","222800155_An_empirical_approach_for_detecting_program_smilarity_within_a_university_programming_environment","220457916_Identification_of_Program_Similarity_in_Large_Populations"]}