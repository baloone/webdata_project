{"id":"228404821_Networking_Software_Studies_with_the_Structured_Testing_Methodology","abstract":"The results of systematic software analyses with McCabe's and Halstead's metrics are presented for designing and testing three networking systems: the Carrier Internetworking switched routing solution, which allows managing the Internet-based virtual private networks over a multiservice asynchronous transfer mode infrastructure; Carrier Networks Support system that provides both services of conventional Layer-2 switches and the routing and control services of Layer-3 devices; and a system for providing different networking services (IP-VPNs, Firewalls, Network Address Translations, IP Quality-of-Service, and Web steering). The graph-based metrics (cyclomatic complexity, essential complexity, module design complexity, system design complexity, and system integration complexity) have been applied for studying the decision-structure complexity of code modules, code quality (unstructured logic), the amount of interaction between modules, and the estimated number of integration tests that are necessary to guard against errors. Nine protocol-based areas of the code (2,447 modules written in 149,094 lines of C-code) have been analyzed for BGP, Frame Relay, IGMP, IP, ISIS, OSPF, PPP, RIP, and SNMP networking protocols. It has been found that 511 modules (19.4% of the protocol-based code) are both unreliable and unmaintainable, including 27% of the BGP, IP, and OSPF code modules. Only the Frame Relay part of the code is well designed and programmed with a few possible errors. The number of unreliable code modules (29%) correlates well with the number of customer requests, error-fixing submits, and a number of possible errors (1,473) that have been estimated with the Halstead's metrics. Following the McCabe's approach of structured testing, 14,401 unit tests and 11,963 module integration tests have been developed to cover the protocol-based code areas. Comparing different Code Releases, it is shown that the reduction of the code complexity leads to significant reduction of the errors and maintainability efforts. The test and code coverage issues for embedded networking systems are also discussed.","authors":["Vladimir Riabov"],"meta":["July 2005","Project: Software Testing Strategies"],"references":["245729942_Complexity_and_Defects_in_Software-A_Case_Study","237335431_Structured_Testing_A_Testing_Methodology_Using_the_Cyclomatic_Complexity_Metric","220691107_Computer_networks_-_a_systems_approach_3_ed","31663591_Software_Engineering_A_Practitioner's_Approach_RJ_Pressman","15176212_The_Magical_Number_Seven_Plus_or_Minus_Two_Some_Limits_on_Out_Capacity_for_Processing_Information"]}