{"id":"264227456_A_New_Practicum_in_Compiler_Construction","abstract":"This article introduces a compiler construction practicum based on the implementation of a compiler for a small C-like language. The compiler has three phases, viz., lexical analysis, syntax analysis, and intermediate code generation. It uses some venerable principles of compiler construction like recursive descent parsing, syntax directed translation, and backpatching. The practicum is appropriate for pedagogical purposes because of its balanced design and the availability of an open source reference implementation of the compiler with a source code size of 2.2 KLOC only. Comput Appl Eng Educ Â© 2011 Wiley Periodicals, Inc.","authors":["Pinaki Chakraborty","P. C. Saxena","C.P. Katti","Gauri Pahwa"],"meta":["September 2014Computer Applications in Engineering Education 22(3)","DOI:10.1002/cae.20566"],"references":["234817326_Bantam_Java_compiler_project_Experiences_and_extensions","220807911_Using_XML_in_a_compiler_course","220612919_Learning_compiler_construction_by_examples","313609486_A_new_approach_to_teaching_a_first_course_in_Compiler_Construction","291119264_Expert_system_software_Engineering_advantages_and_applications","256020165_An_Optimizing_Compiler_for_Turing_Machine_Description_Language","255676541_Planning_and_experience_with_a_one-quarter_course_on_compiler_writing_using_Gries'_book_and_structured_programming","255676338_The_MSL_compiler_writing_project","255676107_Compiler_construction_A_course_outline_and_project_description","243333762_A_language_for_easy_and_efficient_modeling_of_Turing_machines","242787373_Compiler_construction_in_an_undergraduate_course_Some_difficulties","238041995_Teaching_purpose_compilers_An_exercise_and_its_feedback","234830290_A_sequence_of_lab_exercises_for_an_introductory_compiler_construction_course","234827845_Teaching_Compiler_Development","234825845_Parsing_Tinyada_in_a_Programming_Language_Design_Course","234820329_A_Laboratory_Approach_to_Teaching_Compiler_Writing","234812378_ORACLE_a_tool_for_learning_compiler_writing","234807360_Compiling_Tinyturing_in_a_Compiler_Construction_Course","234801608_The_Little_Language_compiler_course_project","234800430_A_new_approach_to_teaching_a_first_course_in_compiler_construction","234790917_An_Undergraduate_Compiler_Laboratory","229901120_A_compiler-based_toolkit_to_teach_and_learn_finite_automata","221538374_OO_design_in_compiling_an_OO_language","221538293_Making_compiler_design_relevant_for_students_who_will_most_likely_never_design_a_compiler","221538243_Compiler_construction_project_for_an_object-oriented_language","221538181_Teaching_compiler_construction_using_a_domain_specific_language","221538108_Teaching_compiler_construction_and_language_design_Making_the_case_for_unusual_compiler_projects_with_PostScript_as_the_target_language","221537416_A_project_based_course_in_compiler_construction","221537289_Bantam_A_customizable_Java-based_classroom_compiler","221536967_A_Toolkit_for_Individualized_Compiler-Writing_Projects","220612949_Develop_a_compiler_in_Java_for_a_compiler_design_course","220177794_NARPL_A_solution_to_the_student_compiler_project_problem","213882562_An_Incremental_Approach_to_Compiler_Construction","213878261_A_compiler_for_teaching_about_compilers","213878250_ABSTRACT_Fifteen_Compilers_in_Fifteen_Days","2244934_Cool_A_Portable_Project_for_Teaching_Compiler_Construction"]}