{"id":"254463081_Faster_randomized_consensus_with_an_oblivious_adversary","abstract":"Two new algorithms are given for randomized consensus in a shared-memory model with an oblivious adversary. Each is based on a new construction of a conciliator, an object that guarantees termination and validity, but that only guarantees agreement with constant probability. The first conciliator assumes unit-cost snapshots and achieves agreement among n processes with probability 1-μ in O(log* n + log(1/μ)) steps for each process. The second uses ordinary multi-writer registers, and achieves agreement with probability 1-μ in O(log log n + log(1/μ)) steps. Combining these constructions with known results gives randomized consensus for arbitrarily many possible input values using unit-cost snapshots in O(log* n) expected steps and randomized consensus for up to O(log n log log n) possible input values using ordinary registers in O(log log n) expected steps.","authors":["James Aspnes"],"meta":["May 2012Distributed Computing 28(1)","DOI:10.1145/2332432.2332434"],"references":["225108919_Of_Choices_Failures_and_Asynchrony_The_Many_Faces_of_Set_Agreement","221344186_Efficient_Asynchronous_Consensus_with_the_Weak_Adversary_Scheduler","221343514_Round-by-Round_Fault_Detectors_Unifying_Synchrony_and_Asynchrony_Extended_Abstract","221257118_Tight_Bounds_for_Adopt-Commit_Objects","221233796_Sub-logarithmic_Test-and-Set_against_a_Weak_Adversary","220431045_Impossibility_of_Distributed_Consensus_with_One_Faulty_Process","29633361_The_Combined_Power_of_Conditions_and_Information_on_Failures_to_Solve_Asynchronous_Set_Agreement","312995048_Of_Choices_Failures_and_Asynchrony_The_Many_Faces_of_Set_Agreement","239583375_Memory_requirements_for_agreement_among_unreliable_asynchronous_processes","233415819_On_the_Time_and_Space_Complexity_of_Randomized_Test-And-Set","228923337_Polylogarithmic_Concurrent_Data_Structures_from_Monotone_Circuits","221344321_Lower_Bounds_for_Randomized_Consensus_under_a_Weak_Adversary","221343973_Polylog_Randomized_Wait-Free_Consensus","221343939_A_modular_approach_to_shared-memory_consensus_with_applications_to_the_probabilistic-write","221233686_Randomized_Consensus_in_Expected_On_2_Total_Work_Using_Single-Writer_Registers","220780233_Approximate_Shared-Memory_Counting_Despite_a_Strong_Adversary","220617588_Lower_Bounds_for_Randomized_Consensus_under_a_Weak_Adversary","220616678_Wait-Free_Consensus_Using_Asynchronous_Hardware","220432418_Tight_bounds_for_asynchronous_randomized_consensus","220378614_Combining_shared-coin_algorithms","220268336_Tight_bounds_for_asynchronous_randomized_consensus","200031719_Impossibility_of_Distributed_Consensus_with_One_Faulty_Process","50808934_Linearizable_Implementations_Do_Not_Suffice_for_Randomized_DistributedComputation"]}