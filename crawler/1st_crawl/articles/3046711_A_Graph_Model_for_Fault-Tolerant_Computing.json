{"id":"3046711_A_Graph_Model_for_Fault-Tolerant_Computing","abstract":"An approach to fault-tolerant design is described in which a computing system S and an algorithm A to be executed by S are both defined by graphs whose nodes represent computing facilities. A is executable by S if A is isomorphic to a subgraph of S.A k-fault is the removal of k nodes (facilities) from S.S is a k-fault tolerant (k-FT) realization of A if A can be executed by S with any k-fault present in S. The problem of designing optimal k-FT systems is considered where A is equated to a 0-FT system. Techniques are described for designing optimal k-FT realizations of single-loop systems; these techniques are related to results in Hamiltonian graph theory. The design of optimal k-FT realizations of certain types of tree systems is also examined. The advantages and disadvantages of the graph model are discussed.","authors":["J.P. Hayes"],"meta":["October 1976IEEE Transactions on Computers C-25(9):875 - 884","DOI:10.1109/TC.1976.1674712","SourceIEEE Xplore"],"references":["259577892_Computer_Structures_Readings_and_Examples","266519475_Failure-Tolerant_Computer_Design","256743679_n-Hamiltonian_Graphs","242520682_Theoretical_Analysis_of_Information_Systems","238670040_The_attainment_of_reliable_digital_systems_through_the_use_of_redundancy-A_survey","234831500_A_systematic_approach_to_the_design_of_digital_busing_structures","234776385_A_structural_theory_of_machine_diagnosis","224731002_Analysis_and_Design_of_Reliable_Computer_Networks","224483254_A_Comparison_of_Some_Theoretical_Models_of_Parallel_Computation","220688483_The_Art_of_Computer_Programming_Volume_I_Fundamental_Algorithms","220431348_A_Backtrack_Procedure_for_Isomorphism_of_Directed_Graphs","36966588_The_art_of_computer_programming_Vol_1_Fundamental_algorithms","3477231_On_the_Connection_Assignment_Problem_of_Diagnosable_Systems","3046448_The_Architectural_Elements_of_a_Symmetric_Fault-Tolerant_Multiprocessor","3045557_Reliability_Modeling_for_Fault-Tolerant_Computers","2956603_Faulty-Tolerant_Computing_An_Overview"]}