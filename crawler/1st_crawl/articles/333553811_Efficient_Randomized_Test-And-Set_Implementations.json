{"id":"333553811_Efficient_Randomized_Test-And-Set_Implementations","abstract":"We study randomized test-and-set (TAS) implementations from registers in the asynchronous shared memory model with n processes. We introduce the problem of group election, a natural variant of leader election, and propose a framework for the implementation of TAS objects from group election objects. We then present two group election algorithms, each yielding an efficient TAS implementation. The first implementation has expected max-step complexity \\(O(\\log ^*k)\\) in the location-oblivious adversary model, and the second has expected max-step complexity \\(O(\\log \\log k)\\) against any read/write-oblivious adversary, where \\(k\\le n\\) is the contention. These algorithms improve the previous upper bound by Alistarh and Aspnes (in: Proceedings of the 25th International Symposium on Distributed Computing, 2011) of \\(O(\\log \\log n)\\) expected max-step complexity in the oblivious adversary model. We also propose a modification to a TAS algorithm devised by Alistarh, Attiya, Gilbert, Giurgiu, and Guerraoui (in: Proceedings of the 24th International Symposium on Distributed Computing, DISC 2010) for the strong adaptive adversary, which improves its space complexity from super-linear to linear, while maintaining its \\(O(\\log n)\\) expected max-step complexity. We then describe how this algorithm can be combined with any randomized TAS algorithm that has expected max-step complexity T(n) in a weaker adversary model, so that the resulting algorithm has \\(O(\\log n)\\) expected max-step complexity against any strong adaptive adversary and O(T(n)) in the weaker adversary model. Finally, we prove that for any randomized 2-process TAS algorithm, there exists a schedule determined by an oblivious adversary such that with probability at least \\(1/4^t\\) one of the processes needs at least t steps to finish its TAS operation. This complements a lower bound by Attiya and Censor-Hillel (SIAM J Comput 39(8):3885â€“3904, 2010) on a similar problem for \\(n\\ge 3\\) processes.","authors":["George Giakkoupis","Philipp Woelfel"],"meta":["December 2019Distributed Computing 32(8)","DOI:10.1007/s00446-019-00349-z"],"references":["312944514_Fast_Randomized_Test-and-Set_and_Renaming","312880972_Optimal-Time_Adaptive_Strong_Renaming_with_Applications_to_Counting","300571615_Test-and-Set_in_Optimal_Space","285449594_An_Osqrt_n_Space_Bound_for_Obstruction-Free_Leader_Election","267664427_Analyzing_Randomized_Search_Heuristics_Tools_from_Probability_Theory","266354976_Concentration","262365220_An_O1_RMRs_leader_election_algorithm","254463081_Faster_randomized_consensus_with_an_oblivious_adversary","247330191_Randomized_wait-free_test-and-set","243634798_Probabilistic_computations_Towards_a_uni_ed_measure_of_complexity","225711833_Randomized_Two-Process_Wait-Free_Test-and-Set","225508502_Fast_long-lived_renaming","233415819_On_the_Time_and_Space_Complexity_of_Randomized_Test-And-Set","222919603_Jgerskpper_J_Algorithmic_analysis_of_a_basic_evolutionary_algorithm_for_continuous_optimization_Theoretical_Computer_Science_3793_329-347","221498415_The_Complexity_of_Renaming"]}