{"id":"259701267_Best_Practices_for_Scientific_Computing","abstract":"Scientists spend an increasing amount of time building and using software. However, most scientists are never taught how to do this efficiently. As a result, many are unaware of tools and practices that would allow them to write more reliable and maintainable code with less effort. We describe a set of best practices for scientific software development that have solid foundations in research and experience, and that improve scientistsâ€™ productivity and the reliability of their software.","authors":["Greg Wilson","Dhavide A. Aruliah","C. Titus Brown","Neil Philippe Chue Hong"],"meta":["January 2014PLoS Biology 12(1):e1001745","DOI:10.1371/journal.pbio.1001745","SourcePubMed"],"references":["261517781_Software_Carpentry_Lessons_learned","344151950_CHAPTER_6_Scientific_Debugging","319770718_The_Art_of_Unit_Testing_With_Examples_in_Net","319770462_Code_Complete_A_Practical_Handbook_of_Software_Construction","300634485_The_Joel_Test_12_Steps_to_Better_Code","286488694_Why_Programs_Fail","279436400_How_Failures_Come_to_Be","270796652_Does_High_Public_Debt_Consistently_Stifle_Economic_Growth_A_Critique_of_Reinhart_and_Rogoff","265192919_Scrum_and_XP_from_the_Trenches","262319043_Why_Johnny_Can't_Build"]}