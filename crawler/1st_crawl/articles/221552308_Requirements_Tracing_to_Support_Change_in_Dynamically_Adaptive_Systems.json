{"id":"221552308_Requirements_Tracing_to_Support_Change_in_Dynamically_Adaptive_Systems","abstract":"[Context and motivation] All systems are susceptible to the need for change, with the desire to operate in changeable environments driving the need\nfor software adaptation. A Dynamically Adaptive System (DAS) adjusts its behaviour autonomously at runtime in order to accommodate\nchanges in its operating environment, which are anticipated in the system’s requirements specification. [Question/Problem] In this paper, we argue that Dynamic Adaptive Systems’ requirements specifications are more susceptible to change than those\nof traditional static systems. We propose an extension to i* strategic rationale models to aid in changing a DAS. [Principal Ideas/Results] By selecting some of the types of tracing proposed for the most complex systems and supporting them for DAS modelling, it\nbecomes possible to handle change to a DAS’ requirements efficiently, whilst still allowing artefacts to be stored in a Requirements\nManagement tool to mitigate additional complexity. [Contribution] The paper identifies different classes of change that a DAS’ requirements may be subjected to, and illustrates with a case\nstudy how additional tracing information can support the making of each class of change.","authors":["Kristopher Welsh","Peter Sawyer"],"meta":["June 2009","DOI:10.1007/978-3-642-02050-6_6","SourceDBLP","Conference: Requirements Engineering: Foundation for Software Quality, 15th International Working Conference, REFSQ 2009, Amsterdam, The Netherlands, June 8-9, 2009, Proceedings"],"references":["237618204_From_Stakeholder_Goals_to_High-Variability_Software_Design","232641405_Visualizing_the_Analysis_of_Dynamically_Adaptive_Systems_Using_i_and_DSLs","228628036_The_four_levels_of_requirements_engineering_for_and_in_dynamic_adaptive_systems","220882479_Goal-Based_Modeling_of_Dynamically_Adaptive_System_Requirements","220631709_Towards_requirements-driven_autonomic_systems_design","3741696_Reconciling_system_requirements_and_runtime_behavior","3679163_Towards_modeling_and_reasoning_support_for_early-phase_requirements_engineering","319394669_An_Analysis_of_the_requirements_Traceability_Problem","313528872_Reconciling_system_requirements_and_runtime_behavior","265780327_Non-Functional_Requirements_in_Software_Engineering","227635209_A_component-based_middleware_framework_for_configurable_and_reconfigurable_Grid_computing","221567384_GridStix_Supporting_Flood_Prediction_using_Embedded_Hardware_and_Next_Generation_Grid_Middleware","221552256_When_to_Adapt_Identification_of_Problem_Domains_for_Adaptive_Systems","220428014_Robinson_W_A_requirements_monitoring_framework_for_enterprise_systems_Requirements_Engineering_111_17-41","220130828_Goal-Directed_Requirements_Acquisition","220070762_Toward_Reference_Models_of_Requirements_Traceability","32885320_An_Analysis_of_the_Requirements_Traceability_Problem","4091769_From_goals_to_aspects_Discovering_aspects_from_requirements_goal_models","3699127_An_approach_to_automatic_detection_of_software_failures_in_real-time_systems","3646602_Requirements_monitoring_in_dynamic_environments","3188133_Toward_Reference_Models_for_Requirements_Traceability"]}