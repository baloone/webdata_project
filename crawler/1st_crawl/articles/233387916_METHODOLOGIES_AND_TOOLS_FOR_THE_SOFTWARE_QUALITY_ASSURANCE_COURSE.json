{"id":"233387916_METHODOLOGIES_AND_TOOLS_FOR_THE_SOFTWARE_QUALITY_ASSURANCE_COURSE","abstract":"Tutorials, labs, projects, and homework assignments were designed to help students explore modern techniques of software quality assurance; debugging C/C++ and Java codes; and developing high-quality computer projects. Different methods (predicate-logic and topological approaches of graph theory; metric theory of algorithms, and object-oriented methodology of rapid prototyping) have been explored by using various tools in analyses of complex computing code. Applications cover software test strategies, code reusability issues, and ways to significantly reduce code errors and maintainability effort. The related course materials provide students with knowledge, instructions and hands-on experience, and motivate them in their research studies.","authors":["Vladimir Riabov"],"meta":["June 2011","Project: Software Testing Strategies"],"references":["228404821_Networking_Software_Studies_with_the_Structured_Testing_Methodology","306939383_The_magical_number_seven_plus_or_minus_two_Some_limits_on_our_capacity_to_process_information","247572947_Software_Quality_Assurance-From_theory_to_implementation","243788136_Applying_and_interperting_object_oriented_metrics","237335431_Structured_Testing_A_Testing_Methodology_Using_the_Cyclomatic_Complexity_Metric","235978157_Elements_Of_Software_Science","235107579_The_National_Institute_of_Standards_and_Technology_An_Overview","15176212_The_Magical_Number_Seven_Plus_or_Minus_Two_Some_Limits_on_Out_Capacity_for_Processing_Information","10255186_The_Magical_Number_Seven_Plus_Or_Minus_2_Some_Limits_On_Our_Capacity_for_Processing_Information"]}