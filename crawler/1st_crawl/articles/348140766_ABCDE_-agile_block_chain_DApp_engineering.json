{"id":"348140766_ABCDE_-agile_block_chain_DApp_engineering","abstract":"Blockchain software development is becoming more and more important for any modern software developer and IT startup. Nonetheless, blockchain software production still lacks of a disciplined, organized and mature development process, as demonstrated by the many and (in)famous failures and frauds occurred in recent years. In this paper we present ABCDE, a complete method addressing blockchain software development. The method considers the software integration among the blockchain components – smart contracts, libraries, data structures – and the out-of-chain components, such as web or mobile applications, which all together constitute a complete DApp system. We advocate for ABCDE the use of agile practices, because these are suited to develop systems whose requirements are not completely understood since the beginning, or tend to change, as it is the case of most blockchain-based applications. ABCDE is based on Scrum, and is therefore iterative and incremental. From Scrum, we kept the requirement gathering with user stories, the iterative-incremental approach, the key roles, and the meetings. The main difference with Scrum is the separation of development activities in two flows – one for smart contracts and the other for out-of-chain software interacting with the blockchain – each performed iteratively, with integration activities every 2–3 iterations. ABCDE makes explicit the activities that must be performed to design, develop, test and integrate smart contracts and out-of-chain software, and documents the smart contracts using formal diagrams to help development, security assessment, and maintenance. A diagram derived from UML class diagram helps to effectively model the data structure of smart contracts, whereas the exchange of messages between the entities of the system is modeled using a modified UML sequence diagram. The proposed method has also specific activities for security assessment and gas optimization, through systematic use of patterns and checklists. ABCDE focuses on Ethereum blockchain and its Solidity language, but preserves generality and with proper modifications might be applied to any blockchain software project. ABCDE method is described in detail, and an example is given to show how to concretely implement the various development steps.","authors":["Lodovica Marchesi","Michele Marchesi","Roberto Tonelli"],"meta":["December 2020","DOI:10.1016/j.bcra.2020.100002"],"references":["352817251_Modelling_principles_for_blockchain-based_implementation_of_business_or_scientific_processes","340300470_Design_Patterns_for_Gas_Optimization_in_Ethereum","336446394_Smart_Contract_Security_A_Software_Lifecycle_Perspective","332715800_Understanding_the_motivations_challenges_and_needs_of_Blockchain_software_developers_a_survey","329405980_An_Agile_Software_Engineering_Method_to_Design_Blockchain_Applications","328338366_Blockchain_challenges_and_opportunities_A_survey","335644694_Ensure_Traceability_in_European_Food_Supply_Chain_by_Using_a_Blockchain_System","335361583_Blockchain-Based_Software_Engineering","328083789_Understanding_the_software_development_practices_of_blockchain_projects_a_survey","326730102_How_much_blockchain_do_you_need_towards_a_concept_for_building_hybrid_DApp_architectures"]}