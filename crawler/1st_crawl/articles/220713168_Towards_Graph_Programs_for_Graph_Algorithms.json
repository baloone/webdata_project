{"id":"220713168_Towards_Graph_Programs_for_Graph_Algorithms","abstract":"Graph programs as introduced by Habel and Plump [8] provide a simple yet computationally complete language for computing functions\nand relations on graphs. We extend this language such that numerical computations on labels can be conveniently expressed.\nRather than resorting to some kind of attributed graph transformation, we introduce conditional rule schemata which are instantiated\nto (conditional) double-pushout rules over ordinary graphs. A guiding principle in our language extension is syntactic and\nsemantic simplicity. As a case study for the use of extended graph programs, we present and analyse two versions of Dijkstraâ€™s\nshortest path algorithm. The first program consists of just three rule schemata and is easily proved to be correct but can\nbe exponential in the number of rule applications. The second program is a refinement of the first which is essentially deterministic\nand uses at most a quadratic number of rule applications.","authors":["Detlef Plump","Sandra Steinert"],"meta":["September 2004Lecture Notes in Computer Science","DOI:10.1007/978-3-540-30203-2_11","SourceDBLP","Conference: Graph Transformations, Second International Conference, ICGT 2004, Rome, Italy, September 28 - October 2, 2004, Proceedings"],"references":["249975776_Fundamental_Theory_for_Typed_Attributed_Graph_Transformation_Long_Version","238626850_The_AGG_approach_language_and_environment","234816484_An_algebraic_framework_for_the_transformation_of_attributed_graphs","229166691_The_AGG-Approach_Language_and_Tool_Environment","221570327_Computational_Completeness_of_Programming_Languages_Based_on_Graph_Transformation","220713262_Confluence_of_Typed_Attributed_Graph_Transformation_Systems","220713184_Lecture_Notes_in_Computer_Science","220713176_Algebraic_Approaches_to_Graph_Transformation_-_Part_I_Basic_Concepts_and_Double_Pushout_Approach","292020261_Introduction_to_Algorithms","247442902_Introduction_To_Algorithms"]}