{"id":"292191812_Fully-automated_Runtime_Enforcement_of_Component-based_Systems_with_Formal_and_Sound_Recovery","abstract":"We introduce runtime enforcement of specifications on component-based systems (CBS) modeled in the BIP (Behavior, Interaction and Priority) framework. Runtime enforcement is an increasingly popular and effective dynamic validation technique aiming to ensure the correct runtime behavior (w.r.t. a formal specification) of a system using a so-called enforcement monitor. BIP is a powerful and expressive component-based framework for the formal construction of heterogeneous systems. Because of BIP expressiveness however , it is difficult to enforce complex behavioral properties at design-time. We first introduce a theoretical runtime enforcement framework for component-based systems where we delineate a hierarchy of enforceable properties (i.e., properties that can be enforced) according to the number of observational steps a system is allowed to deviate from the property (i.e., the notion of k-step enforceability). To ensure the observational equivalence between the correct executions of the initial system and the monitored system, we show that i) only stutter-invariant properties should be enforced on CBS with our monitors, and ii) safety properties are 1-step enforceable. Second, given an abstract enforcement monitor for some 1-step enforceable property, we define a series of formal transformations to instrument (at relevant locations) a CBS described in the BIP framework to integrate the monitor. At runtime, the monitor observes and automatically avoids any error in the behavior of the system w.r.t. the property. Third, our approach is fully implemented in RE-BIP, an available tool integrated in the BIP tool suite. Fourth, to validate our approach, we use RE-BIP to i) enforce deadlock-freedom on a dining philosophers benchmark, and ii) ensure the correct placement of robots on a map.","authors":["Yli√®s Falcone","Mohamad Jaber"],"meta":["June 2017International Journal on Software Tools for Technology Transfer 19(3)","DOI:10.1007/s10009-016-0413-6"],"references":["308894445_Enforcement_of_Timed_Properties_with_Uncontrollable_Events","302978476_Organising_LTL_Monitors_over_Distributed_Systems_with_a_Global_Clock","287044763_Runtime_enforcement_of_timed_properties_revisited","281328970_Adapting_Component-Based_Systems_at_Runtime_via_Policies_with_Temporal_Patterns","281299042_Enforcement_of_Timed_Properties_with_Uncontrollable_Events","280752020_Runtime_Enforcement_of_Parametric_Timed_Properties_with_Practical_Applications","278816173_Organising_LTL_Monitors_over_Distributed_Systems_with_a_Global_Clock","276058000_Abstract_Model_Repair","312998514_Enforceable_security_policies","280852249_Component-Based_Autonomic_Managers_for_Coordination_Control"]}