{"id":"334293367_Occluded_algorithms","abstract":"Two definitions of algorithm, their uses, and their implied models of computing in society, are reviewed. The first, termed the structural programming definition, aligns more with usage in computer science, and as the name suggests, the intellectual project of structured programming. The second, termed the systemic definition, is more informal and emerges from ethnographic observations of discussions of software in both professional and everyday settings. Specific examples of locating algorithms within modern codebases are shared, as well as code directly impacting social and ethical concerns. The structural distinction between algorithms and social concerns is explained as mirroring the engineering construct of algorithms and data structures. It is proposed that, rather than this separation being an attempt to enforce a professional boundary and evade social responsibility, it is a crucial technical distinction within code which makes it clearer and more transparent. The power structures reinforced by the broader, cultural interpretations of algorithm are reconsidered, along with what it would mean for software to have an inclusive design culture.","authors":["Adam Burke"],"meta":["July 2019Big Data & Society 6(2):205395171985874","DOI:10.1177/2053951719858743"],"references":["320970808_Algorithms_as_culture_Some_tactics_for_the_ethnography_of_algorithmic_systems","318920618_Google_Vizier_A_Service_for_Black-Box_Optimization","318820255_Algorithmic_regulation_A_critical_interrogation","315913147_Measuring_discrimination_in_algorithmic_decision_making","309322060_The_Ethics_of_Algorithms_Mapping_the_Debate","338269547_Knowing_Algorithms","332933524_Knowing_Algorithms","327417928_What_Should_an_Anthropology_of_Algorithms_Do","327109256_Algorithms_of_Oppression_How_Search_Engines_Reinforce_Racism","319770101_Working_Effectively_with_Legacy_Code"]}