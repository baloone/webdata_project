{"id":"344081644_Large_Population_Sizes_and_Crossover_Help_in_Dynamic_Environments","abstract":"Dynamic linear functions on the boolean hypercube are functions which assign to each bit a positive weight, but the weights change over time. Throughout optimization, these functions maintain the same global optimum, and never have defecting local optima. Nevertheless, it was recently shown [Lengler, Schaller, FOCI 2019] that the -Evolutionary Algorithm needs exponential time to find or approximate the optimum for some algorithm configurations. In this experimental paper, we study the effect of larger population sizes for Dynamic BinVal, the extremal form of dynamic linear functions. We find that moderately increased population sizes extend the range of efficient algorithm configurations, and that crossover boosts this positive effect substantially. Remarkably, similar to the static setting of monotone functions in [Lengler, Zou, FOGA 2019], the hardest region of optimization for -EA is not close the optimum, but far away from it. In contrast, for the -GA, the region around the optimum is the hardest region in all studied cases (Extended Abstract. A full version is available on arxiv at [11]).","authors":["Johannes Lengler","Jonas Meier"],"meta":["August 2020","DOI:10.1007/978-3-030-58112-1_42","In book: Parallel Problem Solving from Nature â€“ PPSN XVI, 16th International Conference, PPSN 2020, Leiden, The Netherlands, September 5-9, 2020, Proceedings, Part I (pp.610-622)"],"references":["307085560_Populations_Can_Be_Essential_in_Tracking_Dynamic_Optima","220741485_Dynamic_evolutionary_optimisation_an_analysis_of_frequency_and_magnitude_of_change","337425767_The_Benefits_of_Population_Diversity_in_Evolutionary_Algorithms_A_Survey_of_Rigorous_Runtime_Analyses","335247184_Exponential_slowdown_for_larger_populations_the_1-EA_on_monotone_functions","331417631_The_11-EA_on_Noisy_Linear_Functions_with_Random_Positive_Weights","330094960_When_Does_Hillclimbing_Fail_on_Monotone_Functions_An_entropy_compression_argument","326918450_A_tight_runtime_analysis_for_the_M_l_EA","324055316_A_General_Dichotomy_of_Evolutionary_Algorithms_on_Monotone_Functions","322819071_The_Benefits_of_Population_Diversity_in_Evolutionary_Algorithms_A_Survey_of_Rigorous_Runtime_Analyses","306186634_Drift_Analysis_and_Evolutionary_Algorithms_Revisited","306186301_Escaping_Local_Optima_using_Crossover_with_Emergent_or_Reinforced_Diversity","304637709_MMAS_Versus_Population-Based_EA_on_a_Family_of_Dynamic_Fitness_Functions","261136798_How_Crossover_Speeds_Up_Building-Block_Assembly_in_Genetic_Algorithms","259430861_Tight_Bounds_on_the_Optimization_Time_of_a_Randomized_Search_Heuristic_on_Linear_Functions","222672681_Crossover_can_provably_be_useful_in_evolutionary_computation","51754915_Mutation_Rate_Matters_Even_When_Optimizing_Monotonic_Functions","7241476_Runtime_Analysis_of_the_m_1_EA_on_Simple_Pseudo-Boolean_Functions","2449002_On_the_analysis_of_evolutionary_algorithms_-_A_proof_that_crossover_really_can_help"]}