{"id":"262335191_Scheduling_and_thread_management_with_RTEMS","abstract":"The goal of a real-time operating system (RTOS) is to support real-time and embedded system (RT/ES) application development, which differ from general-purpose applications because of the size, weight, and power (SWaP) and timing constraints imposed by embedded applications. Useful RTOS features include real-time thread scheduling, thread communication, synchronization, interrupt handling, memory management, file systems, device drivers, networking, and debugging support. The Real-Time Executive for Multi-processor Systems (RTEMS) is a free and open-source RTOS that supports over a dozen processor architecture families and over 150 embedded system boards. RTEMS is designed to support embedded applications with stringent real-time requirements while being compatible with open standards such as POSIX. RTEMS includes optional services such as TCP/IP networking and file systems while still offering minimum executable sizes under 20 KB in useful configurations.\nOne of the primary functions of an RTOS is to select threads that can obtain access to resources such as shared memory and processor time. RTEMS uses multiple algorithms to manage both waiting threads and those ready to execute. The thread execution schedulers include the traditional RTOS round robin and deterministic priority schedulers, rate monotonic, earliest deadline first (EDF), constant bandwidth server (CBS), and simple SMP scheduling algorithms. The RTEMS scheduling framework allows the application developer to select the thread scheduling algorithm that best meets the application's space and time requirements. Ã‚&abreve;We will present how this framework can be used by researchers to integrate their own scheduling algorithm into RTEMS and test it using a scheduling simulator before deploying it on target hardware.","authors":["Gedare Bloom","Joel Sherrill"],"meta":["February 2014ACM SIGBED Review 11(1):20-25","DOI:10.1145/2597457.2597459"],"references":["234945214_EPICS_on_the_RTEMS_real-time_executive_for_multiprocessor_systems","220431427_Scheduling_Algorithms_for_Multiprogramming_in_Hard-Real-Time_Environment","3502389_Rate_monotonic_scheduling_algorithm_Exact_characterization_and_average_case_behavior","3042674_Priority_Inheritance_Protocols_An_Approach_to_Real-Time_Synchronization"]}