{"id":"297554464_On_Implementing_a_Monitor-Oriented_Programming_Framework_for_Actor_Systems","abstract":"We examine the challenges of implementing a framework for automating Monitor-Oriented Programming in the context of actor-based systems. The inherent modularity resulting from delineations induced by actors makes such systems well suited to this style of programming because monitors can surgically target parts of the system without affecting the computation in other parts. At the same time, actor systems pose new challenges for the instrumentation of the resp. monitoring observations and actions, due to the intrinsic asynchrony and encap-sulation that characterise the actor model. We discuss a prototype implementation that tackles these challenges for the case of Erlang OTP, an industry-strength platform for building actor-based concurrent systems. We also demonstrate the effectiveness of our Monitor-Oriented Programming framework by using it to augment the functionality of a third-party software written in Erlang.","authors":["Ian Cassar","Adrian Francalanza"],"meta":["June 2016Lecture Notes in Computer Science","DOI:10.1007/978-3-319-33693-0_12","Conference: International Conference on Integrated Formal Methods"],"references":["340514944_Java-MaC_A_Run-time_Assurance_Approach_for_Java_Programs","308338891_A_Theory_of_Monitors","282022709_On_Verifying_Hennessy-Milner_Logic_with_Recursion_at_Runtime","282022377_Runtime_Adaptation_for_Actor_Systems","282022215_Investigating_Instrumentation_Techniques_for_ESB_Runtime_Verification","312998514_Enforceable_security_policies","293100660_Fast-Forward_Runtime_Monitoring_-_An_Industrial_Case_Study","291200231_jUnitRV-Adding_Runtime_Verification_to_jUnit","289537662_A_Theory_of_Monitors_Extended_Abstract","271900356_Do_you_really_mean_what_you_actually_enforced"]}