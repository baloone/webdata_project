{"id":"224008187_Regular_Path_Queries_on_Large_Graphs","abstract":"The signicance of regular path queries (RPQs) on graph-like data structures has grown steadily over the past decade. RPQs are, often in restricted forms, part of graph-oriented query languages such as XQuery/XPath and SPARQL, and have applications in areas such as semantic, social, and biomedical networks. However, existing systems for evaluating RPQs are restricted either in the type of the graph (e.g., only trees), the type of regular expressions (e.g., only single steps), and/or the size of the graphs they can handle. No method has yet been developed that would be capable of efficiently evaluating general RPQs on large graphs, i.e., with millions of nodes/edges.\nWe present a novel approach for answering RPQs on large graphs. Our method exploits the fact that not all labels in a graph are equally frequent. We devise an algorithm which decomposes an RPQ into a series of smaller RPQs using rare labels, i.e., elements of the query with few matches, as way-points. A search thereby is decomposed into a set of smaller search problems which are tackled in a bi-directional fashion, supported by a set of graph indexes. Comparison of our algorithm with two approaches following the traditional methods for tackling such problems, i.e., the usage of automata, reveals that (a) the automata-based methods are not able to handle large graphs due to the amount of memory they require, and that (b) our algorithm outperforms the automata-based approach, often by orders of magnitude. Another advantage of our algorithm is that it can be parallelized easily.","authors":["Andre Koschmieder","Ulf Leser"],"meta":["June 2012","DOI:10.1007/978-3-642-31235-9_12","Conference: Int. Conf. on Scientific and Statistical Database Management"],"references":["321662505_Subgraph_Queries_by_Context-free_Grammars","281018220_A_Expressive_Languages_for_Path_Queries_over_Graph-Structured_Data","224045265_Fast_and_Practical_Indexing_and_Querying_of_Very_Large_Graphs","262348200_Finding_regular_simple_paths_in_graph_databases","243673356_Wiener_The_Lorel_Query_Language_for_Semistructured_Data","240226175_Erratum_Gene_prioritization_through_genomic_data_fusion","228057764_Introduction_To_Automata_Theory_Languages_And_Computation","225164160_SPARQLeR_Extended_Sparql_for_Semantic_Association_Discovery","224400589_SoQL_A_Language_for_Querying_and_Creating_Data_in_Social_Networks","224001120_Compilers_principles_and_techniques_and_tools"]}