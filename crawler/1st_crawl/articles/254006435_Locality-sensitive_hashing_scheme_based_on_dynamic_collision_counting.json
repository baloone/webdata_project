{"id":"254006435_Locality-sensitive_hashing_scheme_based_on_dynamic_collision_counting","abstract":"Locality-Sensitive Hashing (LSH) and its variants are well-known methods for solving the c-approximate NN Search problem in high-dimensional space. Traditionally, several LSH functions are concatenated to form a \"static\" compound hash function for building a hash table. In this paper, we propose to use a base of m single LSH functions to construct \"dynamic\" compound hash functions, and define a new LSH scheme called Collision Counting LSH (C2LSH). If the number of LSH functions under which a data object o collides with a query object q is greater than a pre-specified collision threhold l, then o can be regarded as a good candidate of c-approximate NN of q. This is the basic idea of C2LSH.\nOur theoretical studies show that, by appropriately choosing the size of LSH function base m and the collision threshold l, C2LSH can have a guarantee on query quality. Notably, the parameter m is not affected by dimensionality of data objects, which makes C2LSH especially good for high dimensional NN search. The experimental studies based on synthetic datasets and four real datasets have shown that C2LSH outperforms the state of the art method LSB-forest in high dimensional space.","authors":["Junhao Gan","Jianlin Feng","Qiong Fang","Wee Keong Ng"],"meta":["May 2012","DOI:10.1145/2213836.2213898"],"references":["224237522_HashFile_An_efficient_index_structure_for_multimedia_data","324405509_Concrete_Mathematics_a_Foundation_for_Computer_Science","319770399_Approximate_nearest_neighbors_towards_removing_the_curse_of_dimensionality","279401876_R-trees","277686108_iDistance","239536213_Foundations_Of_Multidimensional_And_Metric_Data_Structures","228343547_iDistance_An_Adaptive_B-tree_Based_Indexing_Method_for_Nearest_Neighbor_Search","228057769_Probability_Inequalities_for_Sums_of_Bounded_Random_Variables","221996154_Probability_Inequalities_For_Sums_of_Bounded_Random_Variables","221310821_Multi-Probe_LSH_Efficient_Indexing_for_High-Dimensional_Similarity_Search"]}