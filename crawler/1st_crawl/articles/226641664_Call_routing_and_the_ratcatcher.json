{"id":"226641664_Call_routing_and_the_ratcatcher","abstract":"Suppose we expect there to bep(ab) phone calls between locationsa andb, all choices ofa, b from some setL of locations. We wish to design a network to optimally handle these calls. More precisely, a “routing tree” is a treeT with set of leavesL, in which every other vertex has valency 3. It has “congestion” <k if for every edgee ofT, there are fewer thank calls which will be routed alonge, that is, between locationa, b in different components ofT/e. Deciding if there is a routing tree with congestion <k is NP-hard, but if the pairsab, withp(ab)>0 form the edges of a planar graphG, there is an efficient, strongly polynomial algorithm.\nThis is because the problem is equivalent to deciding if a ratcatcher can corner a rat loose in the walls of a house with floor planG, wherep(ab) is a thickness of the wallab. The ratcatcher carries a noisemaker of powerk, and the rat will not move through any wall in which the noise level is too high (determined by the total thickness of the intervening walls between this one and the noisemaker).\nIt follows that branch-width is polynomially computable for planar graphs—that too is NP-hard for general graphs.","authors":["P. D. Seymour","R. Thomas"],"meta":["June 1994Combinatorica 14(2):217-241","DOI:10.1007/BF01215352","SourceDBLP"],"references":["256935653_Graph_Minors_XI_Circuits_on_a_Surface","242615785_Stockmeyer_some_simplified_np-complete_graph_problems","222057470_Some_Simplified_NP-Complete_Graph_Problems","221499433_A_Polynomial_Algorithm_for_the_Min_Cut_Linear_Arrangement_of_Trees_Extended_Abstract","220617608_Fast_Algorithms_for_Shortest_Paths_in_Planar_Graphs_with_Applications","220077456_Quickly_excluding_a_forest","220076537_Graph_minors_X_Obstructions_to_tree-decomposition","4354977_A_Polynomial_Time_Algorithm_for_the_Min_Cut_Linear_Arrangement_of_Trees"]}