{"id":"333174060_Back_to_the_Basics_In_an_Effort_to_Improve_Student_Retention_in_Intro_to_Programming_Classes","abstract":"High failure and drop-out rates in introductory programming courses are a big concern for institutions, instructors and student's. After reviewing the literature presented within this paper, it became apparent that the problem is not merely a local challenge at our institution (with a 50+ percent drop/fail rate), but rather a universal phenomenon. Student performances in these intro courses show a large variation across the student population for a variety of reasons such as teaching methods, teacher competence, the student's self-discipline but most importantly student motivation. In his study, Alturki [1] investigated motivation using a two-factor theory, where factors causing satisfaction (motivators) and dissatisfaction (hygiene factors) were applied to students in his courses. The results showed that students with good intrinsic motivation had less difficulty completing the course than other students whereas problems arose with students who had poor motivation. The Alturki [1] study concluded that low motivation is a major problem that affects pass rate. Three steps were introduced to increase motivation. 1) reduce de-motivators, 2) increase intrinsic motivators by making assignments and projects more appealing to students (ie: visualization and real-world projects) and 3) introduce intrinsic motivators by asking students to submit sections of assignments weekly rather than all at once. After these improvements, the pass rate increased from 44% to 68%. AÂ´lvarez (2016) also determined that motivation is directly related to student satisfaction, and what could satisfy students more than not only learning, but passing a course with a good, if not exceptional grade. For these reasons, it is proposed to take a more simplistic, more motivating approach in teaching intro to computers by teaching students a simple, basic programming language called Xojo, while at the same time assigning real-world projects and giving extra credit assignments to keep scores, and therefore motivation high. INTRODUCTION Students success or failure in the introductory programming course often determines their majoring in computer science and related fields. If a student drops out, fails, or passes with difficulty, Malik [8] found that it is unlikely that the student will enroll in a follow-on course. Despite extensive research on factors that influence success of new students in introductory programming, it is still not fully understood what makes an introductory programming course positive and successful. However, Alturki [1] found that low success rates in introductory programming were attributed to many factors, including student motivation, the intrinsic difficulty of programming and the complexity of course structure. Suggestions to overcome these problems and improve success rates include using less complex course structure, employing more collaborative learning, redesigning course material, and improving teaching style. Alturki","authors":["Ed Lindoo"],"meta":["October 2018"],"references":["295902185_A_model_for_teaching_an_introductory_programming_course_using_ADRI","220613146_An_investigation_into_student_characteristics_affecting_novice_programming_performance","318528592_Metocognitive_support_accelerates_computer_assisted_learning_for_novice_programmers","311823811_Measuring_and_Improving_Student_Performance_in_an_Introductory_Programming_Course","280714662_Analyzing_the_Quality_of_Students_Interaction_in_a_Distance_Learning_Object-Oriented_Programming_Discipline","236941936_Addressing_drop-out_and_sustained_effort_issues_with_large_practical_groups_using_an_automated_delivery_and_assessment_system"]}