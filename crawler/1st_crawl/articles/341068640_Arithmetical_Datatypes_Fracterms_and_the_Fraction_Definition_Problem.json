{"id":"341068640_Arithmetical_Datatypes_Fracterms_and_the_Fraction_Definition_Problem","abstract":"Datatypes and abstract datatypes are positioned as results of importing aspects of universal algebra into computer science and software engineering. It is suggested that 50 years later, by way of a transfer in the opposite direction, outcomes of research on datatypes can be made available via elementary arithmetic. This idea leads to the notions of an arithmetical signature, an arithmetical datatype and an arithmetical abstract datatype and to algebraic specifications for such entities. The area of fractions in elementary arithmetic is chosen as an application area and while taking a common meadow of rational numbers as the basis, an arithmetical datatype equipped with an absorptive element. The use of datatypes and signatures makes syntax available for giving precise definitions in cases where lack of precision is common place. Fracterm is coined as the name for a fraction when primarily understood as a syntactic entity. The main contribution of the paper is to provide a detailed terminology of fracterms. Subsequently the fraction definition problem is stated, a distinction between explicit definitions of fractions and implicit definitions of fractions is made, and an outline of a survey of both forms of definitions of the notion of a fraction is given.","authors":["Jan Bergstra"],"meta":["April 2020Transmathematica","DOI:10.36285/tm.33"],"references":["338850613_Fractions_in_Transrational_Arithmetic","338567737_Arithmetical_datatypes_with_true_fractions","282892948_Why_is_learning_fraction_and_decimal_arithmetic_so_difficult","347456878_Addition_of_Fractions-the_Unrecognized_Problem","321531388_Didaktik_der_Bruchrechnung","283117920_Transformation_of_fractions_into_simple_fractions_in_divisive_meadows","277885262_Note_on_paraconsistency_and_reasoning_about_fractions","277808991_Partiality_and_Choice_Foundational_Contributions","268451688_Fracpairs_fractions_over_a_reduced_commutative_ring","267014303_Towards_a_Practice-based_Philosophy_of_Logic_Formal_Languages_as_a_Case_Study"]}