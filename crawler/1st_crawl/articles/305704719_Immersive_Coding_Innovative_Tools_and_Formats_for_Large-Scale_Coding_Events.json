{"id":"305704719_Immersive_Coding_Innovative_Tools_and_Formats_for_Large-Scale_Coding_Events","abstract":"The importance of coding as an instrument to develop computational thinking has motivated the proliferation of worldwide coding literacy campaigns, including Hour of Code, Europe Code Week, and Africa Code Week, endorsed by tech companies, governative organizations, and influential personalities.\n\nThe success of these campaigns has been bolstered by the use of playful teaching tools, such as Scratch and Code.org, that encourage interactivity in teaching, foster creativity, and give participants a sense of agency. While the initiatives are generally promoted through schools, the teaching process is often brought outside of the traditional classroom, in fact encouraging situations where teachers and students collaborate together, in an informal setting, in order to improve their coding skills. Exercises proposed through these tools are often presented in terms of a game or a puzzle to stimulate engagement.\n\nHowever, this approach to teaching is still bound to a one-to-one model, where students learn alone or in small groups. Our proposed vision is to transform the teaching of coding into a mass phenomenon. By leveraging the collaborative nature of the learning process, we envision large scale events that capitalize on the success of these initiatives and push the boundaries even further.\n\nIn this paper we describe an interactive, in-presence event format that has been put in practice in early 2016. This format introduces computational thinking and algorithmic problem solving to larger audiences by presenting coding puzzles in an enticing way.\n\nThe setup adopted is inspired by the de-facto standard coding puzzles introduced by Scratch and Code.org, in which users are challenged to create small programs by combining a set of provided visual instructions, the effect of which is directly shown on a side panel. In particular it follows the original Hour of Code scheme, where a main character (the \"actor\") navigates a chessboard with obstacles and traps, in order to reach a goal through the execution of a program.\n\nThe format requires the presence of a facilitator on stage, directing the game. A physical chessboard is also required, for instance as a grid drawn on the stage floor, on which stands an actor picked from the audience. Through video projection, the chessboard is displayed on the main screen, where a virtual chessboard composed of obstacles, traps, and goals is overlaid, creating an augmented-reality-like configuration. Movements and interactions of the actor appear to the audience as if they were performed on the screen.\n\nEach turn starts with the facilitator designing a maze. The crowd proceeds to implement an algorithm to solve it, effectively acting as a programmer. The algorithm is built and displayed using a visual programming tool shown on screen, while the crowd give hints to the facilitator using an instant polling mechanism. Then the crowd acts as a program interpreter, by calling out each step of the algorithm to let the actor execute it on the physical chessboard, which confirms or disproves the validity of the solution.\n\nBoth the video setup, the game's implementation, and technical details are presented and discussed in the paper. Finally, the first of the events based on this format, held in Urbino on March 2nd 2016, is described, in terms of participation and involvement.","authors":["Alessandro Bogliolo","Saverio Delpriori","Lorenz Cuno Klopfenstein","Brendan Dominic Paolini"],"meta":["July 2016","DOI:10.21125/edulearn.2016.2313","Conference: International Conference on Education and New Learning Technologies"],"references":["274377900_Computational_Thinking","274309848_Computational_Thinking","260205419_The_MOOC_model_for_digital_practice","220426817_Scratch_Programming_for_All","311262146_Hour_of_Code_We_can_solve_the_diversity_problem_in_computer_science","282748526_Integrating_computational_thinking_across_the_K-8_curriculum","262391814_A_publicprivate_partnership_for_expanding_computer_science_in_schools","262326020_Should_everybody_learn_to_code","262319766_Transforming_US_education_with_computer_science","262175270_Digital_playgrounds_for_early_computing_education"]}