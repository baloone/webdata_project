{"id":"222647795_Deterministic_Dictionaries","abstract":"It is shown that a static dictionary that offers constant-time access to n elements with w-bit keys and occupies O(n) words of memory can be constructed deterministically in O(n log n) time on a unit-cost RAM with word length w and a standard instruction set including multiplication. Whereas a randomized construction working in linear expected time was known, the running time of the best previous deterministic algorithm was Î©(n2). Using a standard dynamization technique, the first deterministic dynamic dictionary with constant lookup time and sublinear update time is derived. The new algorithms are weakly nonuniform; i.e., they require access to a fixed number of precomputed constants dependent on w. The main technical tools employed are unit-cost error-correcting codes, word parallelism, and derandomization using conditional expectations.","authors":["Torben Hagerup","Peter Bro Miltersen","Rasmus Pagh"],"meta":["October 2001Journal of Algorithms 41(1):69-85","DOI:10.1006/jagm.2001.1171","SourceDBLP"],"references":["221590448_Optimal_Bounds_for_the_Predecessor_Problem","221499559_Dynamic_Perfect_Hashing_Upper_and_Lower_Bounds","220770017_Priority_Queues_Small_Monotone_and_Trans-dichotomous","3671952_Static_dictionaries_on_AC0_RAMs_query_time_thetaslog_nlog_log_n_is_necessary_and_sufficient","2276825_Trans-Dichotomous_Algorithms_Without_Multiplication_-_Some_Upper_and_Lower_Bounds","330409011_Fast_deterministic_construction_of_static_dictionaries","330303824_Sorting_in_linear_time","262493823_The_Art_of_Computer_Programming","258239683_The_theory_of_error-correcting_codes_Parts_I_II","244958033_A_lower_bound_on_the_cell_probe_complexity_of_the_dictionary_problem","243449337_Static_dictionaries_on_ac_rams_query_time_ovog_nlog_log_nis_necessary_and_sufficient","238755831_Randomized_and_deterministic_simulation_of_prams_by_parallel_machines_with_restricted_granularity_of_parallel_memories","226459007_Derandomization_Witnesses_for_Boolean_Matrix_Multiplication_and_Construction_of_Perfect_Hash_Functions","225679201_Simpler_and_faster_dictionaries_on_the_AC0_RAM","222466434_New_hash_functions_and_their_use_in_authentication_and_set_equality","222457947_Universal_classes_of_hash_functions","222291339_Surpassing_the_information_theoretic_bound_with_fusion_trees","220994724_Universal_Hashing_and_k-Wise_Independent_Random_Variables_via_Integer_Arithmetic_without_Primes","220898203_Polynomial_Hash_Functions_Are_Reliable_Extended_Abstract","220779964_Fast_Deterministic_Construction_of_Static_Dictionaries","220688500_The_Art_of_Computer_Programming_Volume_III_Sorting_and_Searching","220427854_Storing_a_Sparse_Table","220110315_Worst-Case_Optimal_Insertion_and_Deletion_Methods_for_Decomposable_Searching_Problems","216457274_The_Art_Of_Computer_Programming_Vol3_Sorting_and_Searching","47842900_Simpler_and_Faster_Dictionaries_on_the_AC_RAM","47842892_Sorting_and_Searching_on_the_Word_RAM","47842768_Sorting_in_Linear_Time","47842237_Randomized_and_deterministic_simulations_of_PRAMs_by_parallel_machines_with_restricted_granularity_of_parallel_memories","30871667_Sorting_and_Searching","4355284_Storing_a_Sparse_Table_with_01_Worst_Case_Access_Time","2646679_A_Trade-Off_For_Worst-Case_Efficient_Dictionaries","2595139_A_New_Trade-Off_for_Deterministic_Dictionaries","2493417_Faster_Deterministic_Dictionaries","2455287_Tighter_Worst-case_Bounds_on_Dynamic_Searching_and_Priority_Queues","2284389_Error_Correcting_Codes_Perfect_Hashing_Circuits_and_Deterministic_Dynamic_Dictionaries"]}