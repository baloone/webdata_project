{"id":"276465157_Interactive_Join_Query_Inference_with_JIM","abstract":"Specifying join predicates may become a cumbersome task in many situations e.g., when the relations to be joined come from disparate data sources, when the values of the attributes carry little or no knowledge of metadata, or simply when the user is unfamiliar with querying formalisms. Such task is recurrent in many traditional data management applications, such as data integration, constraint inference, and database denormalization, but it is also becoming pivotal in novel crowdsourcing applications. We present Jim (Join Inference Machine), a system for interactive join specification tasks, where the user infers an n-ary join predicate by selecting tuples that are part of the join result via Boolean membership queries. The user can label tuples as positive or negative, while the system allows to identify and gray out the uninformative tuples i.e., those that do not add any information to the final learning goal. The tool also guides the user to reach her join inference goal with a minimal number of interactions.","authors":["Angela Bonifati","Radu Ciucanu","SÅ‚awek Staworko"],"meta":["August 2014Proceedings of the VLDB Endowment 7(13):1541-1544","DOI:10.14778/2733004.2733025"],"references":["278382859_Interactive_Inference_of_Join_Queries","228057515_Human_Powered_Sorts_and_Joins","220538633_EIRENE_Interactive_Design_and_Refinement_of_Schema_Mappings_via_Data_Examples","279586817_Query_by_Example","262389183_Leveraging_transitive_relations_for_crowdsourced_joins","244430963_Identifying_k-CNF_Formulas_From_Noisy_Examples","221395500_Query_by_Example","220344008_Queries_and_Concept_Learning"]}