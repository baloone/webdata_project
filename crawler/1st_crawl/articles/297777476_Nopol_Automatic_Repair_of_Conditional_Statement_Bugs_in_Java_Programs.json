{"id":"297777476_Nopol_Automatic_Repair_of_Conditional_Statement_Bugs_in_Java_Programs","abstract":"We propose NOPOL, an approach to automatic repair of buggy conditional statements (i.e., if-then-else statements). This approach takes a buggy program as well as a test suite as input and generates a patch with a conditional expression as output. The test suite is required to contain passing test cases to model the expected behavior of the program and at least one failing test case that reveals the bug to be repaired. The process of NOPOL consists of three major phases. First, NOPOL employs angelic fix localization to identify expected values of a condition during the test execution. Second, runtime trace collection is used to collect variables and their actual values, including primitive data types and objected-oriented features (e.g., nullness checks), to serve as building blocks for patch generation. Third, NOPOL encodes these collected data into an instance of a Satisfiability Modulo Theory (SMT) problem; then a feasible solution to the SMT instance is translated back into a code patch. We evaluate NOPOL on 22 real-world bugs (16 bugs with buggy IF conditions and 6 bugs with missing preconditions) on two large open-source projects, namely Apache Commons Math and Apache Commons Lang. Empirical analysis on these bugs shows that our approach can effectively fix bugs with buggy IF conditions and missing preconditions. We illustrate the capabilities and limitations of NOPOL using case studies of real bug fixes.","authors":["Jifeng Xuan","Matias Martinez","Favio Demarco","Maxime Cl√©ment"],"meta":["January 2016IEEE Transactions on Software Engineering 43(99)","DOI:10.1109/TSE.2016.2560811","Project: Automatic Program Repair"],"references":["309450255_Automatic_Repair_of_Real_Bugs_in_Java_A_Large-Scale_Experiment_on_the_Defects4J_Dataset","301772907_B-Refactoring_Automatic_Test_Code_Refactoring_to_Improve_Dynamic_Analysis","301428541_The_plastic_surgery_hypothesis","288827327_An_Empirical_Study_on_Real_Bug_Fixes","314384411_Synthesis_of_loop-free_programs","304552841_DirectFix_Looking_for_Simple_Program_Repairs","304286816_Repairing_Programs_with_Semantic_Code_Search_T","301392318_Automatically_generated_patches_as_debugging_aids_A_human_study","299909645_Staged_program_repair_with_condition_synthesis","299868538_Is_the_cure_worse_than_the_disease_overfitting_in_automated_program_repair"]}