{"id":"232958986_Solving_weighted_and_counting_variants_of_connectivity_problemsparameterized_by_treewidth_deterministically_in_single_exponential_time","abstract":"It is well known that many local graph problems, like Vertex Cover and\nDominating Set, can be solved in 2^{O(tw)}|V|^{O(1)} time for graphs G=(V,E)\nwith a given tree decomposition of width tw. However, for nonlocal problems,\nlike the fundamental class of connectivity problems, for a long time we did not\nknow how to do this faster than tw^{O(tw)}|V|^{O(1)}. Recently, Cygan et al.\n(FOCS 2011) presented Monte Carlo algorithms for a wide range of connectivity\nproblems running in time $c^{tw}|V|^{O(1)} for a small constant c, e.g., for\nHamiltonian Cycle and Steiner tree. Naturally, this raises the question whether\nrandomization is necessary to achieve this runtime; furthermore, it is\ndesirable to also solve counting and weighted versions (the latter without\nincurring a pseudo-polynomial cost in terms of the weights).\nWe present two new approaches rooted in linear algebra, based on matrix rank\nand determinants, which provide deterministic c^{tw}|V|^{O(1)} time algorithms,\nalso for weighted and counting versions. For example, in this time we can solve\nthe traveling salesman problem or count the number of Hamiltonian cycles. The\nrank-based ideas provide a rather general approach for speeding up even\nstraightforward dynamic programming formulations by identifying \"small\" sets of\nrepresentative partial solutions; we focus on the case of expressing\nconnectivity via sets of partitions, but the essential ideas should have\nfurther applications. The determinant-based approach uses the matrix tree\ntheorem for deriving closed formulas for counting versions of connectivity\nproblems; we show how to evaluate those formulas via dynamic programming.","authors":["Hans L. Bodlaender","Marek Cygan","Stefan Kratsch","Jesper Nederlof"],"meta":["November 2012","SourcearXiv"],"references":["249973087_Branch_and_Tree_Decomposition_Techniques_for_Discrete_Optimization","313726837_Combinatorial_optimization_of_graphs_of_bounded_treewidth","277473416_A_Linear-Time_Algorithm_for_Finding_Tree-Decompositions_of_Small_Treewidth","265545385_Randomized_Divide-and-Conquer_Improved_Path_Matching_and_Packing_Algorithms","262289301_Multiplying_matrices_faster_than_Coppersmith-Winograd","257650163_Invitation_to_Fixed-Parameter_Algorithms","256720714_Finding_paths_of_length_k_in_O2k_time","247931082_Introduction_to_automata_theory_languages_and_computation_-_2_ed","237292590_On_the_Number_of_Hamilton_Cycles_in_Bounded_Degree_Graphs","232958991_Fast_Hamiltonicity_checking_via_bases_of_perfect_matchings","225606786_Efficient_Exact_Algorithms_on_Planar_Graphs_Exploiting_Sphere_Cut_Decompositions","228345313_Catalan_structures_and_dynamic_programming_in_H-minor-free_graphs","228057843_Matching_is_as_Easy_as_Matrix_Inversion","228057698_Color-Coding","225793353_On_Feedback_Vertex_Set_New_Measure_and_New_Structures"]}