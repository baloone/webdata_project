{"id":"44257015_Rule_Systems_for_Run-Time_Monitoring_From_Eagle_to_RuleR","abstract":"In Barringer et al. (2004,Vol. 2937, LNCS), EAGLE was introduced as a general purpose rule-based temporal logic for specifying run-time monitors. A novel interpretative trace-checking scheme via stepwise transformation of an EAGLE monitoring formula was defined and implemented. However, even though EAGLE presents an elegant formalism for the expression of complex trace properties, EAGLE's interpretation scheme is complex and appears difficult to implement efficiently. In this article, we introduce RULER, a primitive conditional rule-based system, which has a simple and easily implemented algorithm for effective run-time checking, and into which one can compile a wide range of temporal logics and other specification formalisms used for run-time verification. As a formal demonstration, we provide a translation scheme for linear-time propositional temporal logic with a proof of translation correctness. We then introduce a parameterized version of RULER, in which rule names may have rule-expression or data parameters, which then coincides with the same expressivity as EAGLE with data arguments. RULER with just rule-expression parameters extend the expressiveness of RULER strictly beyond the class of context-free languages. For the language classes expressible in propositional RULER, the addition of rule-expression and data parameters enables more compact translations. Finally, we outline a few simple syntactic extensions of ‘core’ RULER that can lead to further conciseness of specification but still enabling easy and efficient implementation.","authors":["Howard Barringer","David Rydeheard","Klaus Havelund"],"meta":["June 2010Journal of Logic and Computation 20(3)","DOI:10.1093/logcom/exn076"],"references":["271613294_Checking_Finite_Traces_Using_Alternating_Automata","221047076_Runtime_Verification_of_C_Programs","220102475_MetateM_An_introduction","263251210_Checking_Finite_Traces_Using_Alternating_Automata_Special_Issue_on_Selected_Papers_from_the_First_International_Workshop_on_Runtime_Verification_Held_in_Paris_July_2001_RV'01","221653069_The_Declarative_Past_and_Imperative_Future_Executable_Temporal_Logic_for_Interactive_Systems","221351457_Introducing_Reactive_Kripke_Semantics_and_Arc_Accessibility","220430692_A_New_Normal-Form_Theorem_for_Context-Free_Phrase_Structure_Grammars","220388225_A_Normal_Form_for_Temporal_Logics_and_its_Applications_in_Theorem-Proving_and_Execution","220149694_On_state-alternating_context-free_grammars","2887437_A_Temporal_Logic_of_Nested_Calls_and_Returns"]}