{"id":"322133414_A_logical_relation_for_monadic_encapsulation_of_state_proving_contextual_equivalences_in_the_presence_of_runST","abstract":"We present a logical relations model of a higher-order functional programming language with impredicative polymorphism, recursive types, and a Haskell-style ST monad type with runST. We use our logical relations model to show that runST provides proper encapsulation of state, by showing that effectful computations encapsulated by runST are heap independent. Furthermore, we show that contextual refinements and equivalences that are expected to hold for pure computations do indeed hold in the presence of runST. This is the first time such relational results have been proven for a language with monadic encapsulation of state. We have formalized all the technical development and results in Coq.","authors":["Amin Timany","LÃ©o Stefanesco","Morten Krogh-Jespersen","Lars Birkedal"],"meta":["December 2017Proceedings of the ACM on Programming Languages 2(POPL):1-28","DOI:10.1145/3158152"],"references":["248478347_Reading_Writing_and_Relations_Towards_Extensional_Semantics_for_Effect_Analyses","225164165_Step-Indexed_Syntactic_Logical_Relations_for_Recursive_and_Quantified_Types","221336505_Relational_semantics_for_effect-based_program_transformations_with_dynamic_allocation","221336361_Relational_semantics_for_effect-based_program_transformations","221282338_Semantics_of_an_Effect_Analysis_for_Exceptions","220676813_Monadic_Encapsulation_of_Effects_A_Revised_Approach_Extended_Version","213879130_Semantics_of_Types_for_Mutable_State","213877728_A_very_modal_model_of_a_modern_major_general_type_system","50235669_Logical_Step-Indexed_Logical_Relations","3965918_A_Stratified_Semantics_of_General_References_Embeddable_in_Higher-Order_Logic","2295326_Lazy_Functional_State_Threads","316899254_A_relational_model_of_types-and-effects_in_higher-order_concurrent_separation_logic","316898653_Interactive_proofs_in_higher-order_concurrent_separation_logic","315341494_The_Essence_of_Higher-Order_Concurrent_Separation_Logic","312761451_Types_abstraction_and_parametric_polymorphism","312013370_Interactive_proofs_in_higher-order_concurrent_separation_logic","312013353_A_relational_model_of_types-and-effects_in_higher-order_concurrent_separation_logic","311482791_Higher-order_ghost_state","310824189_Higher-order_ghost_state","301829376_A_Kripke_logical_relation_for_effect-based_program_transformations","283831366_Autosubst_Reasoning_with_de_Bruijn_Terms_and_Parallel_Substitutions","282926793_Iris_Monoids_and_Invariants_as_an_Orthogonal_Basis_for_Concurrent_Reasoning","222450542_Hieb_R_The_revised_report_on_the_syntactic_theories_of_sequential_control_and_state_Theorectical_Computer_Science_1032_235-271","221252412_Integrating_Functional_and_Imperative_Programming","220997085_Step-Indexed_Kripke_Models_over_Recursive_Worlds","220986414_Lazy_Funtional_State_Threads_An_Abstract","220404293_An_indexed_model_of_recursive_types_for_foundational_proof-carrying_code","2763368_State_in_Haskell","2358279_Monadic_Encapsulation_in_ML"]}