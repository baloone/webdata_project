{"id":"281967047_Melange_A_Meta-language_for_Modular_and_Reusable_Development_of_DSLs","abstract":"Domain-Specific Languages (DSLs) are now developed for a wide variety of domains to address specific concerns in the development of complex systems. When engineering new DSLs, it is likely that previous efforts spent on the development of other languages could be leveraged, especially when their domains overlap. However, legacy DSLs may not fit exactly the end user requirements and thus require further extension, restriction, or specialization. While current language workbenches provide import mechanisms, they usually lack an explicit support for such customizations of imported artifacts. In this paper, we propose an approach for building DSLs by safely assembling and customizing legacy DSLs artifacts. This approach is based on typing relations that provide a reasoning layer for manipulating DSLs while ensuring type safety. On top of this reasoning layer, we provide an algebra of operators for extending, restricting, and assembling separate DSL artifacts. We implemented the typing relations and algebra into the Melange metalanguage. We illustrate Melange through the modular definition of an executable modeling language for the Internet Of Things domain. We show how it eases the definition of new DSLs by maximizing the reuse of legacy artifacts without introducing issues in terms of performance, technical ecosystem compatibility, or generated code volume.","authors":["Thomas Degueule","Benoit Combemale","Arnaud Blouin","Olivier Barais"],"meta":["October 2015","DOI:10.1145/2814251.2814252","Conference: SLE'15: 8th ACM SIGPLAN International Conference on Software Language Engineering"],"references":["308952502_Reusing_Model_Transformations_across_Heterogeneous_Metamodels","281712061_A_Language_Designer's_Workbench_A_One-Stop-Shop_for_Implementation_and_Verification_of_Language_Designs","272524233_Neverlang_A_framework_for_feature-oriented_language_development","262204234_Language_composition_untangled","257492115_Mashup_of_Meta-Languages_and_its_Implementation_in_the_Kermeta_Language_Workbench","248617517_Techniques_for_Metamodel_Composition","229062445_On_Model_Subtyping","226203447_On_Model_Typing","225357614_Generic_Model_Transformations_Write_Once_Reuse_Everywhere","221321535_The_Spoofax_Language_Workbench_Rules_for_Declarative_Specification_of_Languages_and_IDEs","221223925_Generic_Meta-modelling_with_Concepts_Templates_and_Mixin_Layers","221223504_Merging_Models_with_the_Epsilon_Merging_Language_EML","220868516_Code_Generation_from_UML_Models_with_Semantic_Variation_Points","220868268_Composing_Domain-Specific_Languages_for_Wide-Scope_Software_Engineering_Applications","220643666_MontiCore_A_framework_for_compositional_development_of_domain_specific_languages","220197490_Modularity_and_Reusability_in_Attribute_Grammars","220178482_The_syntax_definition_formalism_SDF","42782223_Model_Driven_Design_and_Aspect_Weaving","42741812_Meta-model_Pruning","2955524_Composing_Domain-specific_Design_Environments","293816919_Abstracting_Modelling_Languages_A_Reutilization_Approach","286245796_UML_with_meaning","281884992_MDE_to_Manage_Communications_with_and_between_Resource-Constrained_Systems","278037883_Towards_Metamodelling-In-The-Large_Interface-Based_Composition_for_Modular_Metamodel_Development","270802957_Projecting_a_Modular_Future","262324753_An_object-oriented_approach_to_language_compositions_for_software_language_engineering","262235534_A_research_roadmap_towards_achieving_scalability_in_model_driven_engineering","239289766_Reuse_in_model-to-model_transformation_languages_are_we_there_yet","235956984_Kompren_Modeling_and_Generating_Model_Slicers","234799190_Executable_UML_A_Foundation_for_Model-Driven_Architectures","234125583_A_Practical_Guide_to_SysML_the_Systems_Modeling_Language","226863491_The_Varieties_of_Programming_Language_Semantics_And_Their_Uses","224773145_Design_Patterns_Elements_of_Reusable_Object-Oriented_Software","224260059_Estimating_Footprints_of_Model_Operations","221555634_Program_Slicing","221554010_Empirical_assessment_of_MDE_in_industry","221321430_Language_extension_and_composition_with_language_workbenches","221320993_Xtext_implement_your_language_faster_than_the_quick_and_dirty_way","221108739_Component-Based_Programming_for_Higher-Order_Attribute_Grammars","220868234_UML_Vs_Classical_Vs_Rhapsody_Statecharts_Not_All_Models_Are_Created_Equal","220059329_Understanding_and_improving_UML_package_merge","29608310_Essay_on_Semantics_Definition_in_MDE_An_Instrumented_Approach_for_Model_Verification","2577830_Modular_Domain_Specific_Languages_and_Tools"]}