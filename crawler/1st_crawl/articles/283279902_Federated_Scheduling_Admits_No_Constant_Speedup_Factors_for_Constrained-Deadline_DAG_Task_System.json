{"id":"283279902_Federated_Scheduling_Admits_No_Constant_Speedup_Factors_for_Constrained-Deadline_DAG_Task_System","abstract":"In the federated scheduling approaches in multiprocessor systems, a task (1)\neither is restricted for sequential executions or (2) has exclusive access to\nthe assigned processors. There have been several positive results to conduct\ngood federated scheduling policies, with a constant speedup factor with respect\nto the optimal federated scheduling. This paper answers an open question: \"For\nconstrained-deadline task systems, is federated scheduling a good strategy,\ncompared to the optimal schedules?\" The answer is \"No!\". This paper presents an\nexample, which demonstrates that an optimal federated schedule in\nmultiprocessor scheduling has a speedup factor at least $\\Omega(\\min\\{M, N\\})$,\nwhere $N$ is the number of the given tasks and $M$ is the number of the given\nprocessors.","authors":["Jian-Jia Chen"],"meta":["November 2016Real-Time Systems 52(6)","DOI:10.1007/s11241-016-9255-2","SourcearXiv"],"references":["3506549_Preemptively_scheduling_hard-real-time_sporadic_tasks_on_one_processor","308837200_Federated_Scheduling_of_Sporadic_DAG_Task_Systems","308729952_The_federated_scheduling_of_systems_of_conditional_sporadic_DAG_tasks","300711761_The_Federated_Scheduling_of_Constrained-Deadline_Sporadic_DAG_Task_Systems","286161079_Analysis_of_Federated_and_Global_Scheduling_for_Parallel_Real-Time_Tasks","221298832_Resource_Augmentation_Bounds_for_Approximate_Demand_Bound_Functions"]}