{"id":"259875009_An_Efficient_Algorithm_for_the_Equation_Tree_Automaton_via_the_k-C-Continuations","abstract":"Champarnaud and Ziadi, and Khorsi et al. show how to compute the equation\nautomaton of word regular expression $E$ via the $k$-C-Continuations.\nKuske and Meinecke extend the computation of the equation automaton to a\nregular tree expression $E$ over a ranked alphabet $\\Sigma$ and produce a\n$O(R\\cdot|E|^2)$ time and space complexity algorithm, where $R$ is the maximal\nrank of a symbol occurring in $\\Sigma$ and $|E|$ is the size of $E$. In this\npaper, we give a full description of the algorithm based on the acyclic\nminimization of Revuz. Our algorithm, which is performed in an $O(|Q|\\cdot|E|)$\ntime and space complexity, where $|Q|$ is the number of states of the produced\nautomaton, is more efficient than the one obtained by Kuske and Meinecke.","authors":["Ludovic Mignot","Nadia Ouali Sebti","Djelloul Ziadi"],"meta":["January 2014","DOI:10.1007/978-3-319-08019-2_31","SourcearXiv","Conference: Conference on Computability in Europe","Project: Tree automata from regular expressions"],"references":["307174777_Tree_Automata_Techniques_and_Applications","265990523_From_Regular_Tree_Expression_to_Position_Tree_Automaton","253068166_The_Abstract_Theory_of_Automata","229124581_Linear_Automaton_Transformations","223122265_Minimisation_of_acyclic_deterministic_automata_in_linear_time","222734141_Partial_derivatives_of_regular_expressions_and_finite_automaton_constructions","222667898_Canonical_derivatives_partial_derivatives_and_finite_automaton_constructions","220980282_Regular_Expressions_into_Finite_Automata","220657842_Fast_equation_automaton_computation","220616541_Three_Partition_Refinement_Algorithms"]}