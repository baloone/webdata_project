{"id":"285936374_Refinement_quantified_logics_of_knowledge_and_belief_for_multiple_agents","abstract":"Given the \"possible worlds\" interpretation of modal logic, a refinement of a Kripke model is another Kripke model in which an agent has ruled out some possible worlds to be consistent with some new information. The refinements of a finite Kripke model have been shown to correspond to the results of applying arbitrary action models to the Kripke model [10]. Refinement modal logics add quantifiers over such refinements to existing modal logics. Work by van Ditmarsch, French and Pinchinat [11] gave an axiomatisation for the refinement modal logic over the class of unrestricted Kripke models, for a single agent. Recent work by Hales, French and Davies [13] extended these results, restricting the quantification to the class of doxastic and epistemic models for a single agent. Here we extend these results further, to the classes of doxastic and epistemic models for multiple agents. The generalisation to multiple agents for doxastic and epistemic models is not straightforward and requires novel techniques, particularly for the epistemic case. We provide sound and complete axiomatisations for the considered logics, and a provably correct translations to their underlying modal logics, corollaries of which are expressivity and decidability results.","authors":["J. Hales","Tim French","R. Davies"],"meta":["January 2014"],"references":["225113657_The_logic_of_Pit","221551311_What_can_we_achieve_by_arbitrary_announcements_A_dynamic_take_on_Fitch's_knowability","220975232_Automata_for_the_Modal_mu-Calculus_and_related_Results","220973426_Simulation_and_Information_Quantifying_over_Epistemic_Events","220706055_Future_Event_Logic_-_Axioms_and_Complexity","220705966_Proof_systems_for_the_coalgebraic_cover_modality","220370993_Refinement_Quantified_Logics_of_Knowledge","220430172_Group_announcement_logic","220151816_An_axiomatization_of_bisimulation_quantifiers_via_the_-calculus","47757659_To_know_or_not_to_know_Epistemic_approaches_to_security_protocol_verification"]}