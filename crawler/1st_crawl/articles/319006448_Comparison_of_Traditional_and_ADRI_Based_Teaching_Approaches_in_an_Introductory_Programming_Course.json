{"id":"319006448_Comparison_of_Traditional_and_ADRI_Based_Teaching_Approaches_in_an_Introductory_Programming_Course","abstract":"Aim/Purpose: This study introduced a new teaching and learning approach based on an ADRI (Approach, Deployment, Result, Improvement) model in an introductory programming (IP) course. The effectiveness of the new teaching and learning process was determined by collecting feedback from the IP instructors and by analyzing the final exam grades of the course.\n\nBackground: Learning to program is considered a difficult and challenging task for a considerable number of novice programmers. As a result, high failure and dropout rates are often reported in IP courses. Different studies have been conducted to investigate the issue. One of the reasons for this challenge is the multiple skills that students have to master in order to be able to build programs. These skills include programming knowledge and problem-solving strategies and being able to pay equal attention to these required skills in the IP course.\n\nMethodology: A focus group was conducted to obtain feedback from the IP instructors about the ADRI approach. The performance of the students who had completed the IP course before ADRI was compared with those who used the ADRI approach by undertaking a comparative analysis of their final exam grades.\n\nContribution: The study demonstrates that the new teaching and learning approach based on the ADRI model encourages students to pay equal attention to programming knowledge and problem-solving strategies, discouraging programming shortcuts and reducing high attrition rates (failure and dropout) in the IP course. \n\nFindings: The results of the focus group show that the instructors preferred the ADRI approach compared to the traditional approach. The final exam grades show that the students performed better in semesters which offered the ADRI approach as compared to those semesters without this approach.\n\nFuture Research: Future research will explore the ADRI approach in other fields of computer science studies, such as database and data structure, to determine if its impact has a wider application than just teaching introductory programming.","authors":["Sohail Iqbal Malik","Jo Coldwell-Neilson"],"meta":["August 2017Journal of Information Technology Education:Research 16(16):267-283","DOI:10.28945/3793"],"references":["313692557_Enhancing_practice_and_achievement_in_introductory_programming_using_an_ADRI_editor","312172848_Impact_of_a_New_Teaching_and_Learning_Approach_in_an_Introductory_Programming_Course","295902185_A_model_for_teaching_an_introductory_programming_course_using_ADRI","277013252_Impact_of_Assurance_of_Learning_AOL_in_Programming_Course_for_Novices","272910901_A_Self_Review_and_External_Review_Model_for_Teaching_and_Assessing_Novice_Programmers","240793117_Determining_the_Effectiveness_of_the_3D_Alice_Programming_Environment_at_the_Computer_Science_I_Level","237524669_PROBLEMS_IN_LEARNING_AND_TEACHING_PROGRAMMING_-_a_literature_study_for_developing_visualizations_in_the_Codewitz-Minerva_project","282928408_Examining_Interest_and_Grades_in_Computer_Science_1_A_Study_of_Pedagogy_and_Achievement_Goals","242608727_Log_on_education_teaching_the_nintendo_generation_to_program","241622540_Reducing_the_dropout_rate_in_an_introductory_programming_course"]}