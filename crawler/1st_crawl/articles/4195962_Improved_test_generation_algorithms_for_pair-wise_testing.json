{"id":"4195962_Improved_test_generation_algorithms_for_pair-wise_testing","abstract":"Software testing is expensive and time consuming. Given the different input parameters with multiple possible values for each parameter, performing exhaustive testing which tests all possible combinations is practically impossible. Generating an optimal test set which will effectively test the software system is therefore desired. Pair-wise testing is known for its effectiveness in different types of software testing. Pair-wise testing requires that for a given numbers of input parameters to the system, each possible combination of values for any pair of parameters be covered by at least one test case. Pair-wise testing is known for its effectiveness in different types of software testing. The problem of generating a minimum size test set for pair-wise testing is NP-complete. This paper presents new techniques for reducing the number of test cases for pair-wise testing. The paper shows an algorithm to generate test cases for 2-valued parameters and how orthogonal arrays and ordered designs may be used for deriving test cases for parameters with more than two values. Moreover, using mixed-level or asymmetric orthogonal array as tool, we present test set generation strategy for parameters with different number of values. A comparison of empirical results with previous test generation strategies \"AETG\" and \"IPO\" shows that the number of test cases generated with the proposed methodology is never higher and in some cases significantly lower than using AETG or IPO.","authors":["Soumen Maity","Amiya Nayak"],"meta":["December 2005","DOI:10.1109/ISSRE.2005.23","SourceIEEE Xplore","Conference: Software Reliability Engineering, 2005. ISSRE 2005. 16th IEEE International Symposium on","Project: Covering arrays and software testing"],"references":["220069313_Covering_Arrays_for_Efficient_Fault_Characterization_in_Complex_Configuration_Spaces","312617933_A_Practical_Strategy_for_Testing_Pair-wise_Coverage_of_Network_Interfaces","309309406_Factorial_Experiments_Derivable_From_Combinatorial_Arrangements_of_Arrays","284528211_Introduction_to_Combinatorial_Theory","280939966_Quality_Engineering_Using_Robust_Design","266556005_Large_sets_of_disjoint_designs_and_related_structures","262286444_Determination_of_Test_Configurations_for_Pair-Wise_Interaction_Coverage","232641099_In-Parameter-Order_A_Test_Generation_Strategy_for_Pairwise_Testing","220420559_Orthogonal_Latin_squares_an_application_of_experiment_design_to_compiler_testing","4043670_Variable_Strength_Interaction_Testing_of_Components"]}