{"id":"283656058_Programming_style_in_introductory_programming_courses","abstract":"This work addresses some issues in introductory programming courses. We discuss an essential attribute of the computer program, which is rarely paid attention to in the first steps of the programming courses – the programming style. The study discusses approaches for incorporating programming style consideration into the introductory programming courses. This is about how that initial training in programming builds foundations for correct algorithmization and program composition. We argue the definition of this term and discuss the benefits of the programming style and its role in the programming training. Style of programming is presented as a style of thinking manifested in the ability to outline the algorithm in a form, suitable for solving the problem in the terminology of a specific programming language. We also provide illustrative examples of programming style that can be incorporated in teaching materials of traditional \"Introduction to Programming\" courses. Here we don't focus to mastering skills of professional programmers, instead we focus to solidifying skills of ‘apprentices’","authors":["Teodosi Teodosiev","Anatoli Nachev"],"meta":["May 2015International Journal of Applied Engineering Research 10(10):26103-26114"],"references":["236895919_Some_Pitfalls_in_Introductory_Programming_Courses","319770462_Code_Complete_A_Practical_Handbook_of_Software_Construction","305161282_Investigation_of_the_relationship_between_program_correctness_and_programming_style","220808207_Computing_science_education_the_road_not_taken","220688556_The_Practice_of_Programming","220566283_Programming_Style_Examples_and_Counterexamples","31618246_Program_Style_Design_Efficiency_Debugging_and_Testing","4080278_Programming_style_changes_in_evolving_source_code"]}