{"id":"224483549_Empirical_Studies_of_Programming_Knowledge","abstract":"We suggest that expert programmers have and use two types of programming knowledge: 1) programming plans, which are generic program fragments that represent stereotypic action sequences in programming, and 2) rules of programming discourse, which capture the conventions in programming and govern the composition of the plans into programs. We report here on two empirical studies that attempt to evaluate the above hypothesis. Results from these studies do in fact support our claim.","authors":["Elliot Soloway","Kate Ehrlich"],"meta":["October 1984IEEE Transactions on Software Engineering SE-10(5):595 - 609","DOI:10.1109/TSE.1984.5010283","SourceIEEE Xplore"],"references":["281345564_Expert_and_Novice_Performance_in_Solving_Physics_Problems","247341954_Perception_in_Chess","242787295_Psychological_Complexity_of_Computer_Programs_An_Experimental_Methodology","242378465_Beyond_numbers_don_'_t_ask_how_many","239547409_Prose_Comprehension_Beyond_the_Word","234810788_Tapping_into_tacit_programming_knowledge","234791827_Third_time_charm_Stronger_prediction_of_programmer_performance_by_software_complexity_metrics","234783450_Beyond_numbers_Don't_ask_how_many_ask_why","232589295_Principles_of_Learning_and_Memory","230876454_Scripts_Plans_Goals_and_Understanding"]}