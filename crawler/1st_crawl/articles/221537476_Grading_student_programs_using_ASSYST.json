{"id":"221537476_Grading_student_programs_using_ASSYST","abstract":"The task of grading solutions to student programming exercises is laborious and error-prone. We have developed a software tool called ASSYST that is designed to relieve a tutor of much of the burden of assessing such programs. ASSYST offers a graphical interface that can be used to direct all aspects of the grading process, and it considers a wide range of criteria in its automatic assessment. Experience with the system has been encouraging.","authors":["David Jackson","Michelle Usher"],"meta":["March 1997ACM SIGCSE Bulletin 29(1):335-339","DOI:10.1145/268084.268210","SourceDBLP","Conference: Proceedings of the 28th SIGCSE Technical Symposium on Computer Science Education, 1997, San Jose, California, USA, February 27 - March 1, 1997"],"references":["234770244_Software_complexity_assessment_annotated_bibliography","255676005_Automating_the_Execution_of_Student_Programs","242525848_Courseware_to_support_the_teaching_of_programming","228328538_A_Complexity_Measure","223772235_Using_software_tools_to_automate_the_assessment_of_student_programs","223081013_Automatic_Programming_Assessment_Metrics","222949948_A_Software_System_for_Grading_Student_Computer_Programs","221537610_The_TRY_System_-_or_-_How_to_Avoid_Testing_Student_Programs","220423926_A_Style_Analysis_of_C_Programs","220069457_Experience_with_Path_Analysis_and_Testing_of_Programs","3189324_Experience_with_Path_Analysis_and_Testing_of_Programs"]}