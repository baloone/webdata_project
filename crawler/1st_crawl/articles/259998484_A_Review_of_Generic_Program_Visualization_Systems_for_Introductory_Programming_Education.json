{"id":"259998484_A_Review_of_Generic_Program_Visualization_Systems_for_Introductory_Programming_Education","abstract":"This article is a survey of program visualization systems intended for teaching beginners about the runtime behavior of computer programs. Our focus is on generic systems that are capable of illustrating many kinds of programs and behaviors. We inclusively describe such systems from the last three decades and review findings from their empirical evaluations. A comparable review on the topic does not previously exist; ours is intended to serve as a reference for the creators, evaluators, and users of educational program visualization systems. Moreover, we revisit the issue of learner engagement which has been identified as a potentially key factor in the success of educational software visualization and summarize what little is known about engagement in the context of the generic program visualization systems for beginners that we have reviewed; a proposed refinement of the frameworks previously used by computing education researchers to rank types of learner engagement is a side product of this effort. Overall, our review illustrates that program visualization systems for beginners are often short-lived research prototypes that support the user-controlled viewing of program animations; a recent trend is to support more engaging modes of user interaction. The results of evaluations largely support the use of program visualization in introductory programming education, but research to date is insufficient for drawing more nuanced conclusions with respect to learner engagement. On the basis of our review, we identify interesting questions to answer for future research in relation to themes such as engagement, the authenticity of learning tasks, cognitive load, and the integration of program visualization into introductory programming pedagogy.","authors":["Juha Sorva","Ville Karavirta","Lauri Malmi"],"meta":["October 2013ACM Transactions on Computing Education 13(4):1-64","DOI:10.1145/2490822"],"references":["320663985_An_Empirical_Evaluation_of_Visual_Metaphors_in_the_Animation_of_Roles_of_Variables","336090610_The_Everydayness_of_Threshold_Concepts_State_as_an_Example_from_Computer_Science","313099966_The_Power_of_the_Solo_Model_to_Address_Fundamental_Measurement_Issues","311475588_VINCE---an_on-line_tutorial_tool_for_teaching_introductory_programming_poster","311475317_CMeRun_program_logic_debugging_courseware_for_CS1CS2_students","311471934_Scaffolding_with_object_diagrams_in_first_year_programming_classes_some_unexpected_results","311471150_The_locker_metaphor_to_teach_dynamic_memory","311471100_Tools_for_visual_exploration_of_scope_and_parameter_passing_in_a_programming_languages_course","311463629_ETV_a_program_trace_player_for_students","305298521_Experience_with_the_DYNAMOD_Program_Animator"]}