{"id":"220617172_Upper_and_Lower_Time_Bounds_for_Parallel_Random_Access_Machines_without_Simultaneous_Writes","abstract":"One of the frequently used models for a synchronous parallel computer is that of a parallel random access machine, where each processor can read from and write into a common random access memory. Different processors may read the same memory location at the same time, but simultaneous writing is disallowed. We show that even if we allow nonuniform algorithms, an arbitrary number of processors, and arbitrary instruction sets, Ω (log n) is a lower bound on the time required to compute various simple functions, including sorting n keys and finding the logical ”or” of n bits. We also prove a surprising time upper bound of.72 log 2 n steps for these functions, which beats the obvious algorithms requiring log 2 n steps. If simultaneous writes are allowed, there are simple algorithms to compute these functions in a constant number of steps.","authors":["Stephen A. Cook","Cynthia Dwork","Rüdiger Reischuk"],"meta":["February 1986SIAM Journal on Computing 15(1):87-97","DOI:10.1137/0215006","SourceDBLP"],"references":["242411330_A_lower_time_bound_for_parallel_random_access_machines_without_simultaneous_writes","234817192_Synchronous_parallel_computation","234794741_Parallel_speedup_of_sequential_machines_a_defense_of_parallel_computation_thesis","222853827_Finding_the_maximum_merging_and_sorting_in_a_parallel_computation_model","221590466_Parallelism_in_Random_Access_Machines","220692776_Parallel_complexity_theory","220430509_Universal_interconnection_pattern_for_parallel_computers"]}