{"id":"312620721_ImageJ2_ImageJ_for_the_next_generation_of_scientific_image_data","abstract":"Background\nImageJ is an image analysis program extensively used in the biological sciences and beyond. Due to its ease of use, recordable macro language, and extensible plug-in architecture, ImageJ enjoys contributions from non-programmers, amateur programmers, and professional developers alike. Enabling such a diversity of contributors has resulted in a large community that spans the biological and physical sciences. However, a rapidly growing user base, diverging plugin suites, and technical limitations have revealed a clear need for a concerted software engineering effort to support emerging imaging paradigms, to ensure the software’s ability to handle the requirements of modern science.\n\nResults\nWe rewrote the entire ImageJ codebase, engineering a redesigned plugin mechanism intended to facilitate extensibility at every level, with the goal of creating a more powerful tool that continues to serve the existing community while addressing a wider range of scientific requirements. This next-generation ImageJ, called “ImageJ2” in places where the distinction matters, provides a host of new functionality. It separates concerns, fully decoupling the data model from the user interface. It emphasizes integration with external applications to maximize interoperability. Its robust new plugin framework allows everything from image formats, to scripting languages, to visualization to be extended by the community. The redesigned data model supports arbitrarily large, N-dimensional datasets, which are increasingly common in modern image acquisition. Despite the scope of these changes, backwards compatibility is maintained such that this new functionality can be seamlessly integrated with the classic ImageJ interface, allowing users and developers to migrate to these new methods at their own pace.\n\nConclusions\nScientific imaging benefits from open-source programs that advance new method development and deployment to a diverse audience. ImageJ has continuously evolved with this idea in mind; however, new and emerging scientific requirements have posed corresponding challenges for ImageJ’s development. The described improvements provide a framework engineered for flexibility, intended to support these requirements as well as accommodate future needs. Future efforts will focus on implementing new algorithms in this framework and expanding collaborations with other popular scientific software suites.\n\nElectronic supplementary material\nThe online version of this article (doi:10.1186/s12859-017-1934-z) contains supplementary material, which is available to authorized users.","authors":["Curtis Rueden","Johannes Schindelin","Mark Hiner","Barry E. Dezonia"],"meta":["November 2017BMC Bioinformatics 18(1)","DOI:10.1186/s12859-017-1934-z","Project: ImageJ"],"references":["320925014_Reconstruction_of_cell_lineages_and_behaviors_underlying_arthropod_limb_outgrowth_with_multi-view_light-sheet_imaging_and_tracking","311500251_SCIFIO_An_extensible_framework_to_support_scientific_image_formats","308939800_TrackMate_An_Open_and_Extensible_Platform_for_Single-Particle_Tracking","319770101_Working_Effectively_with_Legacy_Code","315832520_IJ-OpenCV_Combining_ImageJ_and_OpenCV_for_processing_images_in_biomedicine","315776891_Trainable_Weka_Segmentation_A_machine_learning_tool_for_microscopy_pixel_classification","315299002_The_Fallacy_of_Premature_Optimization","313826430_HiPSC-derived_retinal_ganglion_cells_grow_dendritic_arbors_and_functional_axons_on_a_tissue-engineered_scaffold","311356703_Quantitating_the_cell_turning_images_into_numbers_with_ImageJ_Quantitating_with_ImageJ","309590726_ImageJ-MATLAB_A_bidirectional_framework_for_scientific_image_analysis_interoperability"]}