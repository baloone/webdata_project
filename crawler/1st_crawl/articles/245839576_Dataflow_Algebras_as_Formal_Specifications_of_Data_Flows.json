{"id":"245839576_Dataflow_Algebras_as_Formal_Specifications_of_Data_Flows","abstract":"A framework is presented for constructing formal specifications of systems in a way that matches the use of Data Flow Diagrams to represent their structures, and which is therefore particularly applicable to parallel and distributed systems. The basis of this framework is that the behaviour of a system may be defined in terms of the possible patterns of data flows from one process to another via the channels that connect them. These patterns are specified by means of regular expressions that are structured as production rules, and that form a data flow algebra whose properties are described. The principal operations in this algebra are sequencing, alternation, repetition, interleaving, intersection and synchronisation, and examples are given to illustrate the use of these constructs. The grammars generated by these productions can be extended to attribute grammars, in which the attributes constitute specifications of the semantics of components of the system, which can be defined using any of a variety of existing specification methodologies.","authors":["A. J. Cowling"],"meta":[],"references":["239066689_Higher-Level_Paradigms_for_Deadlock-Free_High-Performance_Systems","221211102_Using_Yourdon_and_Z_an_Approach_to_Formal_Specification","221211083_Structured_Analysis_-_A_Draft_Method_for_Writing_Z_Specifications","220691810_Object-Oriented_Software_Engineering_-_A_Use-Case_Driven_Approach","220070209_Conceptual_Modeling_in_the_Context_of_Software_Development","34018832_The_integration_of_software_specification_verification_and_testing_techniques_with_software_requirements_and_design_processes","3299503_Iterative_Instructions_in_the_Manchester_Dataflow_Computer"]}