{"id":"309961684_Online_Scheduling_for_Shuffle_Grouping_in_Distributed_Stream_Processing_Systems","abstract":"Shuffle grouping is a technique used by stream processing frameworks to share input load among parallel instances of stateless operators. With shuffle grouping each tuple of a stream can be assigned to any available operator instance, independently from any previous assignment. A common approach to implement shuffle grouping is to adopt a Round-Robin policy, a simple solution that fares well as long as the tuple execution time is almost the same for all the tuples. However, such an assumption rarely holds in real cases where execution time strongly depends on tuple content. As a consequence, parallel stateless operators within stream processing applications may experience unpredictable unbalance that, in the end, causes undesirable increase in tuple completion times. In this paper we propose Online Shuffle Grouping (OSG), a novel approach to shuffle grouping aimed at reducing the overall tuple completion time. OSG estimates the execution time of each tuple, enabling a proactive and online scheduling of input load to the target operator instances. Sketches are used to efficiently store the otherwise large amount of information required to schedule incoming load. We provide a probabilistic analysis and illustrate, through both simulations and a running prototype, its impact on stream processing applications.","authors":["Nicolo Rivetti","Emmanuelle Anceaume","Yann Busnel","Leonardo Querzoni"],"meta":["November 2016","DOI:10.1145/2988336.2988347","Conference: the 17th International Middleware Conference"],"references":["277931399_Efficient_Key_Grouping_for_Near-Optimal_Load_Balancing_in_Stream_Processing_Systems","274572323_The_Power_of_Both_Choices_Practical_Load_Balancing_for_Distributed_Stream_Processing_Engines","339504954_Data_Streams_Algorithms_and_Applications","276474420_Analysis_of_Randomized_Join-The-Shortest-Queue_JSQ_Schemes_in_Large_Heterogeneous_Processor_Sharing_Systems","271630085_Partitioning_functions_for_stateful_data_parallelism_in_stream_processing","269157411_Cluster_IO_with_River","262246146_A_Catalog_of_Stream_Processing_Optimizations","226972038_An_Improved_Data_Stream_Summary_The_Count-Min_Sketch_and_Its_Applications","223084975_Bounds_for_Naive_Multiple_Machine_Scheduling_with_Release_Times_and_Deadlines","222823543_An_improved_data_stream_summary_The_Count-Min_Sketch_and_its_applications"]}