{"id":"304923601_A_Semantic_Framework_for_Proof_Evidence","abstract":"Theorem provers produce evidence of proof in many different formats, such as proof scripts, natural deductions, resolution refutations, Herbrand expansions, and equational rewritings. In implemented provers, numerous variants of such formats are actually used: consider, for example, such variants of or restrictions to resolution refutations as binary resolution, hyper-resolution, ordered-resolution, paramodulation, etc. We propose the foundational proof certificates (FPC) framework for defining the semantics of a broad range of proof evidence. This framework allows both producers of proof certificates and the checkers of those certificates to have a clear formal definition of the semantics of a wide variety of proof evidence. Employing the FPC framework will allow one to separate a proof from its provenance and to allow anyone to construct their own proof checker for a given style of proof evidence. The foundation on which FPC relies is that of proof theory, particularly recent work into focused proof systems: such proof systems provide protocols by which a checker extracts information from the certificate (mediated by the so called clerks and experts) as well as performs various deterministic and non-deterministic computations. While we shall limit ourselves to first-order logic in this paper, we shall not limit ourselves in many other ways. The FPC framework is described for both classical and intuitionistic logics and for proof structures as diverse as resolution refutations, natural deduction, Frege proofs, and equality proofs.","authors":["Zakaria Chihani","Dale Miller","Fabien Renaud"],"meta":["October 2017Journal of Automated Reasoning 59(3)","DOI:10.1007/s10817-016-9380-6","Project: ProofCert"],"references":["305341619_Proof_Certificates_for_Equality_Reasoning","344552720_Basic_Proof_Theory","329654166_The_Definition_of_Standard_ML","321876490_Edinburgh_LCF_A_Mechanised_Logic_of_Computation","319395207_Denotational_Semantics_The_Scott-Strachey_Approach_to_Programming_Language_Theory","319394434_Higher-Order_Logic_Programming","312828944_From_LCF_to_HOL_A_short_history","307626807_Proof_Checking_and_Logic_Programming","300125833_Proof_Checking_and_Logic_Programming","296519351_Minlog","286612891_The_Future_of_Logic_Foundation-Independence","282864366_The_Proof_Certifier_Checkers","282863310_Focused_Labeled_Proof_Systems_for_Modal_Logic","285335895_Sequent_calculi_for_second_order_logic","283622772_Proof_Outlines_as_Proof_Certificates_A_System_Description"]}