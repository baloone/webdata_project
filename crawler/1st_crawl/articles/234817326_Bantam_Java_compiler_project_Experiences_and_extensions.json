{"id":"234817326_Bantam_Java_compiler_project_Experiences_and_extensions","abstract":"A compiler course is a critical component in an undergraduate computer science education. In this paper, we discuss our experiences in teaching a compiler course using the Bantam Java compiler project, which enables students to write a Java-like compiler. Both instructors and students have found Bantam Java effective in their courses. We describe several significant extensions to the Bantam Java toolset, which give instructors more flexibility and also lower their overhead when using it in a course. These improvements include an extended source language, a Java Virtual Machine target, an Ant-based build process, and optimization and interpreter assignments.","authors":["Marc L. Corliss","David Furcy","Joshua Davis","Lori Pietraszek"],"meta":["January 2010Journal of Computing Sciences in Colleges 25(6):159-166"],"references":["261860552_Exposing_GAPS_exploring_legacies_paradoxes_of_writing_use_in_computing_education","250767020_A_Multidisciplinary_Model_for_Using_Robotics_in_Engineering_Education","270956453_The_GNU_Compiler_for_the_Java_Programming_Language","267819327_Computing_Research_and_Human_Resources_The_Current_Situation","262245647_Thoughts_on_and_tools_for_teaching_compiler_design","262238191_Lightscameracomputer_science_using_films_to_introduce_computer_science_to_non-majors","262237239_Using_Visual_Logic_C_to_teach_programming_logic_in_an_introductory_CS_course","261086069_JGRASP_an_integrated_development_environment_with_visualizations_for_teaching_java_in_CS1_CS2_and_beyond","255587539_Using_Robotics_to_Introduce_AI_Topics_to_a_Wider_Audience","250888540_Collected_Wisdom_Assessment_Tools_for_Computer_Science_Programs"]}