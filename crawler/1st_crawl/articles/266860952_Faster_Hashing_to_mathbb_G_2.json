{"id":"266860952_Faster_Hashing_to_mathbb_G_2","abstract":"An asymmetric pairing \\(e\\colon{\\mathbb{G}}_2\\times{\\mathbb{G}}_1\\to{\\mathbb{G}}_T\\) is considered such that \\({\\mathbb{G}}_1=E({\\mathbb F}_p)[r]\\) and \\({\\mathbb{G}}_2=\\tilde E({\\mathbb F}_{p^{k/d}})[r]\\), where k is the embedding degree of the elliptic curve \\(E/{\\mathbb F}_p\\), r is a large prime divisor of \\(\\# E({\\mathbb F}_p)\\), and \\(\\tilde E\\) is the degree-d twist of E over \\({\\mathbb F}_{p^{k/d}}\\) with \\(r \\mid \\tilde E ({\\mathbb F}_{p^{k/d}} )\\). Hashing to \\({\\mathbb{G}}_1\\) is considered easy, while hashing to \\({\\mathbb{G}}_2\\) is done by selecting a random point Q in \\(\\tilde E({\\mathbb F}_{p^{k/d}})\\) and computing the hash value cQ, where c·r is the order of \\(\\tilde E({\\mathbb F}_{p^{k/d}})\\). We show that for a large class of curves, one can hash to \\({\\mathbb{G}}_2\\) in \\(\\textup{O}(1/\\varphi (k)\\log c)\\) time, as compared with the previously fastest-known \\(\\textup{O}(\\log p)\\). In the case of BN curves, we are able to double the speed of hashing to \\({\\mathbb{G}}_2\\). For higher-embedding-degree curves, the results can be more dramatic. We also show how to reduce the cost of the final-exponentiation step in a pairing calculation by a fixed number of field multiplications.","authors":["Laura Fuentes-Castañeda","Edward Knapp","Francisco Rodríguez-Henríquez"],"meta":["January 2012","DOI:10.1007/978-3-642-28496-0_25","Conference: International Workshop on Selected Areas in Cryptography"],"references":["228350188_Software_Implementation_of_Pairings_1","225706709_Endomorphisms_for_Faster_Elliptic_Curve_Cryptography_on_a_Large_Class_of_Curves","225699216_Endomorphisms_for_Faster_Elliptic_Curve_Cryptography_on_a_Large_Class_of_Curves","225673791_A_Taxonomy_of_Pairing-Friendly_Elliptic_Curves","224395309_Efficient_and_Generalized_Pairing_Computation_on_Abelian_Varieties","221425409_Pairing_Lattices","221425406_Implementing_Cryptographic_Pairings_over_Barreto-Naehrig_Curves","221425383_On_the_Final_Exponentiation_for_Calculating_Pairings_on_Ordinary_Elliptic_Curves","221425359_Constructing_Brezing-Weng_Pairing-Friendly_Elliptic_Curves_Using_Elements_in_the_Cyclotomic_Field","221274540_Pairing-Friendly_Elliptic_Curves_of_Prime_Order","220478991_The_Weil_Pairing_and_Its_Efficient_Calculation","220378229_A_Family_of_Implementation-Friendly_BN_Elliptic_Curves","220337065_Fast_Hashing_to_G_2_on_Pairing-Friendly_Curves","220336906_Faster_Squaring_in_the_Cyclotomic_Subgroup_of_Sixth_Degree_Extensions","220336028_Efficient_Pairing_Computation_on_Supersingular_Abelian_Varieties","220335317_A_Family_of_Implementation-Friendly_BN_Elliptic_Curves","220333760_Faster_Explicit_Formulas_for_Computing_Pairings_over_Ordinary_Curves","220333405_On_the_final_exponentiation_for_calculating_pairings_on_ordinary_elliptic_curves","50863306_Factoring_Polynomials_with_Rational_Coefficients","40721105_Efficient_Algorithms_for_Pairing-Based_Cryptosystems","3086034_The_Eta_Pairing_Revisited","2370388_New_explicit_conditions_of_elliptic_curve_traces_for_FR-reduction","312628094_Efficient_algorithms_for_pairing-based_cryptosystems","312621829_Software_implementation_of_pairings","268914742_Geometrie_der_Zahlen_Unveranderter_Nachdruck_der_1_Auflage","242688573_Elliptic_Curve_Public_Key_Cryptography","227161686_Constructing_Pairing-Friendly_Elliptic_Curves_with_Embedding_Degree_10","224093766_Optimal_Pairings","221425405_High-Speed_Software_Implementation_of_the_Optimal_Ate_Pairing_over_Barreto-Naehrig_Curves","220963016_Pairing-Based_Cryptography_at_High_Security_Levels","220482737_Constructing_pairing-friendly_elliptic_curves_with_embedding_degree_10","220406615_On_Vectorial_Addition_Chains","220336834_Constructing_Brezing-Weng_pairing_friendly_elliptic_curves_using_elements_in_the_cyclotomic_field","220334494_Squaring_in_cyclotomic_subgroups","44559867_Zur_Geometrie_der_Zahlen"]}