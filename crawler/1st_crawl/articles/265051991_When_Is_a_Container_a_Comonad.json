{"id":"265051991_When_Is_a_Container_a_Comonad","abstract":"Abbott, Altenkirch, Ghani and others have taught us that many parameterized\ndatatypes (set functors) can be usefully analyzed via container representations\nin terms of a set of shapes and a set of positions in each shape. This paper\nbuilds on the observation that datatypes often carry additional structure that\ncontainers alone do not account for. We introduce directed containers to\ncapture the common situation where every position in a data-structure\ndetermines another data-structure, informally, the sub-data-structure rooted by\nthat position. Some natural examples are non-empty lists and node-labelled\ntrees, and data-structures with a designated position (zippers). While\ncontainers denote set functors via a fully-faithful functor, directed\ncontainers interpret fully-faithfully into comonads. But more is true: every\ncomonad whose underlying functor is a container is represented by a directed\ncontainer. In fact, directed containers are the same as containers that are\ncomonads. We also describe some constructions of directed containers. We have\nformalized our development in the dependently typed programming language Agda.","authors":["Danel Ahman","James Chapman","Tarmo Uustalu"],"meta":["August 2014Logical Methods in Computer Science 10(3)","DOI:10.1007/978-3-642-28729-9_5","SourcearXiv","Conference: Proceedings of the 15th international conference on Foundations of Software Science and Computational Structures"],"references":["276452345_Coalgebraic_Update_Lenses","266016147_On_the_Zappa-Szep_product","248801042_Towards_a_practical_programming_language_based_on_dependent_type_theory","225569209_Categories_of_Containers","221540984_The_Essence_of_Dataflow_Programming","221442665_Indexed_Containers","221440125_Constructing_Polymorphic_Programs_with_Quotient_Types","221335531_Comonadic_functional_attribute_evaluation","221282315_Dependently_Typed_Programming_in_Agda","220676535_The_Zipper","220444961_for_Data_Differentiating_Data_Structures","220369534_Comonadic_Notions_of_Computation","47865382_A_Categorical_Outlook_on_Cellular_Automata","45859063_Polynomial_functors_and_polynomial_monads","27247698_Wellfounded_Trees_and_Dependent_Polynomial_Functors","286096412_Update_monads_Cointerpreting_directed_containers","277928993_Indexed_containers","275633119_Distributive_laws_of_directed_containers","266860871_Polynomial_Functors_and_Trees","266257297_Sulla_costruzione_dei_gruppi_prodotto_di_due_dati_sottogruppi_permutabili_tra_loro","265279550_Constructing_Universes_for_Generic_Programming","262287068_Categorical_views_on_computations_on_trees","251307607_Distributive_laws","250318325_The_Essence_of_Dataflow_Programming_Short_Version","242807392_Normal_functors_power_series_and_l-calculus","231871629_A_unified_treatment_of_transfinite_constructions_for_free_algebras_free_monoids_colimits_associated_sheaves_and_so_on","225747770_Foncteurs_analytiques_et_especes_de_structures","223890845_Containers_Constructing_Strictly_Positive_Types","222945327_Wellfounded_trees_in_categories","222006598_Representing_inductively_defined_sets_by_wellorderings_in_Martin-Lof's_type_theory","221278498_Proving_Properties_about_Lists_Using_Containers","220898397_Categorical_Views_on_Computations_on_Trees_Extended_Abstract","220165596_Coproducts_of_Ideal_Monads","51910793_Olynomials_in_categories_with_pullbacks","34000832_Categories_of_containers","2296963_Computational_Comonads_and_Intensional_Semantics"]}