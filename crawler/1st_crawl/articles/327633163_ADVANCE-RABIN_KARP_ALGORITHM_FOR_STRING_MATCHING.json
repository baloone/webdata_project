{"id":"327633163_ADVANCE-RABIN_KARP_ALGORITHM_FOR_STRING_MATCHING","abstract":"In the vast field of computer science, carries lots of work with that having lots of problem with it. one\nof the traditional problem is string matching that looks very simple but internally major issue in the \nspeedy world. The string matching problem operates usually on the text \n(0..m-1\ntext and checks for occurrence of pattern. If pattern not found, pattern will move one shift towards the \nright. In this scenario, it works recursively till reach towards the right or left end of text. For h\nproblem of string matching there are number of approaches, one of them called Rabin karp but \nworking of rabin karp have the dark\nintegers or alphabets taking more execution time. So in this\nString which is purely alphabetic and hybrid using Advance\nthan Rabin-karp.","authors":["Mohammad Shabaz","Er Neha Kumari"],"meta":["September 2017"],"references":["225759965_S2S_Structural-to-syntactic_matching_similar_documents","20923774_Basic_Local_Aligment_Search_Tool","300710418_Program_Plagiarism_Detection_using_Data_Dependency_Matrix_Method","232652294_Towards_Faster_String_Matching_for_Intrusion_Detection_or_Exceeding_the_Speed_of_Snort","224103840_Efficient_randomized_pattern-matching_algorithms","221562980_Polymorphic_string_matching","221538318_Patterns_of_plagiarism"]}