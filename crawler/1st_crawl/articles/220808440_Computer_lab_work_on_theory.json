{"id":"220808440_Computer_lab_work_on_theory","abstract":"This paper describes an attempt to introduce computer lab exercises on NP-completeness proofs in a class already containing computer lab exercises on algorithms and data structures. In the article we are interested in the answer of the following question: Can the students feel that their understanding of theoretical computer science is improved by performing a computer lab exercise on the subject? The class is mandatory for students in a computer science program, and is taken by about 130 students each year. Theory of NP-completeness proofs with reductions has previous years been examined on an individual assignment with written solutions handed in and later explained orally by the student to a teacher. The new assignment is performed as a computer lab exercise where students are working in small groups of two. This exercise is placed before the individual assignment, and is examined first by running automated test cases and later by an oral presentation in lab to a teacher. An improvement can be observed of the students' average results since the new assignment was introduced. This is not enough to prove the benefit of using the new assignment. However, the responses to questionnaires at course evaluations show that almost all students think that the assignment really gave them better understanding of polynomial reductions in NP completeness proofs. The students' result on the new assignment corresponds closely to their results on the following individual assignment. Seemingly, the new assignment predicts accurately who is going to pass the following assignment.","authors":["Emma Enstr√∂m","Viggo Kann"],"meta":["January 2010","DOI:10.1145/1822090.1822118","SourceDBLP","Conference: Proceedings of the 15th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education, ITiCSE 2010, Bilkent, Ankara, Turkey, June 26-30, 2010"],"references":["265286248_Approaching_Proof_in_a_Community_of_Mathematical_Practice","220808322_Towards_generic_and_flexible_web_services_for_E-assessment","220808075_Formative_computer_based_assessment_in_diagram_based_domains","220807284_Reductive_thinking_in_undergraduate_CS_courses","220803528_Automatic_marking_with_Sakai","303990302_Overcoming_Barriers_to_Student_Understanding_Threshold_concepts_and_troublesome_knowledge","268486419_Reductive_thinking_in_a_quantitative_perspective_The_case_of_the_algorithm_course","246579200_JFLAP-An_Interactive_Formal_Languages_and_Automata_Package","220807522_Reductive_thinking_in_a_quantitative_perspective_the_case_of_the_algorithm_course"]}