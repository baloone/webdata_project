{"id":"344225034_Live_Modeling_in_the_Context_of_State_Machine_Models_and_Code_Generation","abstract":"Live modeling has been recognized as an important technique to edit behavioral models while being executed and helps in better understanding the impact of a design choice. In the context of Model-driven Development (MDD) models can be executed by interpretation or by the translation of models into existing programming languages, often by code generation. This work is concerned with the support of live modeling in the context of state machine models when they are executed by code generation. To this end, we propose an approach that is completely independent of any live programming support offered by the target language. This independence is achieved with the help of a model transformation which equips the model with support for features which are required for live modeling. A subsequent code generation then produces a self-reflective program that allows changes to the model elements at runtime (through synchronization of design and runtime models).\nWe have applied the approach in the context of UML-RT and created a prototype (Live-UMLRT) that provides a full set of services for live modeling of UML-RT state machines such as re-execution, adding/removing states and transitions, and adding/removing action code. We have evaluated the prototype on several use-cases. The evaluation shows that (1) generation of a self-reflective and model instrumentation can be carried out with reasonable performance, and (2) our approach can apply model changes to the running execution faster than the standard approach that depends on the live programming support of the target language.","authors":["Mojtaba Bagherzadeh","Karim Jahed","Benoit Combemale","Juergen Dingel"],"meta":["June 2021Software and Systems Modeling","DOI:10.1007/s10270-020-00829-y"],"references":["338758058_A_model-based_architecture_for_interactive_run-time_monitoring","334974956_Live-UMLRT_A_Tool_for_Live_Modeling_of_UML-RT_Models","331176640_Model_execution_tracing_a_systematic_mapping_study","329977676_Live_Programming_in_Practice_a_Controlled_Experiment_on_State_Machines_for_Robotic_Behaviors","328613936_A_Multi-Paradigm_Modelling_approach_to_live_modelling","325730367_The_road_to_live_programming_insights_from_the_practice","324417098_Execution_of_UML_models_a_systematic_review_of_research_and_practice","322977279_Survey_and_Classification_of_Model_Transformation_Tools","322977102_MDebugger_a_model-level_debugger_for_UML-RT","328505350_Constraint-based_run-time_state_migration_for_live_modeling","321030770_Omniscient_Debugging_for_Executable_DSLs","318325191_Model-Level_Platform-Independent_Debugging_in_the_Context_of_the_Model-Driven_Development_of_Real-Time_Systems","318123173_Evaluation_of_UML-RT_and_Papyrus-RT_for_Modelling_Self-Adaptive_Systems","317212286_Advanced_and_efficient_execution_trace_management_for_executable_domain-specific_modeling_languages","318494157_Real-time_programming_and_the_big_ideas_of_computational_literacy"]}