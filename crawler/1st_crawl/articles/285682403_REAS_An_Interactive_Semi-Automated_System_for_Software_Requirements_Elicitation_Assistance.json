{"id":"285682403_REAS_An_Interactive_Semi-Automated_System_for_Software_Requirements_Elicitation_Assistance","abstract":"Faulty requirements specifications lead to developing a faulty software system. This may require repeating the whole software engineering cycle wasting time and money. This paper presents an interactive semi-automated system that is a compromise between two approaches. The first tries to avoid the introduction of imprecision while the software requirements are being written. The other attempts to detect and possibly correct many types of imprecision after the software requirements are written. This is achieved by imposing the use of a good writing style and by interactively emulating a conversation between the requirements engineer and the user. This helps free the requirements engineer from such a systematic task, helps in processing many ill-structured statements, and helps maintain consistency in the used terminology. Explanations produced by the system helps in detecting and correcting any missed imprecision. The proposed techniques are easy enough to be used by non-technical stakeholders in different domains","authors":["Hanan Hamed Elazhary"],"meta":["May 2010International Journal of Engineering Science and Technology 2(5)","Project: Ambiguities in Software Requirements Documents"],"references":["269699729_Requirements_for_tools_for_ambiguity_identification_and_measurement_in_natural_language_requirements_specifications","221235244_Requirements_for_Tools_for_Ambiguity_Identification_and_Measurement_in_Natural_Language_Requirements_Specifications","220796409_Automated_review_of_natural_language_requirements_documents_Generating_useful_warnings_with_user-extensible_glossaries_driving_a_simple_state_machine","4292877_Automatic_Quality_Assessment_of_SRS_Text_by_Means_of_a_Decision-Tree-Based_Text_Classifier","249886816_QuARS_A_Tool_for_Analyzing_Requirements","234774872_Classical_and_Object-Oriented_Software_Engineering_W_Uml_and_C","230873418_Software_Engineering","228792507_Taming_Ambiguity_in_Natural_Language_Requirements","221029633_Software_Requirements_Specification_Database_Based_on_Requirements_Frame_Model","220693667_Requirements_Engineering_From_System_Goals_to_UML_Models_to_Software_Specifications","3187970_Managing_Conflicts_in_Goal-Driven_Requirements_Engineering","4043785_Higher_quality_requirements_specifications_through_natural_language_patterns","3977343_Application_of_linguistic_techniques_for_Use_Case_analysis","3854863_Lightweight_Validation_of_Natural_Language_Requirements_a_case_study","3247780_Requirements_and_psychology"]}