{"id":"328505350_Constraint-based_run-time_state_migration_for_live_modeling","abstract":"Live modeling enables modelers to incrementally update models as they are running and get immediate feedback about the impact of their changes. Changes introduced in a model may trigger inconsistencies between the model and its run-time state (e.g., deleting the current state in a statemachine); effectively requiring to migrate the run-time state to comply with the updated model. In this paper, we introduce an approach that enables to automatically migrate such run-time state based on declarative constraints defined by the language designer. We illustrate the approach using Nextep, a meta-modeling language for defining invariants and migration constraints on run-time state models. When a model changes, Nextep employs model finding techniques, backed by a solver, to automatically infer a new run-time model that satisfies the declared constraints. We apply Nextep to define migration strategies for two DSLs, and report on its expressiveness and performance.","authors":["Ulyana Tikhonova","Jouke Stoel","Tijs van der Storm","Thomas Degueule"],"meta":["October 2018","DOI:10.1145/3276604.3276611","Conference: the 11th ACM SIGPLAN International Conference"],"references":["326893543_Exploratory_and_Live_Programming_and_Coding_A_Literature_Study_Comparing_Perspectives_on_Liveness","325730367_The_road_to_live_programming_insights_from_the_practice","321030770_Omniscient_Debugging_for_Executable_DSLs","317212286_Advanced_and_efficient_execution_trace_management_for_executable_domain-specific_modeling_languages","310820146_Incremental_backward_change_propagation_of_view_models_by_logic_solvers","269269106_A_Design_Pattern_to_Build_Executable_DSMLs_and_associated_VV_tools","262346644_A_runtime_model_for_fUML","259331534_Model_Repair_and_Transformation_with_Echo","255569151_Implementing_QVT-R_Bidirectional_Model_Transformations_Using_Alloy","225142568_Z3_an_efficient_SMT_solver","220989602_Assessing_the_Kodkod_Model_Finder_for_Resolving_Model_Inconsistencies","220818470_Design-time_simulation_of_domain-specific_models_by_incremental_pattern_matching","220752995_Specification_of_Graph_Translators_with_Triple_Graph_Grammars","43921655_Combinators_for_bidirectional_tree_transformations_A_linguistic_approach_to_the_view-update_problem","345549178_AlloyInEcore_embedding_of_first-order_relational_logic_into_meta-object_facility_for_automated_model_reasoning","319127461_Toward_live_domain-specific_languages_From_text_differencing_to_adapting_models_at_run_time","310820893_Computing_repair_alternatives_for_malformed_programs_using_constraint_attribute_grammars","305794650_Debugging_parallel_DEVS","262426142_Usable_live_programming","261046188_Semantic_Deltas_For_Live_DSL_Environments","261046187_A_perspective_on_the_evolution_of_live_programming","236975426_It's_Alive_Continuous_Feedback_in_UI_Programming","222551056_The_model_transformation_language_of_the_VIATRA2_framework","221516569_Bridging_the_Gulf_Between_Code_and_Behavior_in_Programming","221501026_Towards_a_UML_virtual_machine_Implementing_an_interpreter_for_UML_2_actions_and_activities","221321502_Debugging_and_testing_behavioral_UML_models","2424175_Specification_of_Graph_Translators_with_Triple_Graph_Grammars"]}