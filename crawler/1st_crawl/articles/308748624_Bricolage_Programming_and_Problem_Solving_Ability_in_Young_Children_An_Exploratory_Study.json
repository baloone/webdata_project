{"id":"308748624_Bricolage_Programming_and_Problem_Solving_Ability_in_Young_Children_An_Exploratory_Study","abstract":"Visual programming environments, such as Scratch, are increasingly being used by schools to teach problem solving and computational thinking skills. However, academic research is divided on the effect that visual programming has on problem solving in a computational context. This paper focuses on the role of bricolage programming in this debate; a bottom-up programming approach that arises when using block-style programming interfaces. Bricolage programming was a term originally used to describe the constructionist benefits of novice programming environments, yet more recent research has suggested it may promote poor programming practice that can negatively affect student ability and motivation. This paper describes an exploratory research study into bricolage programming aimed at exploring this concept in more depth. The study used a post-test only experimental design to explore the effects of bricolage programming on problem solving when playing an educational programming game. Two versions of the game were created, one that used a Scratch-like visual programming interface to encourage bricolage, and one that used a more structured visual programming interface. A pre-test based on non-verbal reasoning was used to perform a matched assignment of forty, 6 and 7 year olds to the two conditions. Each child then played their version of the game for thirty minutes. It was hypothesised that children in the Scratch-like condition would insert, move and delete more programming instructions, in line with a bricolage approach. This in turn could result in differentiation in performance between conditions. The results of this study showed that more indications of bricolage did occur in the Scratch-like condition. However, a range of measures of overall performance revealed no difference between the two groups. Post-hoc analysis of the data suggested that indications of bricolage may vary according to the relative progress made by participants in the game. Findings and opportunities for future work are discussed.","authors":["Simon Rose"],"meta":["August 2016","Conference: 10th European Conference on Games Based Learning","Project: Developing Children's Computational Thinking using Programming Games"],"references":["282604754_Zombie_Division_A_Methodological_Case_Study_for_the_Evaluation_of_Game-Based_Learning","271746747_The_Effects_of_Teaching_Programming_via_Scratch_on_Problem_Solving_Skills_A_Discussion_from_Learners'_Perspective","318494168_Epistemological_Pluralism_Styles_and_Voices_within_the_Computer_Culture","303789723_Exploring_media_literacy_and_computational_thinking_A_game_maker_curriculum_study","298972479_Learning_Computer_Science_Concepts_with_Scratch","297719113_Visual_programming_languages_integrated_across_the_curriculum_in_elementary_school_A_two_year_case_study_using_Scratch_in_five_schools","289667014_I_Scratch_and_Sense_But_Can_I_Program_An_Investigation_of_Learning_with_a_Block_Based_Programming_Language","277552805_Gameplay_Engagement_and_Learning_in_Game-Based_Learning_A_Systematic_Review","277393567_Forms_and_Functions_of_Nonverbal_Communication_in_the_Novel_A_New_Perspective_of_the_Author-Character-Reader_Relationship","272159987_The_Savage_Mind"]}