{"id":"30848846_Runtime_Monitoring_of_Timing_Constraints_in_Distributed_Real-Time_Systems","abstract":"Embedded real-time systems often operate under strict timing and dependability constraints. To ensure responsiveness, these systems must be able to provide the expected services in a timely manner even in the presence of faults. In this paper, we describe a run-time environment for monitoring of timing constraints in distributed real-time systems. In particular, we focus on the problem of detecting violations of timing assertions in an environment in which the real-time tasks run on multiple processors, and timing constraints can be either inter-processor or intra-processor constraints. Constraint violations are detected at the earliest possible time by deriving and checking intermediate constraints from the user-specified constraints. If the violations must be detected as early as possible, then the problem of minimizing the number of messages to be exchanged between the processors becomes intractable. We characterize a sub-class of timing constraints that occur commonly in distributed real-time systems and whose message requirements can be minimized. We also take into account the drift among the various processor clocks when detecting a violation of a timing assertion. Finally, we describe a prototype implementation of a distributed run-time monitor. Peer Reviewed http://deepblue.lib.umich.edu/bitstream/2027.42/48087/1/11241_2005_Article_BF01088521.pdf","authors":["Farnam Jahanian","Ragunathan Rajkumar","Sitaram C. V. Raju"],"meta":["November 1994Real-Time Systems 7(3)","DOI:10.1007/BF01088521","SourceCiteSeer"],"references":["236890953_Consistent_Global_States_of_Distributed_Systems_Fundamental_Concepts_and_Mechanisms","220439279_A_Relational_Approach_to_Monitoring_Complex_Systems","317762523_An_Integrated_Approach_to_Monitoring_and_Scheduling_in_Real-Time_Systems","310239995_A_Real-Time_Monitor_for_a_Distributed_Real-Time_Operating_System","306157976_Data_structures_and_network_algorithms","239546479_Using_consistency_subcuts_for_detecting_stable_pros","234783636_Real_time_and_dependability_concepts","228057875_Data_Structures_and_Network_Flow_Algorithms","228057735_Computers_And_Intractability_A_Guide_to_the_Theory_of_NP-Completeness","227155571_Detection_of_global_state_predicates","225318994_Probablistic_Clock_Synchronization","222463001_An_Upper_and_Lower_Bound_for_Clock_Synchronization","221583774_Detection_of_Unstable_Predicates_in_Distributed_Programs","220762653_A_Real-Time_Monitor_for_a_Distributed_Real-Time_Operating_System","220695890_Computers_and_Intracdtability_A_Guide_to_the_Theory_of_NP-Completeness","220070006_Application_of_Real-Time_Monitoring_to_Scheduling_Tasks_with_Random_Execution_Times","216824955_Distributed_Snapshots_Determining_Global_States_of_Distributed_Systems","24301682_Using_consistent_subcuts_for_detecting_stable_properties","3515021_Monitoring_timing_constraints_in_distributed_real-time_systems","3510416_Run-time_monitoring_of_real-time_systems","3504151_A_formalism_for_monitoring_real-time_constraints_at_run-time","3503432_Using_languages_for_capture_analysis_and_display_of_performance_information_for_parallel_and_distributed_applications","3502386_Application_of_real-time_monitoring_to_scheduling_tasks_with_randomexecution_times","3502365_A_new_probabilistic_algorithm_for_clock_synchronization","3501131_A_probabilistic_approach_to_distributed_clock_synchronization","3300104_Detection_of_Strong_Unstable_Predicates_in_Distributed_Programs","3188675_Checkpointing_and_Rollback-Recovery_for_Distributed_Systems","3187206_Hybrid_monitor_for_behavior_and_performance_analysis_of_distributed_systems","2954009_Building_Flexible_Real-Time_Systems_Using_the_Flex_Language","2953907_Noninvasive_architecture_to_monitor_real-time_distributed_systems","2480388_A_Prototyping_Environment_for_Specifying_Executing_and_Checking_Communicating_Real-Time_State_Machines"]}