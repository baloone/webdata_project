{"id":"265083092_JANUS_A_TIME-REVERSIBLE_LANGUAGE","abstract":"Dr. Landauer: Enclosed is a description of the time-reversible language JA-NUS, along with some sample programs. I showed these to you briefly when you spoke here last week on physical limits of com-putation. JANUS was written by myself and Howard Derby for a class at Caltech in 1982 (or thereabouts). The class had nothing to do di-rectly with this project. We did it out of curiosity over whether such an odd animal as this was possible, and because we were interested in knowing where we put information when we programmed. JA-NUS forced us to pay attention to where our bits went since none could be thrown away. JANUS was fully implemented as described as is bug-free (to our knowledge) despite the disclaimer in the document that it is a \"throw-away piece of code.\" If it still exists, it is on backup tapes somewhere, circa 1982 JANUS is a compiler and interpreter for the time-reversible language JANUS. The JANUS compiler is written in SLIMEULA, and compiles the code into an internal SLIMEULA Class structure which can be interpreted directly. 'SLIMEULA' means SIMULA running on a DECSYSTEM-20. JANUS is considered to be a throw-away piece of code. It will not be maintained and is not purported to be robust. The compiler consists of four major parts: A lexical analyzer which tokenizes the input stream and generates a symbol table; a recursive descent parser made of the Init Code of SLIMEULA Classes; an interpreter which consists of the procedure 'exec' com-mon to all of the Classes created in the parsing; and the runtime command scanner.","authors":["Christopher Lutz","Howard Derby"],"meta":[],"references":[]}