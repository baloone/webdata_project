{"id":"309858392_Engineering_a_direct_k-way_Hypergraph_Partitioning_Algorithm","abstract":"We develop a fast and high quality multilevel algorithm\nthat directly partitions hypergraphs into k balanced blocks\n– without the detour over recursive bipartitioning. In\nparticular, our algorithm efficiently implements the powerful\nFM local search heuristics for the complicated k-way case.\nThis is important for objective functions which depend\non the number of blocks connected by a hyperedge. We\nalso remove several further bottlenecks in processing large\nhyperedges, develop a faster contraction algorithm, and a\nnew adaptive stopping rule for local search. To further\nreduce the size of hyperedges, we develop a pin-sparsifier\nbased on the min-hashing technique that clusters vertices\nwith similar neighborhood. Extensive experiments indicate\nthat our KaHyPar-partitioner compares favorably with the\nbest previous systems. KaHyPar is faster than hMetis\nand computes better solutions. KaHyPar’s results are\nconsiderably better than the (faster) PaToH partitioner.","authors":["Sebastian Schlag","Yaroslav Akhremtsev","Tobias Heuer","Peter Sanders"],"meta":["January 2017","DOI:10.1137/1.9781611974768.3","Conference: ALENEX'17","Project: KaHyPar - Karlsruhe Hypergraph Partitioning"],"references":["262333747_On_the_Resemblance_and_Containment_of_Documents","250399032_Hypergraph_Partitioning_and_Clustering","315749851_Combinatorial_Algorithms_for_Integrated_Circuit_Layout","268657822_UMPA_A_Multi-objective_multi-level_partitioner_for_communication_minimization","261320129_Hypergraph_Sparsification_and_Its_Application_to_Partitioning","242591539_Individual_Comparisons_by_Ranking_Methods","228362451_Encapsulating_Multiple_Communication-Cost_Metrics_in_Partitioning_Sparse_Rectangular_Matrices_for_Parallel_Matrix-Vector_Multiplies","227360738_Stata_Tip_96_Cube_Roots","226548937_Randomized_incremental_construction_of_Delaunay_and_Voronoi_diagrams","222854063_Finding_good_approximate_vertex_and_edge_partitions_is_NP-hard"]}