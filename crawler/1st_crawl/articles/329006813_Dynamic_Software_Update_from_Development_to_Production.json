{"id":"329006813_Dynamic_Software_Update_from_Development_to_Production","abstract":"Dynamic Software Update (DSU) solutions update applications while they are executing. These solutions are typically used in production to minimize application downtime, or in integrated development environments to provide live programming support. Each of these scenarios presents different challenges, forcing existing solutions to be designed with only one of these use cases in mind. For example, DSUs for live programming typically do not implement safe point detection or instance migration, while production DSUs require manual generation of patches and lack IDE integration. Also, these solutions have limited ability to update themselves or the language core libraries, and some of them present execution penalties outside the update window. We propose a DSU (gDSU ) that works for both live programming and production environments. Our solution implements safe update point detection using call stack manipulation and a reusable instance migration mechanism to minimize manual intervention in patch generation. Moreover, it also offers updates of core language libraries and the update mechanism itself. This is achieved by the incremental copy of the modified objects and an atomic commit operation. We show that our solution does not affect the global performance of the application and it presents only a run-time penalty during the update window. Our solution is able to apply an update impacting 100,000 instances in 1 second. In this 1 second, only during 250 milliseconds the application is not responsive. The rest of the time the application runs normally while gDSU is looking for the safe update point. The update only requires to copy the elements that are modified. © 2018 Association Internationale pour les Technologies Objets.","authors":["Pablo Tesone","Guillermo Polito","Noury Bouraqadi","Stéphane Ducasse"],"meta":["November 2018Journal of Object Technology 17(1):1:1","DOI:10.5381/jot.2018.17.1.a2"],"references":["315748112_Edit_Transactions_Dynamically_Scoped_Change_Sets_for_Controlled_Updates_in_Live_Programming","283468840_Virtualization_Support_for_Dynamic_Core_Library_Update","268423229_Dynamic_Software_Update","313217056_Class_modification_in_the_GemStone_object-oriented_DBMS","311531749_Dodging_Unsafe_Update_Points_in_Java_Dynamic_Software_Updating_Systems","305508033_Tedsuto_A_General_Framework_for_Testing_Dynamic_Software_Updates","303992719_Dynamic_software_updating","268979023_Smalltalk-80_The_Language_and_Its_Implementation","259684109_A_survey_of_dynamic_software_updating","258990729_Common_Lisp_The_Language"]}