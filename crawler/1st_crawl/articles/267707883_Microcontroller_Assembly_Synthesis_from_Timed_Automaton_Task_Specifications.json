{"id":"267707883_Microcontroller_Assembly_Synthesis_from_Timed_Automaton_Task_Specifications","abstract":"A method for the automatic refinement of single-task timed automaton specifications into microcontroller assembly code is proposed. The outputs of the refinement are an assembly implementation and a timed automaton describing its exact behaviour. Implementation is only possible when all specified timing behaviours can be met by the target microcontroller. Crucially, the implementation does not make the sim-plifying synchrony assumption, yet correctness with respect to timing is guaranteed. Currently this method copes with parallel inputs and out-puts, but is restricted to timed automaton specifications with only one clock variable that is reset after each transition. Further generalization is possible. A tool illustrates the method on a simple example.","authors":["Victor Bandur","Wolfram Kahl","Alan Wassyng"],"meta":["August 2012","DOI:10.1007/978-3-642-32469-7_5","Conference: International Workshop on Formal Methods for Industrial Critical Systems"],"references":["226637335_Almost_ASAP_semantics_From_timed_models_to_timed_implementations","225569864_Almost_ASAP_Semantics_from_Timed_Models_to_Timed_Implementations","221403456_Uppaal-tiga_Time_for_playing_games","221268186_Timing_Tolerances_in_Safety-Critical_Software","220958458_Guided_Controller_Synthesis_for_Climate_Controller_Using_Uppaal_Tiga","45181104_A_Safety-Assured_Development_Approach_for_Real-Time_Software","3224323_Synthesizing_controllers_from_real-time_specifications","2830203_TIMES_a_Tool_for_Schedulability_Analysis_and_Code_Generation_of_Real-Time_Systems","285368652_PLC-Automata_A_New_Class_of_Implementable_Real-Time_Automata","235118354_An_Introduction_to_InputOutput_Automata_Revision","234820866_Peephole_optimization","223326956_Lecture_Notes_in_Computer_Science","222459631_A_Calculus_of_Durations","222001554_Lecture_Notes_in_Computer_Science","221329098_Unifying_Theories_of_Interrupts","2412955_Finite-State_Automata_on_Infinite_Inputs"]}