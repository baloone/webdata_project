{"id":"300175420_Fast_and_Exact_Majority_in_Population_Protocols","abstract":"Population protocols, roughly defined as systems consisting of large numbers of simple identical agents, interacting at random and updating their state following simple rules, are an important research topic at the intersection of distributed computing and biology. One of the fundamental tasks that a population protocol may solve is majority: each node starts in one of two states; the goal is for all nodes to reach a correct consensus on which of the two states was initially the majority. Despite considerable research effort, known protocols for this problem are either exact but slow (taking linear parallel time to converge), or fast but approximate (with non-zero probability of error).\nIn this paper, we show that this trade-off between precision and speed is not inherent. We present a new protocol called Average and Conquer (AVC) that solves majority exactly in expected parallel convergence time O(log n/(sε) + log n log s), where n is the number of nodes, ε n is the initial node advantage of the majority state, and s = Ω(log n log log n) is the number of states the protocol employs. This shows that the majority problem can be solved exactly in time poly-logarithmic in n, provided that the memory per node is s = Ω(1/ε + log n log{1/ε). On the negative side, we establish a lower bound of Ω(1/ε) on the expected parallel convergence time for the case of four memory states per node, and a lower bound of Ω(log n) parallel time for protocols using any number of memory states per node.","authors":["Dan Alistarh","Rati Gelashvili","Milan Vojnovic"],"meta":["July 2015","DOI:10.1145/2767386.2767429","Conference: the 2015 ACM Symposium"],"references":["304821918_Determining_majority_in_networks_with_local_interactions_and_very_small_local_memory","272752430_Polylogarithmic-Time_Leader_Election_in_Population_Protocols_Using_Polylogarithmic_States","262029666_Determining_Majority_in_Networks_with_Local_Interactions_and_Very_Small_Local_Memory","258499624_Efficient_and_Noise-Resilient_rumor-spreading_in_Large_Anonymous_Populations","257204777_Programmable_chemical_controllers_made_from_DNA","230851043_The_Cell_Cycle_Switch_Computes_Approximate_Majority","226549261_Computation_in_Networks_of_Passively_Mobile_Finite-State_Sensors","279258484_Breathe_before_speaking_Efficient_information_dissemination_despite_noisy_limited_and_anonymous_communication","272423141_Stable_Leader_Election_in_Population_Protocols_Requires_Linear_Time","266240257_Convergence_Speed_of_Binary_Interval_Consensus","265660879_Interacting_particle_systems_an_introduction","240053444_Interacting_Particle_Systems","226827347_Distributed_Probabilistic_Polling_and_Applications_to_Proportionate_Agreement","225685483_A_simple_population_protocol_for_fast_robust_approximate_majority","224500487_Using_Three_States_for_Binary_Consensus_on_Complete_Graphs","221344022_Computation_in_networks_of_passively_mobile_finite-state_sensors","220617172_Upper_and_Lower_Time_Bounds_for_Parallel_Random_Access_Machines_without_Simultaneous_Writes","51989173_Tight_Bounds_for_Randomized_Load_Balancing_on_Arbitrary_NetworkTopologies","6320902_Theoretical_Analysis_of_Epigenetic_Cell_Memory_by_Nucleosome_Modification","4038189_Gossip-based_computation_of_aggregate_information","2296624_A_Time_Complexity_Lower_Bound_for_Randomized_Implementations_of_Some_Shared_Objects","1959804_The_Computational_Power_of_Population_Protocols"]}