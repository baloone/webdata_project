{"id":"308917848_Aligning_Coevolving_Artifacts_Between_Software_Product_Lines_and_Products","abstract":"Software product lines (SPLs) play a pivotal role for developing a vast amount of related programs efficiently and with high quality. To this end, the SPL engineering process is separated into two levels: domain engineering (DE), which captures variability and development artifacts of the entire SPL, and application engineering (AE), which encompasses a variant-specific subset of the aforementioned artifacts. In the industrial practice of evolving an SPL, it is common that evolution is performed on both levels, which may affect the same artifacts (e.g., code, models) in different ways due to changes on the product line (DE) and the variant level (AE). As a result, conflicts may arise that have to be solved properly to guarantee correctness and validity of the affected artifacts. In this paper, we propose a methodology for resolving such conflicts to ensure correctness and consistency among artifacts while minimizing manual effort. Our method is comprehensive in two ways: First, we consider all kinds of artifacts (code and non-code) that may be subject to evolutionary changes in both DE and AE. Second, we also take into account that changing one particular artifact (e.g., a requirement) may require further changes to other artifacts of the same level. This way, our method reflects common industrial practices in SPL development and, thus, provides benefits for efficiently evolving real-world SPLs.","authors":["Sandro Schulze","Michael Schulze","Uwe Ryssel","Christoph Seidl"],"meta":["January 2016","DOI:10.1145/2866614.2866616","Conference: Proceedings of the Tenth International Workshop on Variability Modelling of Software-intensive SystemsAt: Salvador, Brazil"],"references":["276501519_Coevolution_of_variability_models_and_related_software_artifacts_A_fresh_look_at_evolution_patterns_in_the_Linux_kernel","299466374_Evolving_Software_Systems","262398774_Managing_cloned_variants_A_framework_and_experience","262160676_Feature-oriented_software_evolution","261398444_A_framework_for_managing_cloned_product_variants","254464834_Co-evolution_of_models_and_feature_mapping_in_software_product_lines","247572908_Software_Product_Lines-Practices_and_Patterns","234793794_EvoFM_feature-driven_planning_of_product-line_evolution","221200369_Analyzing_the_Source_Code_of_Multiple_Software_Variants_for_Reuse_Potential","220883176_Flexible_and_scalable_consistency_checking_on_product_line_variability_models","220693462_Software_Product_Line_Engineering_Foundations_Principles_and_Techniques","220674044_Evolution_in_Software_Product_Lines_Two_Cases","220059407_XTraQue_Traceability_for_product_line_systems","213882667_Generative_Programming_Methods_Tools_and_Applications","2995854_Programs_life_cycles_and_laws_of_software_evolution"]}