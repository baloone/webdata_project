{"id":"271852355_Software_Science_On_the_General_Mathematical_Models_and_Formal_Properties_of_Software","abstract":"Software science is a discipline that studies the formal properties and mathematical models of software, general methodologies for rigorous and efficient software development, and coherent theories and laws underpinning software behaviors and software engineering practices. This paper\npresents a general mathematical model of software (GMMS). It reveals that software is not only an interactive dispatch structure at the top level driven by the trigger, timing, and interrupt events (E), but also a set of embedded relational processes at intermediate levels of components\nor subsystems. The GMMS model formally describes the abstract entities of software by structure models (SMs) and the functional behaviors of software by process models (PMs). As a result, the overall mathematical model of software systems (SS) is formally derived as a\nCartesian product SS = E × PM × SM for any form and size of software systems. Case studies demonstrate that novel, rigorous, and efficient methodologies for software engineering can be deductively developed based on the formal theories of software science.","authors":["Yingxu Wang"],"meta":["December 2014Journal of Advanced Mathematics and Applications 3(2):130–147","DOI:10.1166/jama.2014.1060","Project: Software Science: Theoretical Foundations of Software Engineering"],"references":["329140038_Software_Engineering_Foundations_A_Software_Science_Perspective","324349044_A_Comparative_Study_of_Programming_Languages","318494451_Computing_Machinery_and_Intelligence","316803311_Fundamentals_of_Programming_Languages","313550915_An_Axiomatic_Basis_of_Computer_Programming","313090046_An_intuitionistic_theory_of_types_predicative_part","305260276_Abstract_data_types_and_the_development_of_data_structures","285600235_Green_Computing_and_Cognitive_Computing","284832527_Handbook_of_Theoretical_Computer_Science","284333489_On_the_principles_of_large_scale_computing_machines"]}