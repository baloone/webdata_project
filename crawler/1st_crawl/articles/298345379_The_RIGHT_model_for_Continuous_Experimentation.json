{"id":"298345379_The_RIGHT_model_for_Continuous_Experimentation","abstract":"Context: Development of software-intensive products and services increasingly occurs by continuously deploying product or service increments, such as new features and enhancements, to customers. Product and service developers must continuously find out what customers want by direct customer feedback and usage behaviour observation. Objective: This paper examines the preconditions for setting up an experimentation system for continuous customer experiments. It describes the RIGHT Model for Continuous Experimentation (Rapid Iterative value creation Gained through High-frequency Testing), illustrating the building blocks required for such a system. Method: An initial model for continuous experimentation is analytically derived from prior work. The model is matched against empirical case study findings from two startup companies and further developed. Results: Building blocks for a continuous experimentation system and infrastructure are presented. Conclusions: A suitable experimentation system requires at least the ability to release minimum viable products or features with suitable instrumentation, design and manage experiment plans, link experiment results with a product roadmap, and manage a flexible business strategy. The main challenges are proper and rapid design of experiments, advanced instrumentation of software to collect, analyse, and store relevant data, and the integration of experiment results in both the product development cycle and the software development process. Our findings suggest that it is important to identify fundamental assumptions before designing experiments and validate those first in order to avoid unneccessary experimentation. Deriving experiments that properly test product strategies requires special expertise and skill. Finally, we claim that integrating experimentation outcomes into decision-making is a particular challenge for product management in companies.","authors":["Fabian Fagerholm","Alejandro Sanchez Guinea","Hanna Mäenpää","Jürgen Münch"],"meta":["January 2017Journal of Systems and Software 123:292-305","DOI:10.1016/j.jss.2016.03.034"],"references":["303131534_Climbing_the_stairway_to_heaven_-_A_mulitiple-case_study_exploring_barriers_in_the_transition_from_agile_development_towards_continuous_deployment_of_software","283625598_The_HYPEX_Model_From_Opinions_to_Data-Driven_Software_Development","278648113_Building_Products_as_Innovation_Experiment_Systems","266657407_Personalised_continuous_software_engineering","263251371_A_corporate_system_for_continuous_innovation_The_case_of_Google_Inc","303122181_GQMStrategies_A_comprehensive_methodology_for_aligning_business_strategies_with_software_measurement","262327479_Creating_small_products_at_a_big_company_Adobe's_pipeline_innovation_process","261498950_Applying_Lean_Startup_An_Experience_Report_--_Lean_Lean_UX_by_a_UX_Veteran_Lessons_Learned_in_Creating_Launching_a_Complex_Consumer_App","261356684_Architecture_for_Large-Scale_Innovation_Experiment_Systems","260649304_Lean_Software_Development_A_Tutorial"]}