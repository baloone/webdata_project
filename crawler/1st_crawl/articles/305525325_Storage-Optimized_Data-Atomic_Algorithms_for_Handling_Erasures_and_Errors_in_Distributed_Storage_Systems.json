{"id":"305525325_Storage-Optimized_Data-Atomic_Algorithms_for_Handling_Erasures_and_Errors_in_Distributed_Storage_Systems","abstract":"Erasure codes are increasingly being studied in the context of implementing atomic memory objects in large scale asynchronous distributed storage systems. When compared with the traditional replication based schemes, erasure codes have the potential of significantly lowering storage and communication costs while simultaneously guaranteeing the desired resiliency levels. In this work, we propose the Storage-Optimized Data-Atomic (SODA) algorithm for implementing atomic memory objects in the multi-writer multi-reader setting. SODA uses Maximum Distance Separable (MDS) codes, and is specifically designed to optimize the total storage cost for a given fault-tolerance requirement. For tolerating $f$ server crashes in an $n$-server system, SODA uses an $[n, k]$ MDS code with $k=n-f$, and incurs a total storage cost of $\\frac{n}{n-f}$. SODA is designed under the assumption of reliable point-to-point communication channels. The communication cost of a write and a read operation are respectively given by $O(f^2)$ and $\\frac{n}{n-f}(\\delta_w+1)$, where $\\delta_w$ denotes the number of writes that are concurrent with the particular read. In comparison with the recent CASGC algorithm, which also uses MDS codes, SODA offers lower storage cost while pays more on the communication cost. We also present a modification of SODA, called SODA$_{\\text{err}}$, to handle the case where some of the servers can return erroneous coded elements during a read operation. Specifically, in order to tolerate $f$ server failures and $e$ error-prone coded elements, the SODA$_{\\text{err}}$ algorithm uses an $[n, k]$ MDS code such that $k=n-2e-f$. SODA$_{\\text{err}}$ also guarantees liveness and atomicity, while maintaining an optimized total storage cost of $\\frac{n}{n-f-2e}$.","authors":["Kishori M Konwar","Prakash Narayana Moorthy","Erez Kantor","Nancy Lynch"],"meta":["May 2016","DOI:10.1109/IPDPS.2016.55","Conference: 2016 IEEE International Parallel and Distributed Processing Symposium (IPDPS)"],"references":["264005552_A_Coded_Shared_Atomic_Memory_Algorithm_for_Message_Passing_Architectures","233917764_Proofs_of_Writing_for_Efficient_and_Robust_Storage","313573945_Maximum_distance_q-nary_codes","313562977_Sharing_memory_robustly_in_message_passing_systems","305660699_Space_Bounds_for_Reliable_Storage_Fundamental_Limits_of_Coding","283922991_On_interprocess_communication","280243529_Space_Bounds_for_Reliable_Storage_Fundamental_Limits_of_Coding","259860916_Polynomial_Codes_Over_Certain_Finite_Fields","245954051_Distributed_Algorithms_Chapter_6_7","238656246_Fundamentals_of_Error-Correcting_Codes"]}