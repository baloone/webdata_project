{"id":"291196987_Programming_Languages_in_Education_The_Search_for_an_Easy_Start","abstract":"(i) We first discuss educational objectives in teaching programming, using Logo research as a vehicle to report on versions of the ‘transfer of competence’ hypothesis. This hypothesis has received limited support in a detailed sense, but not in its original more grandiose conception of programming as a ‘mental gymnasium’. (ii) Difficulties in learning quickly abnegate educational objectives, so we next turn to Prolog, which originally promised to be easy to learn since it reduces the amount of program control that the programmer needs to define, but which turned out to be very prone to serious misconceptions. Recent work suggests that Prolog difficulties may be caused by an inability to see the program working. (iii) Does the remedy therefore lie in starting learners on programmable devices that are low level, concrete and highly visible? Research on this line has brought out another problem: learners find the ‘programming plans’ hard to master. (iv) Finally, we sketch a project designed to teach standard procedural programming via ‘natural plans’. Our conclusions stress pragmatic approaches with much attention to ease of use, avoiding taking ‘economy’ and ‘elegance’ as virtues in their own right.","authors":["Patrick Mendelsohn","Thomas R. G. Green","Paul Brna"],"meta":["December 1990","DOI:10.1016/B978-0-12-350772-3.50016-1","In book: Psychology of Programming (pp.175-200)"],"references":["226341042_Understanding_students'_errors_with_Prolog_unification","225881755_Redo_Try_once_and_pass_the_influence_of_complexity_and_graphical_notation_on_novices'_understanding_of_Prolog"]}