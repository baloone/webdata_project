{"id":"320248487_ASSESS_A_Tool_for_Automated_Synthesis_of_Distributed_Self-stabilizing_Algorithms","abstract":"A distributed self-stabilizing system is one that always recovers to its legitimate behavior with no external intervention, even if it is initialized in an arbitrary state. It is well known that designing and reasoning about the correctness of such protocols are highly tedious and complex tasks. We present Assess (Automated Synthesizer for SElf-Stabilizing Systems), a tool that automatically synthesizes distributed self-stabilizing algorithms from their high-level specification. Assess takes as input (1) the network topology of the distributed system, (2) the legitimate behavior of the system (either explicitly as a state predicate, or implicitly as a set of ltl formulas), and (3) a set of high-level requirements such as the timing model (asynchronous or synchronous) and stabilization type (weak, strong, and monotonic). The tool utilizes powerful SMT-solving techniques and returns a self-stabilizing protocol as a set of guarded commands that realize the input specification. Since the output is correct by construction, it will not need any proof correctness. We expect the designers and researchers in the area of self-stabilization to significantly benefit from the tool.","authors":["Fathiyeh Faghih","Borzoo Bonakdarpour"],"meta":["October 2017","DOI:10.1007/978-3-319-69084-1_15","Conference: International Symposium on Stabilization, Safety, and Security of Distributed Systems"],"references":["328868873_Automated_Synthesis_of_Distributed_Self-Stabilizing_Protocols","282000374_Specification-based_Synthesis_of_Distributed_Self-Stabilizing_Protocols","259742966_Parameterized_Synthesis","225698683_Nash_Equilibria_in_Stabilizing_Systems","224928762_Weak_vs_Self_vs_Probabilistic_Stabilization","224928694_A_New_Self-Stabilizing_Maximal_Matching_Algorithm","220951051_A_Lightweight_Method_for_Automated_Design_of_Convergence","220700461_SYCRAFT_A_Tool_for_Synthesizing_Distributed_Fault-Tolerant_Programs","220643653_FTSyn_A_framework_for_automatic_synthesis_of_fault-tolerance","303482290_Specification-Based_Synthesis_of_Distributed_Self-Stabilizing_Protocols","285448511_On_the_Complexity_of_Adding_Convergence","280531035_SMT-Based_Synthesis_of_Distributed_Self-Stabilizing_Systems","262334289_On_the_Self-stabilization_of_Mobile_Oblivious_Robots_in_Uniform_Rings","227236993_Self-stabilizing_group_communication_in_directed_networks","225749645_Monotonic_Stabilization","221278206_The_Theory_of_Weak_Stabilization","220852177_Unbeast_Symbolic_Bounded_Synthesis","220694084_Software_Abstractions_logic_language_and_analysis","220567075_A_Belated_Proof_of_Self-Stabilization","220439427_A_Tree-Based_Algorithm_for_Distributed_Mutual_Exclusion","220423523_Dijkstra_EW_Self-stabilizing_Systems_in_Spite_of_Distributed_Control_ACM_Commun_1711_643-644","220115508_A_Self-Stabilizing_Algorithm_for_Maximal_Matching","220114957_Maximal_Matching_Stabilizes_in_Quadratic_Time","4354738_The_Temporal_Logic_of_Programs"]}