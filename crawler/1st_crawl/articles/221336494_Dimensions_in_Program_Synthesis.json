{"id":"221336494_Dimensions_in_Program_Synthesis","abstract":"Program Synthesis, which is the task of discovering programs that realize user intent, can be useful in several scenarios: enabling people with no programming background to develop utility programs, helping regular programmers automatically discover tricky/mundane details, program understanding, discovery of new algorithms, and even teaching. This paper describes three key dimensions in program synthesis: expression of user intent, space of programs over which to search, and the search technique. These concepts are illustrated by brief description of various program synthesis projects that target synthesis of a wide variety of programs such as standard undergraduate textbook algorithms e.g., sorting, dynamic programming), program inverses(e.g., decoders, deserializers), bitvector manipulation routines, deobfuscated programs, graph algorithms, text-manipulating routines, mutual exclusion algorithms, etc.","authors":["Sumit Gulwani"],"meta":["January 2010","DOI:10.1145/1836089.1836091","SourceDBLP","Conference: Proceedings of the 12th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming, July 26-28, 2010, Hagenberg, Austria"],"references":["319393405_An_Introduction_to_Kolmogorov_Complexity_and_Its_Applications","241241792_Using_Paraphrases_of_Deep_Semantic_Representions_to_Support_Regression_Testing_in_Spoken_Dialogue_Systems","228660162_Synthesizing_switching_logic_for_safety_and_dwell-time_requirements","228577393_Programming_shell_scripts_by_demonstration","225270132_QuickSpec_Guessing_Formal_Specifications_Using_Testing","221233646_Automatic_Discovery_of_Mutual_Exclusion_Algorithms","221214483_NaLIX_an_interactive_natural_language_interface_for_querying_XML","221009203_Genetic_Programming_with_Fitness_Based_on_Model_Checking","220997320_Continuity_Analysis_of_Programs","220812605_Angluin-style_learning_of_NFA","220752401_The_Reachability-Bound_Problem","220752241_Program_Verification_using_Templates_over_Predicate_Abstraction","220752058_Deriving_linearizable_fine-grained_concurrent_objects","270960151_An_analysis_of_conficker's_logic_and_rendezvous_points","265930097_Program_Synthesis_By_Sketching","262334096_The_geometer's_sketchpad_programming_by_geometry","242373411_Watch_What_I_Do_Programming_By_Demonstration","241743610_Learning_Repetitive_Robot_Programs_From_Demonstrations_Using_Version_Space_Algebra","239917386_Probabilistic_inference_of_programs_from_inputoutput_examples","239066731_Genetic_Programming_On_the_Programming_of_Computers_by_Means_of_Natural_Selection","234812500_Fast_Probabilistic_Algorithms_for_Verification_of_Polynomial_Identities","231746923_Natural_Language_Interfaces_to_Databases_-_An_Introduction","225356179_Synthesizing_Switching_Logic_Using_Constraint_Solving","225198430_Constraint-Based_Approach_for_Analysis_of_Hybrid_Systems","225104058_Query_learning_of_subsequential_transducers","224483188_On_the_Synthesis_of_Finite-State_Machines_from_Samples_of_Their_Behavior","222656646_A_bibliographical_study_of_grammatical_inference","222480440_On_the_Complexity_of_Teaching","222457930_Angluin_D_Learning_regular_sets_from_queries_and_counterexamples_Inf_Comput_752_87-106","222445347_Language_Identification_in_the_Limit","222442069_Generalization_As_Search","222440340_Upper_and_Lower_Bounds_for_First_Order_Expressibility","221562638_Inferring_Flow_of_Control_in_Program_Synthesis_by_Example","221555359_Oracle-guided_component-based_program_synthesis","221553516_Automatically_finding_patches_using_genetic_programming","221551130_Constraint-Based_Invariant_Inference_over_Predicate_Abstraction","221402938_VS3_SMT_solvers_for_program_verification","221335585_Systematic_search_for_lambda_expressions","221322135_A_Simple_Inductive_Synthesis_Methodology_and_its_Applications","221027033_Genetic_Programming_and_Model_Checking_Synthesizing_New_Mutual_Exclusion_Algorithms","220997927_From_Program_Verification_to_Program_Synthesis","220997593_Editing_by_Example","220997469_Programming_with_Angelic_Nondeterminism","220997373_Program_verification_as_probabilistic_inference","220980684_Program_Inversion","220916795_Learning_Programs_from_Traces_Using_Version_Space_Algebra","220873595_Learning_Context-Dependent_Mappings_from_Sentences_to_Logical_Form","220752365_Program_analysis_as_constraint_solving","220752320_Eliminating_Branches_using_a_Superoptimizer_and_the_GNU_C_Compiler","220752097_Jungloid_Mining_Helping_To_Navigate_the_API_Jungle","220404434_A_Deductive_Approach_to_Program_Synthesis","220688500_The_Art_of_Computer_Programming_Volume_III_Sorting_and_Searching","220688483_The_Art_of_Computer_Programming_Volume_I_Fundamental_Algorithms","220444569_A_Method_for_Automatic_Program_Inversion_Based_on_LR0_Parsing","220422952_Solutions_of_a_Problem_in_Concurrent_Programming_Control_Reprint"]}