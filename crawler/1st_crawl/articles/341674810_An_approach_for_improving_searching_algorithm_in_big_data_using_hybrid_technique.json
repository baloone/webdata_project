{"id":"341674810_An_approach_for_improving_searching_algorithm_in_big_data_using_hybrid_technique","abstract":"Search algorithms play an essential role in wide variety of applications in computer science. Different search algorithms can be applied to different data structures. Each data structure has its own advantages and limitations which in turn affect the search algorithm complexity and performance. In the context of Big Data such limitations can be more obvious and noticeable in reducing the performance offered by the data structure and search algorithms applied to it because of big data characteristics such as its huge volume. Also, string data sets can be more challenging. They can cause more overhead in preprocessing. Some string datasets such as personal names may have some skew that has negative effect on hash indexes by increasing the ratio of collisions produced. The work in this paper offers a technique for improving the famous Hash table Data Structure by reducing the collision ratio in hashing in the average case, thus reducing the total number of comparisons made by search algorithm. The advantage of reducing the collision ratio was achieved by building a hybrid approach making use of three common data structures, namely Hash Table, B-Tree and Linked List. The results obtained showed noticeable improvement for time complexity of data searching algorithm over the traditional data structures that were used for comparisons.","authors":["Iman Sadeq Khairi Alzuabidi","Prof. Dr. Kadhim b. S. Aljanabi"],"meta":["May 2020Journal of Physics Conference Series 1530(1):012113","DOI:10.1088/1742-6596/1530/1/012113"],"references":["304462342_Horton_Tables_Fast_Hash_Tables_for_In-Memory_Data-Intensive_Computing","221579385_A_Robust_Scheme_for_Multilevel_Extendible_Hashing","345478394_Wormhole_A_Fast_Ordered_Index_for_In-memory_Data_Management","281187575_BHash_tree_Optimizing_query_execution_times_for_on-disk_semantic_Web_data_structures","266711003_Introduction_to_algorithms_3rd_revised_and_extended_ed","238698892_Fundamentals_of_database_systems_2a_ed_benjamincummings_ca"]}