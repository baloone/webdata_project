{"id":"226075148_The_longest_common_subsequence_problem_revisited","abstract":"This paper re-examines, in a unified framework, two classic approaches to the problem of finding a longest common subsequence\n(LCS) of two strings, and proposes faster implementations for both. Letl be the length of an LCS between two strings of lengthm andn ≥m, respectively, and let s be the alphabet size. The first revised strategy follows the paradigm of a previousO(ln) time algorithm by Hirschberg. The new version can be implemented in timeO(lm · min logs, logm, log(2n/m)), which is profitable when the input strings differ considerably in size (a looser bound for both versions isO(mn)). The second strategy improves on the Hunt-Szymanski algorithm. This latter takes timeO((r +n) logn), wherer≤mn is the total number of matches between the two input strings. Such a performance is quite good (O(n logn)) whenr∼n, but it degrades to Θ(mn logn) in the worst case. On the other hand the variation presented here is never worse than linear-time in the productmn. The exact time bound derived for this second algorithm isO(m logn +d log(2mn/d)), whered ≤r is the number ofdominant matches (elsewhere referred to asminimal candidates) between the two strings. Both algorithms require anO(n logs) preprocessing that is nearly standard for the LCS problem, and they make use of simple and handy auxiliary data structures.","authors":["A. Apostolico","C. Guerra"],"meta":["November 1987Algorithmica 2(1):315-336","DOI:10.1007/BF01840365","SourceDBLP"],"references":["265329607_Data_structures_and_algorithms_1_Sorting_and_searching_Transl_from_the_German","254640941_On_Computing_Longest_Common_Subsequences_in_Linear_Space","254640845_A_Fast_Linear_Space_Algorithm_for_Computing_Longest_Common_Subsequences","244957922_A_linear_space_algorithm_for_com-puting_longest_common_subsequences","234799012_Hirschberg_DS_A_Linear_space_algorithm_for_Computing_Maximal_Common_Subsequences_Commun_ACM_186_341-343","228057677_A_Fast_Merging_Algorithm","222447182_A_Faster_Algorithm_Computing_String_Edit_Distances","222170761_New_algorithms_for_the_LCS_problem","221591731_Optimal_Code_Generation_for_Expression_Trees","221590247_A_Representation_for_Linear_Lists_with_Movable_Fingers","220688555_The_Design_and_Analysis_Computer_Algorithms","220687910_Data_Structures_and_Algorithms_1","220431832_Bounds_on_the_Complexity_of_the_Longest_Common_Subsequence_Problem","220431502_Algorithms_for_the_Longest_Common_Subsequence_Problem","220431230_The_String-to-String_Correction_Problem","220422318_A_Fast_Algorithm_for_Computing_Longest_Common_Subsequences","220115335_Improving_the_Worst-Case_Performance_of_the_Hunt-Szymanski_Strategy_for_the_Longest_Common_Subsequence_of_Two_Strings","220111547_An_Almost_Optimal_Algorithm_for_Unbounded_Searching","220110813_Emde_Boas_P_Preserving_Order_in_a_Forest_in_Less_Than_Logarithmic_Time_and_Linear_Space_Inf_Process_Letters_63_80-82","47842162_Data_structures_and_algorithms_Volume_1_Sorting_and_searching","37705096_Time_Warps_String_Edits_and_Macromolecules_The_Theory_and_Practice_of_Sequence_Comparison","4355963_Bounds_on_the_Complexity_of_the_Longest_Common_Subsequence_Problem"]}