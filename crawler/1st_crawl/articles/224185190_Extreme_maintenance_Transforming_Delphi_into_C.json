{"id":"224185190_Extreme_maintenance_Transforming_Delphi_into_C","abstract":"Sometimes projects need to switch implementation languages. Rather than stopping software development and rewriting the project from scratch, transformation rules can map from the original language to the new language. These rules can be developed in parallel to standard software development, allowing the project to be cut over without any loss of development time, once the rules are complete. This paper presents a migration project that used transformation rules to successfully convert 1.5 MLOC of Delphi to C# in 18 months while allowing existing Delphi development to continue.","authors":["John Brant","Don Roberts","Bill Plendl","Jeff Prince"],"meta":["October 2010","DOI:10.1109/ICSM.2010.5609731","SourceIEEE Xplore","Conference: Software Maintenance (ICSM), 2010 IEEE International Conference on"],"references":["220346807_A_Refactoring_Tool_for_Smalltalk","321876725_More_Joel_on_Software_Further_Thoughts_on_Diverse_and_Occasionally_Related_Matters_That_Will_Prove_of_Interest_to_Software_Developers_Designers_and_Managers_and_to_Those_Who_Whether_by_Good_Fortune_or","314824238_Transformation_of_an_application_data_layer","262335188_DMS_Program_Transformations_for_Practical_Scalable_Software_Evolution","234798999_Transformation_of_an_application_data_layer","222698588_StrategoXT_017_A_language_and_toolset_for_program_transformation","222411992_The_TXL_source_transformation_language","221553743_DMSR_Program_Transformations_for_Practical_Scalable_Software_Evolution","3422160_Tools_for_making_impossible_changes_-_experiences_with_a_tool_for_transforming_large_Smalltalk_programs","3248509_TMM_Software_Maintenance_by_Transformation"]}