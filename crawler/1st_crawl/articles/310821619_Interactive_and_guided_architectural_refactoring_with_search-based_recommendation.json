{"id":"310821619_Interactive_and_guided_architectural_refactoring_with_search-based_recommendation","abstract":"Architectural refactorings can contain hundreds of steps and experienced developers could carry them out over several weeks. Moreover, developers need to explore a correct sequence of refactorings steps among many more incorrect alternatives. Thus, carrying out architectural refactorings is costly, risky, and challenging. In this paper, we present Refactoring Navigator: a tool-supported and interactive recommendation approach for aiding architectural refactoring. Our approach takes a given implementation as the starting point, a desired high-level design as the target, and iteratively recommends a series of refactoring steps. Moreover, our approach allows the user to accept, reject, or ignore a recommended refactoring step, and uses the user's feedback in further refactoring recommendations. We evaluated the effectiveness of our approach and tool using a controlled experiment and an industrial case study. The controlled experiment shows that the participants who used Refactoring Navigator accomplished their tasks in 77.4% less time and manually edited 98.3% fewer lines than the control group. The industrial case study suggests that Refactoring Navigator has the potential to help with architectural refactorings in practice.","authors":["Yun Lin","Xin Peng","Yuanfang Cai","Danny Dig"],"meta":["November 2016","DOI:10.1145/2950290.2950317","Conference: the 2016 24th ACM SIGSOFT International Symposium"],"references":["316858084_Recommendation_system_for_software_refactoring_using_innovization_and_interactive_dynamic_optimization","311101104_Recommendation_system_for_software_refactoring_using_innovization_and_interactive_dynamic_optimization","265552578_Recommendation_System_for_Software_Refactoring_Using_Innovization_and_Interactive_Dynamic_Optimization","262364433_Supervised_software_modularisation","261355922_Recommending_Refactorings_to_Reverse_Software_Architecture_Erosion","261120990_Automated_Refactoring_Using_Design_Differencing","256835214_Recommending_Move_Method_Refactorings_Using_Dependency_Sets","224577627_Static_Architecture-Conformance_Checking_An_Illustrative_Overview","222413173_Search-Based_Refactoring_for_Software_Maintenance","221307766_Playing_with_refactoring_Identifying_extract_class_opportunities_through_game_theory","220741085_Pareto_Optimal_Search_Based_Refactoring_at_the_Design_Level","220673951_A_metric-based_approach_to_identifying_refactoring_opportunities_for_merging_code_clones_in_a_Java_software_system","220673934_Search-based_refactoring_An_empirical_study","220403709_Recovering_traceability_links_in_software_artifact_management_systems_using_information_retrieval_methods","216667103_How_We_Refactor_and_How_We_Know_It","4296981_Extending_the_Reflexion_Method_for_Consolidating_Software_Variants_into_Product_Lines","4010983_Identifying_refactoring_opportunities_using_logic_meta_programming","3893282_Metrics_Based_Refactoring","3188387_A_Survey_of_software_refactoring","3188155_Software_Reflexion_Models_Bridging_the_Gap_between_Design_and_Implementation","2463573_A_Behavioral_Notion_of_Subtyping","319770101_Working_Effectively_with_Legacy_Code","313758716_Identifying_Refactoring_Opportunities_Using_Logic_Meta_Programming","301222514_Modern_Information_Retrieval","299909727_Measure_it_Manage_it_Ignore_it_software_practitioners_and_technical_debt","283996103_Genetic_Algorithms_In_Search_Optimization_and_Machine_Learning","271551488_In_medio_stat_virtus_Extract_class_refactoring_through_nash_equilibria","271528890_Refactoring_Improving_the_Design_of_Existing_Code","263813521_Methodbook_Recommending_Move_Method_Refactorings_via_Relational_Topic_Models","262251391_A_field_study_of_refactoring_challenges_and_benefits","260648772_Monitor-Based_Instant_Software_Refactoring","256991611_Identification_and_application_of_Extract_Class_refactorings_in_object-oriented_systems","256835156_A_Recommendation_System_for_Repairing_Violations_Detected_by_Static_Architecture_Conformance_Checking","254041679_Reconciling_manual_and_automatic_refactoring","254041678_WitchDoctor_IDE_support_for_real-time_auto-completion_of_refactorings","250589881_Metrics_Based_Refactoring_110","248809571_Object_-_oriented_met_-_rics_measures_of_complexity","246987586_Object-Oriented_Metrics_Measures_of_Complexity","239744436_A_Behavioral_Notion_of_Subtyping","234137797_Putting_the_Developer_in-the-Loop_An_Interactive_GA_for_Software_Re-modularization","222323766_Identifying_Extract_Class_refactoring_opportunities_using_structural_and_semantic_cohesion_measures","221592676_Refactoring_Improving_the_Design_of_Existing_Code","221592362_Working_Effectively_with_Legacy_Code","221496125_Why_Don't_People_Use_Refactoring_Tools","220743540_Search-Based_Determination_of_Refactorings_for_Improving_the_Class_Structure_of_Object-Oriented_Systems","220071214_Schedule_of_Bad_Smell_Detection_and_Resolution_A_New_Way_to_Save_Effort","220071038_Identification_of_Move_Method_Refactoring_Opportunities","216545901_Genetic_Algorithms_in_Search_Optimization_and_Machine_Learning","3824338_Evolving_object-oriented_designs_with_refactorings","2954802_Reengineering_with_reflexion_Models_A_case_study"]}