{"id":"316498271_Bridging_the_Gap_Between_OpenMP_and_Task-Based_Runtime_Systems_for_the_Fast_Multipole_Method","abstract":"With the advent of complex modern architectures, the low-level paradigms long considered sufficient to build High Performance Computing (HPC) numerical codes have met their limits. Achieving efficiency, ensuring portability, while preserving programming tractability on such hardware prompted the HPC community to design new, higher level paradigms while relying on runtime systems to maintain performance. However, the common weakness of these projects is to deeply tie applications to specific expert-only runtime system APIs. The OpenMP specification, which aims at providing common parallel programming means for shared-memory platforms, appears as a good candidate to address this issue thanks to the latest task-based constructs introduced in its revision 4.0. The goal of this paper is to assess the effectiveness and limits of this support for designing a high-performance numerical library, ScalFMM, implementing the fast multipole method (FMM) that we have deeply re-designed with respect to the most advanced features provided by OpenMP 4. We show that OpenMP 4 allows for significant performance improvements over previous OpenMP revisions on recent multicore processors and that extensions to the 4.0 standard allow for strongly improving the performance, bridging the gap with the very high performance that was so far reserved to expert-only runtime system APIs.","authors":["Emmanuel Agullo","Olivier Aumage","BÃ©renger Bramas","Olivier Coulaud"],"meta":["April 2017IEEE Transactions on Parallel and Distributed Systems PP(99):1-1","DOI:10.1109/TPDS.2017.2697857"],"references":["278763099_Locality-Aware_Work_Stealing_on_Multi-CPU_and_Multi-GPU_Architectures","265416053_Parallel_Dual_Tree_Traversal_on_Multi-core_and_Many-core_Architectures_for_Astrophysical_N-body_Simulations","262297393_A_CPU_GPU_Hybrid_Implementation_and_Model-Driven_Scheduling_of_the_Fast_Multipole_Method","236972998_The_Landscape_of_Parallel_Computing_Research_A_View_from_Berkeley","236025013_Task-Based_FMM_for_Multicore_Architectures","310821185_Regent_a_high-productivity_programming_language_for_HPC_with_logical_regions","278629862_Task-based_FMM_for_heterogeneous_architectures","239754550_Implementing_OmpSs_support_for_regions_of_data_in_architectures_with_multiple_address_spaces","224319371_The_design_of_OpenMP_tasks","222454147_A_Fast_Algorithm_for_Particle_Simulation"]}