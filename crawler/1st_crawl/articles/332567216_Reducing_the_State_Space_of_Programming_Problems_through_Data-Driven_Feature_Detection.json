{"id":"332567216_Reducing_the_State_Space_of_Programming_Problems_through_Data-Driven_Feature_Detection","abstract":"The large state space of programming problems makes providing adaptive support in intelligent tutoring systems (ITSs) difficult. Reducing the state space size could allow for more interpretable analysis of student progress as well as easier integration of data-driven support. Using data collected from a CS0 course, we present a procedure for defining a small but meaningful programming state space based on the presence or absence of features of correct solution code. We present a procedure to create these features using a panel of human experts, as well as a data-driven method to derive them automatically. We compare the expert and data-driven features , the resulting state spaces, and how students progress through them. We show that both approaches dramatically reduce the state-space compared to traditional code-states and that the data-driven features have high overlap with the expert features. We conclude by discussing how this feature-state space provides a useful platform for integrating data-driven support methods into ITSs.","authors":["Rui Zhi","Thomas W. Price","Nicholas Lytle","Yihuan Dong"],"meta":["July 2018","Conference: Educational Data Mining (Workshop)","Project: iSnap - Data-driven Hints"],"references":["316947290_iSnap_Towards_Intelligent_Tutoring_in_Novice_Programming_Environments","283468835_Data-Driven_Hint_Generation_in_Vast_Solution_Spaces_a_Self-Improving_Python_Programming_Tutor","221310049_Approximate_Matching_of_Hierarchical_Data_Using_pq-Grams_--_Slides","304286578_An_Automated_Framework_for_Recommending_Program_Elements_to_Novices_N","300789986_Data-Driven_Worked_Examples_Improve_Retention_and_Completion_in_a_Logic_Tutor","284205635_The_beauty_and_joy_of_computing","264235343_Building_Games_To_Learn_From_Their_Players_Generating_Hints_in_a_Serious_Game"]}