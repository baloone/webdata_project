{"id":"345974696_Comparison_of_sort_algorithms_in_Hadoop_and_PCJ","abstract":"Sorting algorithms are among the most commonly used algorithms in computer science and modern software. Having efficient implementation of sorting is necessary for a wide spectrum of scientific applications. This paper describes the sorting algorithm written using the partitioned global address space (PGAS) model, implemented using the Parallel Computing in Java (PCJ) library. The iterative implementation description is used to outline the possible performance issues and provide means to resolve them. The key idea of the implementation is to have an efficient building block that can be easily integrated into many application codes. This paper also presents the performance comparison of the PCJ implementation with the MapReduce approach, using Apache Hadoop TeraSort implementation. The comparison serves to show that the performance of the implementation is good enough, as the PCJ implementation shows similar efficiency to the Hadoop implementation.","authors":["Marek Nowicki"],"meta":["November 2020Journal of Big Data 7(101)","DOI:10.1186/s40537-020-00376-9"],"references":["335773929_ViraMiner_Deep_learning_on_raw_DNA_sequences_for_identifying_viral_genomes_in_human_samples","332296554_ViraMiner_Deep_Learning_on_Raw_DNA_Sequences_for_Identifying_Viral_Genomes_in_Human_Samples","325533243_Performance_evaluation_of_parallel_computing_and_Big_Data_processing_with_Java_and_PCJ_library","331108692_Comparison_of_the_HPC_and_Big_Data_Java_Libraries_Spark_PCJ_and_APGAS","329083010_GPU_Computations_and_Memory_Access_Model_Based_on_Petri_Nets","328759709_PCJ-Java_Library_for_Highly_Scalable_HPC_and_Big_Data_Processing","326381830_Massively_Parallel_Implementation_of_Sequence_Alignment_with_Basic_Local_Alignment_Search_Tool_Using_Parallel_Computing_in_Java_Library","323941478_Exploring_Graph_Analytics_with_the_PCJ_Toolbox","323939754_Evaluation_of_the_Parallel_Performance_of_the_Java_and_PCJ_on_the_Intel_KNL_Based_Systems","323938923_Big_Data_Analytics_in_Java_with_PCJ_Library_Performance_Comparison_with_Hadoop"]}