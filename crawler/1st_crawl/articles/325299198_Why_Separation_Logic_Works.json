{"id":"325299198_Why_Separation_Logic_Works","abstract":"One might poetically muse that computers have the essence both of logic and machines. Through the case of the history of Separation Logic, we explore how this assertion is more than idle poetry. Separation Logic works because it merges the software engineer’s conceptual model of a program’s manipulation of computer memory with the logical model that interprets what sentences in the logic are true, and because it has a proof theory which aids in the crucial problem of scaling the reasoning task. Scalability is a central problem, and some would even say the central problem, in appli- cations of logic in computer science. Separation Logic is an interesting case because of its widespread success in verification tools. For these two senses of model—the engineering/conceptual and the logical—to merge in a genuine sense, each must maintain their norms of use from their home disciplines. When this occurs, both the logic and engineering benefit greatly. Seeking this intersection of two different senses of model provides a strategy for how computer scientists and logicians may be successful. Furthermore, the history of Separation Logic for analysing programs provides a novel case for philosophers of science of how software engineers and computer scientists develop models and the components of such models. We provide three contributions: an exploration of the extent of models merging that is necessary for success in computer science; an introduction to the technical details of Separation Logic, which can be used for reasoning about other exhaustible resources; and an introduction to (a subset of) the problems, process, and results of computer scientists for those outside the field.","authors":["David Pym","Jonathan M. Spring","Peter O'Hearn"],"meta":["September 2019Philosophy & Technology 32(12)","DOI:10.1007/s13347-018-0312-8"],"references":["312626867_The_Philosophy_of_Computer_Science","330268827_Mechanizing_Proof_Computing_Risk_and_Trust","329653912_Discovering_Complexity_Decomposition_and_Localization_as_Strategies_in_Scientific_Research","323372731_Practicing_a_Science_of_Security_A_Philosophy_of_Science_Perspective","318664890_The_science_of_brute_force","315750698_Miscomputation_in_software_Learning_to_live_with_errors","315496092_Logic_and_Structure","313550915_An_Axiomatic_Basis_of_Computer_Programming","312829129_Moving_Fast_with_Software_Verification","308740151_From_Categorical_Logic_to_Facebook_Engineering"]}