{"id":"341417242_Which_Process_Metrics_Are_Significantly_Important_to_Change_of_Defects_in_Evolving_Projects_An_Empirical_Study","abstract":"Process metrics can reflect the software development process and the code changes which are the main causes of defects. So, recently, the researches have put more emphasis on process metrics in the field of software defect prediction. For evolving projects, it is more meaningful to study whether the software module introduces or eliminates defects or not, not whether the software module is defective or defect-free. However, no such work is available in the literature focusing on the change of defect state. Discovering the factors that influence the change of defect state in the process of software development can help us to understand the causes of software defects and improve the quality of subsequent software versions. Therefore, this paper presents an extensive empirical study on which process metrics are significantly important to change of defects in evolving projects. Five process metrics of 37 versions in 12 software projects are collected. We not only analyze the class correlation values and the classification performance values among five process metrics, but also perform statistical analysis to verify whether the experimental results are of practical value. The experimental results indicate that Number of Distinct Committers plays a significantly important role in the change of defect state, especially for elimination of defects, and Number of Revisions is the second, whereas Degree of Code Modification is the last. In addition, Average Number of Modified Lines is superior to Number of Modified Lines. Based on the experimental results, some suggestions for software development and software defect prediction are also discussed.","authors":["Li Jiang","Shujuan Jiang","Lina Gong","Yue Dong"],"meta":["May 2020IEEE Access PP(99):1-1","DOI:10.1109/ACCESS.2020.2994528"],"references":["328561997_Revisiting_supervised_and_unsupervised_models_for_effort-aware_just-in-time_defect_prediction","324250647_Cross-version_defect_prediction_via_hybrid_active_learning_with_kernel_principal_component_analysis","323642776_Empirical_analysis_of_change_metrics_for_software_fault_prediction","331270020_A_Novel_Class-Imbalance_Learning_Approach_for_Both_Within-Project_and_Cross-Project_Defect_Prediction","328911174_Research_Paper_Periodic_Developer_Metrics_in_Software_Defect_Prediction","327215999_An_Approach_for_the_Prediction_of_Number_of_Software_Faults_Based_on_the_Dynamic_Selection_of_Learning_Techniques","326076039_Ridge_and_Lasso_Regression_Models_for_Cross-Version_Defect_Prediction","323424582_Statistical_power_analysis_for_the_behavioral_sciences","323172327_Progress_on_approaches_to_software_defect_prediction","322715583_Data_Mining_practical_machine_learning_tools_and_techniques"]}