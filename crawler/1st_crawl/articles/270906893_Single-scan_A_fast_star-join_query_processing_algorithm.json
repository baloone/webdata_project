{"id":"270906893_Single-scan_A_fast_star-join_query_processing_algorithm","abstract":"SUMMARYA data warehouse can store very large amounts of data that should be processed in parallel in order to achieve reasonable query execution times. The MapReduce programming model is a very convenient way to process large amounts of data in parallel on commodity hardware clusters. A very popular query used in data warehouses is star-join. In this paper, we present a fast and efficient star-join query execution algorithm built on top of a MapReduce framework called Hadoop. By using dynamic filters against dimension tables, the algorithm needs a single scan of the fact table, which means a significant reduction of input/output operations and computational complexity. Also, the algorithm requires only two MapReduce iterations in total–one to build the filters against dimension tables and one to scan the fact table. Our experiments show that the proposed algorithm performs much better than the existing solutions in terms of execution time and input/output. Copyright © 2014 John Wiley & Sons, Ltd.","authors":["Vasile Purdilă","Stefan Gheorghe Pentiuc"],"meta":["January 2015Software Practice and Experience 46(3)","DOI:10.1002/spe.2308"],"references":["259757067_StreamMR_An_Optimized_MapReduce_Framework_for_AMD_GPUs","228854425_StreamMR_an_optimized_MapReduce_framework_for_AMD_GPUs","220405855_Scatter-Gather-Merge_An_efficient_star-join_query_processing_algorithm_for_data-parallel_frameworks","220387784_The_SB-index_and_the_HSB-index_Efficient_indices_for_spatial_data_warehouses","220105481_Dynamic_Query_Scheduling_in_Parallel_Data_Warehouses","48446865_Tightly_Packed_Tries_How_to_Fit_Large_Models_into_Memory_and_Make_them_Load_Fast_Too","43488325_Optimizing_multiple_dimensional_queries_simultaneously_in_multidimensional_databases","3297104_Parallel_Star_JoinDataIndexes_efficient_query_processing_in_data_warehouses_and_OLAP","1749360_Data_Mining_Using_High_Performance_Data_Clouds_Experimental_Studies_Using_Sector_and_Sphere","275603374_Comparing_Operating_Systems_Scalability_on_Multicore_Processors_by_Microbenchmarking","270276876_Building_the_Data_Warehouse","266874514_Star_Schema_Benchmark","262393243_Enhancing_MapReduce_Using_MPI_and_an_Optimized_Data_Exchange_Policy","250061595_The_Star_Schema_Benchmark_SSB","240918764_Hadoop_The_Definitive_Guide","234799704_MapReduce_and_parallel_DBMSs_Friends_or_foes","221276487_HAMA_An_Efficient_Matrix_Computation_with_the_MapReduce_Framework","221253054_Efficient_Execution_of_Parallel_Aggregate_Data_Cube_Queries_in_Data_Warehouse_Environments","221213876_Efficient_processing_of_data_warehousing_queries_in_a_split_execution_environment","220851866_MapReduce_Simplified_Data_Processing_on_Large_Clusters","220424808_SpaceTime_Trade-Offs_in_Hash_Coding_With_Allowable_Errors","220385268_Parallel_Processing_of_OLAP_Queries_Using_a_Cluster_of_Workstations","220358786_Scalability_in_data_management","220350188_Star_join_revisited_Performance_internals_for_cluster_architectures","30871667_Sorting_and_Searching"]}