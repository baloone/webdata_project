{"id":"234820368_The_Scratch_Programming_Language_and_Environment","abstract":"Scratch is a visual programming environment that allows users (primarily ages 8 to 16) to learn computer programming while working on personally meaningful projects such as animated stories and games. A key design goal of Scratch is to support self-directed learning through tinkering and collaboration with peers. This article explores how the Scratch programming language and environment support this goal.","authors":["John Maloney","Mitchel Resnick","Natalie Rusk","Brian Silverman"],"meta":["November 2010ACM Transactions on Computing Education 10(4):16","DOI:10.1145/1868358.1868363","Sourcedx.doi.org"],"references":["234808768_Boxer_A_Reconstructible_Computational_Medium","220877472_Directness_and_Liveness_in_the_Morphic_User_Interface_Construction_Environment","220426817_Scratch_Programming_for_All","38413358_Scratch_for_Budding_Computer_Scientists","305260621_Dimensions_of_Object-Based_Language_Design","265092184_Constructionism_in_Practice_Designing_Thinking_and_Learning_in_a_Digital_World","245753688_Computers_and_Squeak_as_Environments_for_Learning","228328529_Mindstorms_Children_Computers_and_Powerful_Ideas","221320954_Dimensions_of_Object-Based_Language_Design"]}