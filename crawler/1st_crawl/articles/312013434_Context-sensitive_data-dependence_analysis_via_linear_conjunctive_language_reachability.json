{"id":"312013434_Context-sensitive_data-dependence_analysis_via_linear_conjunctive_language_reachability","abstract":"Many program analysis problems can be formulated as graph reachability problems. In the literature, context-free language (CFL) reachability has been the most popular formulation and can be computed in subcubic time. The context-sensitive data-dependence analysis is a fundamental abstraction that can express a broad range of program analysis problems. It essentially describes an interleaved matched-parenthesis language reachability problem. The language is not context-free, and the problem is well-known to be undecidable. In practice, many program analyses adopt CFL-reachability to exactly model the matched parentheses for either context-sensitivity or structure-transmitted data-dependence, but not both. Thus, the CFL-reachability formulation for context-sensitive data-dependence analysis is inherently an approximation.\nTo support more precise and scalable analyses, this paper introduces linear conjunctive language (LCL) reachability, a new, expressive class of graph reachability. LCL not only contains the interleaved matched-parenthesis language, but is also closed under all set-theoretic operations. Given a graph with n nodes and m edges, we propose an O(mn) time approximation algorithm for solving all-pairs LCL-reachability, which is asymptotically better than known CFL-reachability algorithms. Our formulation and algorithm offer a new perspective on attacking the aforementioned undecidable problem â the LCL-reachability formulation is exact, while the LCL-reachability algorithm yields a sound approximation. We have applied the LCL-reachability framework to two existing client analyses. The experimental results show that the LCL-reachability framework is both more precise and scalable than the traditional CFL-reachability framework. This paper opens up the opportunity to exploit LCL-reachability in program analysis.","authors":["Qirun Zhang","Zhendong Su"],"meta":["May 2017ACM SIGPLAN Notices","DOI:10.1145/3009837.3009848","Conference: the 44th ACM SIGPLAN Symposium"],"references":["258566844_Resolving_and_Exploiting_the_k-CFA_Paradox","234810332_Resolving_and_Exploiting_the_k-CFA_Paradox_Illuminating_Functional_vs_Object-Oriented_Program_Analysis","220997487_Type-based_flow_analysis_From_polymorphic_subtyping_to_CFL-reachability","220997131_Subcubic_algorithms_for_recursive_state_machines","4263859_A_Robust_Class_of_Context-Sensitive_Languages","311487970_Summary-Based_Context-Sensitive_Data-Dependence_Analysis_in_Presence_of_Callbacks","311487968_Specification_Inference_Using_Context-Free_Language_Reachability","311472317_Subcubic_algorithms_for_recursive_state_machines","301901364_Scope-Bounded_Pushdown_Languages","300205076_Scalable_and_precise_taint_analysis_for_Android","286479462_Towards_a_Scalable_Framework_for_Context-Free_Language_Reachability","280686997_SYSTOLIC_TRELLIS_AUTOMATA_PART_I","277455187_Type-base_flow_analysis","276464390_Summary-Based_Context-Sensitive_Data-Dependence_Analysis_in_Presence_of_Callbacks","273188652_Efficient_subcubic_alias_analysis_for_C","268861842_Systolic_tree_and_trellis_automata","266661606_CFL-reachability_and_context-sensitive_integrity_types","266657658_Persistent_Pointer_Information","262160074_Fast_Algorithms_for_Dyck-CFL-Reachability_with_Applications_to_Alias_Analysis","242926555_Systolic_trellis_automatat","242926537_Systolic_trellis_automatata","242394568_Undecidability_of_Context-Sensitive_Data-Dependence_Analysis","242361757_Introduction_to_Formal_Language_Theory","228057764_Introduction_To_Automata_Theory_Languages_And_Computation","225253040_Reachability_of_Multistack_Pushdown_Systems_with_Scope-Bounded_Matching_Relations","222506415_Program_analysis_via_graph_reachability","222031810_Tree_adjunct_grammar","221590712_Visibly_Pushdown_Languages","221496286_Scaling_CFL-Reachability-Based_Points-To_Analysis_Using_Context-Sensitive_Must-Not-Alias_Analysis","221477259_Existential_Label_Flow_Inference_Via_CFL_Reachability","221443095_Boundedness_vs_Unboundedness_of_Lock_Chains_Characterizing_Decidability_of_Pairwise_CFL-Reachability_for_Threads_Communicating_via_Locks","220997840_Precise_Interprocedural_Dataflow_Analysis_via_Graph_Reachability","220997081_Demand-driven_alias_analysis_for_C","220989846_Shape_Analysis_as_a_Generalized_Path_Problem","220854781_Demand-driven_context-sensitive_alias_analysis_for_Java","220752291_The_set_constraintCFL_reachability_connection_in_practice","220752049_Regularly_annotated_set_constraints","220751937_Refinement-based_context-sensitive_points-to_analysis_for_Java","220618188_Sequential_Machine_Characterizations_of_Trellis_and_Cellular_Automata_and_Applications","220432449_Regularity_and_Related_Problems_for_Deterministic_Pushdown_Automata","220327798_Designing_Systolic_Algorithms_Using_Sequential_Machines","220150821_Characterizations_and_Computational_Complexity_of_Systolic_Trellis_Automata","213893922_Two_approaches_to_interprocedural_data_flow_analysis","200034262_Introduction_to_Automata_Theory_Languages_and_Computation","41702748_On_the_equivalence_of_linear_conjunctive_grammars_and_trellis_automata","2880079_Speeding_up_Slicing","2616055_The_Set_ConstraintCFL_Reachability_Connection_in","2539142_Practical_Experiments_with_Regular_Approximation_Of_Context-Free_Languages","2494028_On_the_Closure_Properties_of_Linear_Conjunctive_Languages","2447636_Context-Sensitive_Synchronization-Sensitive_Analysis_is_Undecidable"]}