{"id":"220909324_Generating_Gray_Codes_in_O1_Worst-Case_Time_per_Word","abstract":"We give a definition of Gray code that, unlike the standard “minimal change” definition, is satisfied by the word-lists in\nthe literature called “Gray codes” and we give several examples to illustrate the various concepts of minimality. We show\nthat a non-recursive generation algorithm can be obtained for a word-list such that all the words with the same prefix (or,\nequivalently, suffix) are consecutive and that the Bitner-Ehrlich-Reingold method of generating each word in a time bounded\nby a constant works under the additional condition that in the interval of words with the same prefix or suffix the next letter\nassumes at least two values. Finally we generalize this method so that it works under a weaker condition satisfied by almost\nall the Gray codes in the literature: if the next letter assumes only one value, then the interval contains only one word.","authors":["Timothy Robert Walsh"],"meta":["January 2003","DOI:10.1007/3-540-45066-1_5","SourceDBLP","Conference: Discrete Mathematics and Theoretical Computer Science, 4th International Conference, DMTCS 2003, Dijon, France, July 7-12, 2003. Proceedings"],"references":["265362712_Loop-free_sequencing_of_bounded_integer_compositions","228523672_Gray_codes_for_involutions","268317589_Combinatorics_for_computer_science_Reprint_of_the_1985_original","265362895_Generation_of_Permutations_by_Adjacent_Transposition","262891827_An_Eades-McKay_Algorithm_for_Well-Formed_Parentheses_Strings","243119652_Generation_of_permutations_by_adjacent_transposition","242619933_Combinatorial_algorithms_second_edition","238207515_Constant_time_generation_of_involutions","238126334_Combination_generation_and_graylex_ordering","234430339_Combinatorial_Algorithms_for_Computers_and_Calculators"]}