{"id":"315303792_OLAK_an_efficient_algorithm_to_prevent_unraveling_in_social_networks","abstract":"In this paper, we study the problem of the anchored k-core. Given a graph G, an integer k and a budget b, we aim to identify b vertices in G so that we can determine the largest induced subgraph J in which every vertex, except the b vertices, has at least k neighbors in J. This problem was introduced by Bhawalkar and Kleinberg et al. in the context of user engagement in social networks, where a user may leave a community if he/she has less than k friends engaged. The problem has been shown to be NP-hard and inapproximable. A polynomial-time algorithm for graphs with bounded tree-width has been proposed. However, this assumption usually does not hold in real-life graphs, and their techniques cannot be extended to handle general graphs.\nMotivated by this, we propose an efficient algorithm, namely o nion- l ayer based a nchored k -core (OLAK), for the anchored k-core problem on large scale graphs. To facilitate computation of the anchored k-core, we design an onion layer structure, which is generated by a simple onion-peeling-like algorithm against a small set of vertices in the graph. We show that computation of the best anchor can simply be conducted upon the vertices on the onion layers, which significantly reduces the search space. Based on the well-organized layer structure, we develop efficient candidates exploration, early termination and pruning techniques to further speed up computation. Comprehensive experiments on 10 real-life graphs demonstrate the effectiveness and efficiency of our proposed methods.","authors":["Fan Zhang","Wenjie Zhang","Ying Zhang","Lu Qin"],"meta":["February 2017Proceedings of the VLDB Endowment 10(6):649-660","DOI:10.14778/3055330.3055332"],"references":["283471203_IO_Efficient_Core_Graph_Decomposition_at_Web_Scale","281186342_CORECLUSTER_A_degeneracy_based_graph_clustering_framework","276202871_Degeneracy-based_Real-Time_Sub-Event_Detection_in_Twitter_Stream","267272440_Distributed_-Core_View_Materialization_and_Maintenance_for_Large_Dynamic_Graphs","262425942_Arrival_and_departure_dynamics_in_social_networks","261849774_Large_scale_cohesive_subgraphs_discovery_for_social_network_visual_analysis","223986817_Structural_diversity_in_social_contagion","221296884_Characterization_of_Graphs_Using_Degree_Cores","220489296_An_Om_Algorithm_for_Cores_Decomposition_of_Networks","220270138_Large_scale_networks_fingerprinting_and_visualization_using_the_k-core_decomposition","45898153_Identification_of_influential_spreaders_in_complex_networks","6250104_A_Model_of_Internet_Topology_Using_k-shell_Decomposition","1958673_K-core_decomposition_of_Internet_graphs_hierarchies_self-similarity_and_measurement_biases","304456772_IO_efficient_Core_Graph_Decomposition_at_web_scale","301233247_Network_structure_and_minimum_degree","291157579_Influence_study_on_hyper-graphs","281396085_Prediction_of_protein_functions_based_on_k-cores_of_protein-protein_interaction_networks_and_amino_acid_sequences","273046785_Structure_and_Strategy_in_Collective_Action","267395945_Locally_Estimating_Core_Numbers","266656598_Local_search_of_communities_in_large_graphs","265339534_Efficient_Core_Maintenance_in_Large_Dynamic_Graphs","262293179_To_stay_or_not_to_stay_Modeling_engagement_dynamics_in_social_graphs","262217667_Streaming_algorithms_for_k-core_decomposition","254042703_Extracting_Analyzing_and_Visualizing_Triangle_K-Core_Motifs_within_Networks","236274304_Preventing_Unraveling_in_Social_Networks_Gets_Harder","236248384_Parameterized_Complexity_of_the_Anchored_k-Core_Problem_for_Directed_Graphs","224237578_Efficient_core_decomposition_in_massive_networks","221296882_Finding_Dense_Subgraphs_with_Size_Bounds","220359026_Using_the_k-core_decomposition_to_analyze_the_static_structure_of_large-scale_software_systems","200775200_Communication_and_Coordination_in_Social_Networks"]}