{"id":"324744612_Longest_Common_Factor_Made_Fully_Dynamic","abstract":"In the longest common factor (LCF) problem, we are given two strings $S$ and $T$, each of length at most $n$, and we are asked to find a longest string occurring in both $S$ and $T$. This is a classical and well-studied problem in computer science. The LCF length for two strings can vary greatly even when a single character is changed. A data structure that can be built in $\\tilde{\\mathcal{O}}(n)$ (The $\\tilde{\\mathcal{O}}$ notation suppresses $\\log^{\\mathcal{O}(1)} n$ factors.) time and can return an LCF of the two strings after a single edit operation (that is reverted afterwards) in $\\tilde{\\mathcal{O}}(1)$ time was very recently proposed as a first step towards the study of the fully dynamic LCF problem. In the fully dynamic version, edit operations are allowed in any of the two strings, and we are to report an LCF after each such operation. We present the first algorithm that requires strongly sublinear time per edit operation. In particular, we show how to return an LCF in $\\tilde{\\mathcal{O}}(n^{3/4})$ time after each operation using $\\tilde{\\mathcal{O}}(n)$ space. We also present an algorithm with $\\tilde{\\mathcal{O}}(\\sqrt{n})$ query time for the restricted case where edits are allowed only in one of the two strings and faster algorithms for several restricted variants of dynamic and internal LCF problems (here `internal' means that we are to answer queries about LCF on multiple factors of a given text).","authors":["Amihood Amir","Panagiotis Charalampopoulos","Solon P. Pissis","Jakub Radoszewski"],"meta":["April 2018"],"references":["332292593_Longest_Common_Substring_with_Approximately_k_Mismatches","323276729_Linear-Time_Algorithm_for_Long_LCF_with_k_Mismatches","322517930_Longest_Common_Prefixes_with_k-Errors_and_Applications","312627409_Sublinear_space_algorithms_for_the_longest_common_substring_problem","303859201_On_the_Benefit_of_Merging_Suffix_Array_Intervals_for_Parallel_Pattern_Matching","265415324_Longest_common_substrings_with_k_mismatches","262367213_kmacs_the_k-Mismatch_Average_Common_Substring_Approach_to_alignment-free_sequence_comparison","258849598_Internal_Pattern_Matching_Queries_in_a_Text_and_Applications","251189000_Computing_the_longest_common_substring_with_one_mismatch","220693689_Algorithms_on_Strings","220390572_Dynamic_text_and_static_pattern_matching","47841538_Fast_Lightweight_Suffix_Array_Construction_and_Checking","7183103_The_Average_Common_Substring_Approach_to_Phylogenomic_Reconstruction","3880887_New_data_structures_for_orthogonal_range_searching","313744319_Color_set_size_problem_with_application_to_string_matching","300080198_A_Provably_Efficient_Algorithm_for_the_k-Mismatch_Average_Common_Substring_Problem","280546196_More_Applications_of_the_Polynomial_Method_to_Algorithm_Design","266147294_A_note_on_the_longest_common_substring_with_k-mismatches_problem","222463929_A_Data_Structure_for_Dynamic_Trees","222369416_Efficient_String_Matching_with_k_Mismatches","220426126_Multidimensional_Divide-and-Conquer","220154853_Longest_repeats_with_a_block_of","200030311_A_sqrtN_Algorithm_for_Mutual_Exclusion_in_Decentralized_Systems","3728285_Optimal_suffix_tree_construction_with_large_alphabets"]}