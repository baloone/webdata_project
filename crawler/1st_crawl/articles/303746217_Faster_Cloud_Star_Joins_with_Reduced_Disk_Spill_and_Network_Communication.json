{"id":"303746217_Faster_Cloud_Star_Joins_with_Reduced_Disk_Spill_and_Network_Communication","abstract":"Combining powerful parallel frameworks and on-demand commodity hardware, cloud computing has made both analytics and decision support systems canonical to enterprises of all sizes. Associated with unprecedented volumes of data stacked by such companies, filtering and retrieving them are pressing challenges. This data is often organized in star schemas, in which Star Joins are ubiquitous and expensive operations. In particular, excessive disk spill and network communication are tight bottlenecks for all current MapReduce or Spark solutions. Here, we propose two efficient solutions that drop the computation time by at least 60%: the Spark Bloom-Filtered Cascade Join (SBFCJ) and the Spark Broadcast Join (SBJ). Conversely, a direct Spark implementation of a sequence of joins renders poor performance, showcasing the importance of further filtering for minimal disk spill and network communication. Finally, while SBJ is twice faster when memory per executor is large enough, SBFCJ is remarkably resilient to low memory scenarios. Both algorithms pose very competitive solutions to Star Joins in the cloud.","authors":["Jaqueline Joice Brito","Thiago S Mosqueiro","Ricardo Rodrigues Ciferri","Cristina Dutra De Aguiar Ciferri"],"meta":["December 2016Procedia Computer Science 80:74-85"],"references":["228072715_Cascading_Map-Side_joins_over_HBase_for_scalable_join_processing","222402824_Past_Present_and_Future_of_Decision_Support_Technology","220405855_Scatter-Gather-Merge_An_efficient_star-join_query_processing_algorithm_for_data-parallel_frameworks","257015955_Leveraging_the_capabilities_of_service-oriented_decision_support_systems_Putting_analytics_and_big_data_in_cloud","254010045_Efficient_Star_Join_for_Column-oriented_Data_Store_in_the_MapReduce_Environment","2955543_Database_technology_for_decision_support_systems"]}