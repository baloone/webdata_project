{"id":"263470574_Competing_Dichotomies_in_Teaching_Computer_Programming_to_Beginner-Students","abstract":"The goal in teaching computer programming is to develop in students the capabilities required of a professional software developer. Beginner programmers suffer from a wide range of difficulties and deficits. Several studies suggest that undertaking computer programming for meeting a real industry application is still a challenge for many students even after studying for a year or two. The purpose of this paper is to investigate the challenges in teaching computer programming to beginner-students and to initiate a dialog in the information and communication technology teaching community on how to teach and assess computer programming courses effectively. We undertake an extensive literature review to identify four major programming dichotomies in teaching computer programming: knowledge versus application, comprehension versus generation, procedural versus object oriented and functional versus imperative. Further, based on our teaching experience, we propose a practical approach to teaching computer programming to beginner-students. The paper discusses the implications to ICT teaching community and how teaching and assessments can be made effective to achieve the goal of making beginner programmer learn not only knowledge but also relevant application skills. We believe that the study would contribute to making ICT teaching more practical and effective in achieving their educational goals.","authors":["David Nandigam"],"meta":["September 2013American Journal of Educational Research 1(8)","DOI:10.12691/education-1-8-7"],"references":["237285730_Optimists_have_more_fun_but_do_they_learn_better_On_the_influence_of_emotional_and_social_factors_on_learning_introductory_computer_science","237108805_Computing_curricula_2001_computer_science","234800767_A_Multi-National_Study_of_Reading_and_Tracing_Skills_in_Novice_Programmers","262352281_Chick_sexing_and_novice_programmers_Explicit_instruction_of_problem_solving_strategies","242587347_From_Problems_to_Programs_Via_Plans_The_Content_and_Structure_of_Knowledge_for_Introductory_LISP_Programming","242467151_The_elementary_patterns_home_page","234826946_Teaching_and_assessing_programming_strategies_explicitly","234814198_Programming_pedagogy-A_psychological_overview","234764167_Teaching_design_effectively_in_the_introductory_programming_courses","232494579_Sexing_Day-Old_Chicks_A_Case_Study_and_Expert_Systems_Analysis_of_a_Difficult_Perceptual-Learning_Task","232481584_Implicit_learning_of_tacit_knowledge","228989075_Incorporating_programming_strategies_explicitly_into_curricula","228951140_Teaching_Programming_in_Secondary_School_A_Pedagogical_Content_Knowledge_Perspective","228343198_An_Australasian_study_of_reading_and_comprehension_skills_in_novice_programmers_using_the_bloom_and_SOLO_taxonomies","226135430_Theoretical_Perspectives_Influencing_the_Use_of_Information_Technology_in_Teaching_and_Learning"]}