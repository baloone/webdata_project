{"id":"318375339_Identifying_test-suite-overfitted_patches_through_test_case_generation","abstract":"A typical automatic program repair technique that uses a test suite as the correct criterion can produce a patched program that is test-suite-overfitted, or overfitting, which passes the test suite but does not actually repair the bug. In this paper, we propose DiffTGen which identifies a patched program to be overfitting by first generating new test inputs that uncover semantic differences between the original faulty program and the patched program, then testing the patched program based on the semantic differences, and finally generating test cases. Such a test case could be added to the original test suite to make it stronger and could prevent the repair technique from generating a similar overfitting patch again. We evaluated DiffTGen on 89 patches generated by four automatic repair techniques for Java with 79 of them being likely to be overfitting and incorrect. DiffTGen identifies in total 39 (49.4%) overfitting patches and yields the corresponding test cases. We further show that an automatic repair technique, if configured with DiffTGen, could avoid yielding overfitting patches and potentially produce correct ones.","authors":["Qi Xin","Steven Reiss"],"meta":["July 2017","DOI:10.1145/3092703.3092718","Conference: the 26th ACM SIGSOFT International Symposium"],"references":["314152764_Test_Case_Generation_for_Program_Repair_A_Study_of_Feasibility_and_Effectiveness","309450255_Automatic_Repair_of_Real_Bugs_in_Java_A_Large-Scale_Experiment_on_the_Defects4J_Dataset","307307206_Precise_Condition_Synthesis_for_Program_Repair","305772994_Anti-patterns_in_Search-Based_Program_Repair","305026872_ASTOR_a_program_repair_library_for_Java_demo","299487436_History_Driven_Program_Repair","297777476_Nopol_Automatic_Repair_of_Conditional_Statement_Bugs_in_Java_Programs","282155495_Directed_Incremental_Symbolic_Execution","266659285_Defects4J_a_database_of_existing_faults_to_enable_controlled_testing_studies_for_Java_programs","260424732_The_Strength_of_Random_Search_on_Automated_Program_Repair","258499614_Mining_Software_Repair_Models_for_Reasoning_on_the_Search_Space_of_Automated_Program_Fixing","221560749_EvoSuite_Automatic_test_suite_generation_for_object-oriented_software","221554067_Has_the_bug_really_been_fixed","220884061_DiffGen_Automated_Regression_Unit-Test_Generation","220854678_eXpress_Guided_path_exploration_for_efficient_regression_test_generation","220854657_BERT_BEhavioral_Regression_Testing","220720078_Automated_Behavioral_Regression_Testing","304552841_DirectFix_Looking_for_Simple_Program_Repairs","304286816_Repairing_Programs_with_Semantic_Code_Search_T","303284530_Automatic_patch_generation_by_learning_correct_code","303099279_Angelix_Scalable_Multiline_Program_Patch_Synthesis_via_Symbolic_Analysis","301274054_Automatic_patch_generation_by_learning_correct_code","299909645_Staged_program_repair_with_condition_synthesis","299868538_Is_the_cure_worse_than_the_disease_overfitting_in_automated_program_repair","291354179_Shadow_of_a_Doubt_Testing_for_Divergences_Between_Software_Versions","280149378_Differential_symbolic_execution","279835496_An_Analysis_of_Patch_Plausibility_and_Correctness_for_Generate-And-Validate_Patch_Generation_Systems","266656855_Shadow_symbolic_execution_for_better_testing_of_evolving_software","266656273_Patch_verification_via_multiversion_interprocedural_control_flow_graphs","262248553_KATCH_high-coverage_testing_of_software_patches","261276659_Leveraging_program_equivalence_for_adaptive_program_repair_Models_and_first_results","261230128_Automatic_patch_generation_learned_from_human-written_patches","261166224_SemFix_Program_repair_via_semantic_analysis","261120284_Partition-based_regression_verification","254041670_A_systematic_study_of_automated_program_repair_Fixing_55_out_of_105_bugs_for_8_each","225220378_Practical_Low-Effort_Equivalence_Verification_of_Real_Code","221560785_How_do_fixes_become_bugs","221560249_Differential_symbolic_execution","220854542_Automated_Regression_Test_Generation","220752213_Directed_Incremental_Symbolic_Execution","220277726_Toward_an_understanding_of_bug_fix_patterns"]}