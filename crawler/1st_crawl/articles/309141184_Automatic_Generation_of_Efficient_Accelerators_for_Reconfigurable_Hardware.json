{"id":"309141184_Automatic_Generation_of_Efficient_Accelerators_for_Reconfigurable_Hardware","abstract":"Acceleration in the form of customized datapaths offer large performance and energy improvements over general purpose processors. Reconfigurable fabrics such as FPGAs are gaining popularity for use in implementing application-specific accelerators, thereby increasing the importance of having good high-level FPGA design tools. However, current tools for targeting FPGAs offer inadequate support for high-level programming, resource estimation, and rapid and automatic design space exploration.\nWe describe a design framework that addresses these challenges. We introduce a new representation of hardware using parameterized templates that captures locality and parallelism information at multiple levels of nesting. This representation is designed to be automatically generated from high-level languages based on parallel patterns. We describe a hybrid area estimation technique which uses template-level models and design-level artificial neural networks to account for effects from hardware place-and-route tools, including routing overheads, register and block RAM duplication, and LUT packing. Our runtime estimation accounts for off-chip memory accesses. We use our estimation capabilities to rapidly explore a large space of designs across tile sizes, parallelization factors, and optional coarse-grained pipelining, all at multiple loop levels. We show that estimates average 4.8% error for logic resources, 6.1% error for runtimes, and are 279 to 6533 times faster than a commercial high-level synthesis tool. We compare the best-performing designs to optimized CPU code running on a server-grade 6 core processor and show speedups of up to 16.7Ã—.","authors":["David Koeplinger","Christina Delimitrou","Raghu Prabhakar","Christos Kozyrakis"],"meta":["June 2016ACM SIGARCH Computer Architecture News 44(3):115-127","DOI:10.1145/3007787.3001150"],"references":["282370213_Encog_Library_of_Interchangeable_Machine_Learning_Models_for_Java_and_C","271481765_A_Reconfigurable_Fabric_For_Accelerating_Large-Scale_Datacenter_Services","264554326_Composition_and_Reuse_with_Compiled_Domain-Specific_Languages","262309585_LegUp_An_Open-Source_High-Level_Synthesis_Tool_for_FPGA-Based_ProcessorAccelerator_Systems","262242434_Hardware_acceleration_of_database_operations","221346253_OptiML_An_Implicitly_Parallel_Domain-Specific_Language_for_Machine_Learning","221321348_Lime_a_Java-Compatible_and_Synthesizable_Language_for_Heterogeneous_Architectures","221154164_High-Level_Power_Estimation_and_Low-Power_Design_Space_Exploration_for_FPGAs","220770895_Understanding_sources_of_inefficiency_in_general-purpose_chips","3948640_FPGA_resource_and_timing_estimation_from_Matlab_execution_traces","3225889_Design_Space_Pruning_Through_Early_Estimations_of_AreaDelay_Tradeoffs_for_FPGA_Implementations","2566375_FPGA_Resource_and_Timing_Estimation_from_Matlab_Execution_Traces","311490083_Generating_Configurable_Hardware_from_Parallel_Patterns","309594118_A_reconfigurable_fabric_for_accelerating_large-scale_datacenter_services","305864797_SDA_Software-defined_accelerator_for_large-scale_DNN_systems","305744995_Generating_Configurable_Hardware_from_Parallel_Patterns","303904788_Generating_Configurable_Hardware_from_Parallel_Patterns","290767087_A_Study_on_the_Impact_of_Compiler_Optimizations_on_High-Level_Synthesis","288492158_Halide","284579421_Generating_Configurable_Hardware_from_Parallel_Patterns","283829697_CMOST_a_system-level_FPGA_compilation_framework","281507672_PuDianNao","280769163_Aladdin","277896547_PuDianNao_A_Polyvalent_Machine_Learning_Accelerator","277679289_Delite","275482077_Convolution_engine","271455545_Aladdin_A_pre-RTL_power-performance_accelerator_simulator_enabling_large_design_space_exploration_of_customized_architectures","266653440_Polyhedral-based_data_reuse_optimization_for_configurable_computing","265454137_BENCHMARKING_MODERN_MULTIPROCESSORS","262281957_FPGA_programming_for_the_masses","262174473_Convolution_Engine_Balancing_Efficiency_and_Flexibility_in_Specialized_Computing","262164115_Q100_The_Architecture_and_Design_of_a_Database_Processing_Unit","262155200_Halide_A_Language_and_Compiler_for_Optimizing_Parallelism_Locality_and_Recomputation_in_Image_Processing_Pipelines","224225866_High-Level_Synthesis_for_FPGAs_From_Prototyping_to_Deployment","221224574_Measuring_the_gap_between_FPGAs_and_ASICs","220759607_High-Level_Area_and_Performance_Estimation_of_Hardware_Building_Blocks_on_FPGAs","220540722_Accurate_Area_Time_and_Power_Models_for_FPGA-Based_Implementations","10832900_Universal_Approximation_Using_Feedforward_Neural_Networks_A_Survey_of_Some_Existing_Methods_and_Some_New_Results","3945492_Accurate_area_and_delay_estimators_for_FPGAs","3226002_Measuring_the_gap_between_FPGAs_and_ASICs"]}