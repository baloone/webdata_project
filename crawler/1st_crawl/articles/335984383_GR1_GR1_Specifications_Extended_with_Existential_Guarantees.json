{"id":"335984383_GR1_GR1_Specifications_Extended_with_Existential_Guarantees","abstract":"Reactive synthesis is an automated procedure to obtain a correct-by-construction reactive system from its temporal logic specification. GR(1) is an expressive assume-guarantee fragment of LTL that enables efficient synthesis and has been recently used in different contexts and application domains. A common form of providing the system’s requirements is through use cases, which are existential in nature. However, GR(1), as a fragment of LTL, is limited to universal properties. In this paper we introduce GR(1)*, which extends GR(1) with existential guarantees. We show that GR(1)* is strictly more expressive than GR(1) as it enables the expression of guarantees that are inexpressible in LTL. We solve the realizability problem for GR(1)* and present a symbolic strategy construction algorithm for GR(1)* specifications. Importantly, in comparison to GR(1), GR(1)* remains efficient, and induces only a minor additional cost in terms of time complexity, proportional to the extended length of the formula.","authors":["Gal Amram","Shahar Maoz","Or Pistiner"],"meta":["September 2019","DOI:10.1007/978-3-030-30942-8_7","In book: Formal Methods – The Next 30 Years (pp.83-100)"],"references":["350872871_Spectra_a_specification_language_for_reactive_systems","335425475_Symbolic_Repairs_for_GR1_Specifications","321344013_CTL_synthesis_via_LTL_synthesis","310769467_Interpolation-Based_GR1_Assumptions_Refinement","309614547_On_well-separation_of_GR1_specifications","308797136_Control_design_for_hybrid_systems_with_TuLiP_The_Temporal_Logic_Planning_toolbox","299909728_GR1_synthesis_for_LTL_specification_patterns","262399011_Learning_from_Vacuously_Satisfiable_Scenario-Based_Specifications","262250075_Sometimes_and_not_never_revisited_on_branching_versus_linear_time_temporal_logic","238759536_Modular_synthesis_of_reactive_systems","234827421_On_the_synthesis_of_a_reactive_module","228981162_Synthesis_with_Incomplete_Informatio","224588836_Temporal-Logic-Based_Reactive_Mission_and_Motion_Planning","224361653_Synthesis_of_Partial_Behavior_Models_from_Properties_and_Scenarios","221554770_Existential_live_sequence_charts_revisited","221551025_Diagnostic_Information_for_Realizability","220852196_Temporal_Logic_for_Scenario-Based_Specifications","220069872_Supporting_Scenario-Based_Requirements_Engineering","4251285_Behaviour_Model_Synthesis_from_Properties_and_Scenarios","3248096_Rich-Media_Scenarios_for_Discovering_Requirements","332199482_Environmentally-Friendly_GR1_Synthesis","309589113_Cooperative_Reactive_Synthesis","308106886_Synthesizing_cooperative_reactive_mission_plans","303886455_Reactive_high-level_behavior_synthesis_for_an_Atlas_humanoid_robot","301191756_Fundamentals_of_Requirements_Management","287030856_Predicate_abstraction_for_reactive_synthesis","285607353_Assume-Guarantee_Scenarios_Semantics_and_Synthesis","263796774_SYNTHESIZING_STATE-BASED_OBJECT_SYSTEMS_FROM_LSC_SPECIFICATIONS","262212194_Synthesizing_nonanomalous_event-based_controllers_for_liveness_goals","260649033_Synthesizing_Modal_Transition_Systems_from_Triggered_Scenarios","257468440_Debugging_formal_specifications_A_practical_approach_using_model-based_diagnosis_and_counterstrategies","257145163_An_Improved_Algorithm_for_the_Evaluation_of_Fixpoint_Expressions","255972010_Counter-Strategy_Guided_Refinement_of_GR1_Temporal_Logic_Specifications","237132002_The_design_and_synthesis_of_synchronization_skeletons_using_temporal_logic","233882447_Scenarios_stories_use_cases_through_the_systems_development_life-cycle","232716920_Results_on_the_Propositional_mu-Calculus","223801282_Bridging_the_gap_between_fair_simulation_and_trace_inclusion","222531987_Using_abduction_and_induction_for_operational_requirements_elaboration","221550991_Synthesis_of_Reactive1_Designs","221105790_Design_and_Synthesis_of_Synchronization_Skeletons_Using_Branching_Time_Temporal_Logic","221014728_AspectLTL_An_aspect_language_for_LTL_specifications","220896827_Results_on_the_Propositional_m-Calculus","220877629_Object-Oriented_Software_Engineering-A_Use_Case_Drive_Approach","220693866_Requirements_Engineering_Fundamentals_Principles_and_Techniques","220691810_Object-Oriented_Software_Engineering_-_A_Use-Case_Driven_Approach","220248926_Bridging_the_gap_between_fair_simulation_and_trace_inclusion","215902925_CUDD_CU_decision_diagram_package_release_24_1","38347971_A_Lattice-Theoretical_Fixpoint_Theorem_and_Its_Applications","4354738_The_Temporal_Logic_of_Programs","3846344_Patterns_in_property_specifications_for_finite-state_verification","3048809_Bryant_RE_Graph-Based_Algorithms_for_Boolean_Function_Manipulation_IEEE_Trans_Computers_358_677-691","2592885_Patterns_in_Property_Specifications_for_Finite-State_Verification"]}