{"id":"308862503_Combining_Symbolic_Execution_and_Model_Checking_for_Data_Flow_Testing","authors":["Ting Su","Zhoulai Fu","Geguang Pu","Jifeng He"],"meta":["May 2015","DOI:10.1109/ICSE.2015.81","Conference: 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering (ICSE)"],"references":["269305034_Efficient_Leveraging_of_Symbolic_Execution_to_Advanced_Coverage_Criteria","263106571_On_the_Right_Objectives_of_Data_Flow_Testing","261449201_Search-based_data-flow_test_generation","261392354_Quantifying_the_complexity_of_dataflow_testing","232650629_Automated_Test_Data_Generation_for_Coverage_Haven't_We_Solved_This_Problem_Yet","228886250_Structural_coverage_of_feasible_code","224574694_Test_Data_Generation_for_Derived_Types_in_C_Program","224185157_Test_generation_via_Dynamic_Symbolic_Execution_for_mutation_testing","224185124_Guided_test_generation_for_coverage_criteria","221560458_CUTE_A_concolic_unit_testing_engine_for_C","221553870_Experiments_of_the_Effectiveness_of_Dataflow-_and_Controlflow-Based_Test_Adequacy_Criteria","220957779_Fitness-Guided_Path_Exploration_in_Dynamic_Symbolic_Execution","220883470_Efficiently_monitoring_data-flow_test_coverage","220854667_Proofs_from_Tests","220773270_Using_Genetic_Algorithms_to_Aid_Test-Data_Generation_for_Data-Flow_Coverage","220752310_DART_Directed_automated_random_testing","220367508_A_Parallel_Approach_to_Concolic_Testing_with_Low-cost_Synchronization","213894796_Interprocedural_Dynamic_Slicing_Applied_to_Interprocedural_Data_How_Testing","47749468_A_New_Software_Data-Flow_Testing_Approach_via_Ant_Colony_Algorithms","41530445_Execution_Synthesis_A_Technique_for_Automated_Software_Debugging","319395113_DO-178B_Software_Considerations_in_Airborne_Systems_and_Equipment_Certification","289772315_Precise_guidance_to_dynamic_test_generation","286746557_Automated_Coverage-Driven_Test_Data_Generation_Using_Dynamic_Symbolic_Execution","267465840_Compilers_Principles_techniques_and_tools_2nd_ed","262288155_DART_Directed_Automated_Random_Testing","262248553_KATCH_high-coverage_testing_of_software_patches","261450804_Modeling_and_verification_of_AUTOSAR_OS_and_EMS_application","261039299_ORIENTAIS_Formal_verified_OSEKVDX_real-time_operating_system","257390883_The_collateral_coverage_of_data_flow_criteria_when_branch_testing","254463885_Augmented_dynamic_symbolic_execution","242787230_The_SLAM_project_Debugging_system_software_via_static_analysis","242402828_Software_Testing_Techniques","236896048_The_Software_Model_Checker_BLAST_Applications_to_Software_Engineering","223176525_Evolutionary_test_environment_for_automatic_structural_testing","221477410_Directed_Symbolic_Execution","221418364_Towards_Scalable_Compositional_Test_Generation","221225817_Automatic_Test_Data_Generation_for_Data_Flow_Testing_Using_Particle_Swarm_Optimization","220883338_Heuristics_for_Scalable_Dynamic_Test_Generation","220854601_Data_Flow_Coverage_and_the_C_Language","220851853_KLEE_Unassisted_and_Automatic_Generation_of_High-Coverage_Tests_for_Complex_Systems_Programs","220535893_A_Data_Flow_Analysis_Approach_to_Program_Testing","220516426_Using_Symbolic_Execution_and_Data_Flow_Criteria_to_Aid_Test_Data_Selection","220423278_Symbolic_Execution_and_Program_Testing","220403847_The_Chaining_Approach_for_Software_Test_Data_Generation","213892289_Efficient_Computation_of_Interprocedural_Definition-Use_Chains","210304586_Compilers_Principles_Techniques_Tools","23962329_CPAchecker_A_Tool_for_Configurable_Software_Verification","4083461_Generating_tests_from_counterexamples","4047625_Coverage_criteria_for_logical_expressions","4016796_Data_flow_testing_as_model_checking","4016744_Modular_verification_of_software_components_in_C","3593652_Interprocedural_dynamic_slicing_applied_to_interprocedural_data_flow_testing","3188705_Selecting_Software_Test_Data_Using_Data_Flow_Information","3510977_ATAC_A_data_flow_coverage_testing_tool_for_C","3188371_Using_spanning_sets_for_coverage_testing"]}