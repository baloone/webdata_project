{"id":"305923430_A_static_approach_to_estimation_of_execution_time_of_components_in_AADL_models","abstract":"During development of modern avionics systems and other mission-critical systems modelling is vitally used. Models can be used for checking and validation of developed system, including early validation. Early validation is very important because the cost of errors is raising exponentially depending on the development stage. For modelling of such systems, Architecture Analysis and Design Language (AADL) is widely used. It allows to model both architecture of a developed system and some of behavioral characteristics of its components. In the paper the task of automated model checking for consistency of some behavioral properties is considered. In particular, we focus on the problem of estimation of working time of model components and corresponding between this time and other properties in a model. This problem is close to the worst-case execution time problem (WCET) but it has its own specific in this application. We considered a static approach allowing to work with standard specification of components behaviour in AADL-models with specialized extended finite automata. In the paper peculiarities of used behaviour model (specialized finite automata) were considered including work with time and external events. We considered the problem of working time estimation for such models connected with non-local characteristic of this property. We propose an algorithm for time estimation for such behaviour models. This algorithm was implemented in MASIW framework, a tool for development of AADL-models.","authors":["A.M. Troitskiy","Denis Buzdalov"],"meta":["January 2016Proceedings of the Institute for System Programming of RAS 28(2):157-172","DOI:10.15514/ISPRAS-2016-28(2)-10"],"references":["287544855_Tools_for_System_Design_of_Integrated_Modular_Avionics","242562037_A_Note_on_Two_Problems_in_Connexion_with_Graphs","213894633_Depth-First_Search_and_Linear_Graph_Algorithms","4295132_Transitioning_from_federated_avionics_architectures_to_Integrated_Modular_Avionics"]}