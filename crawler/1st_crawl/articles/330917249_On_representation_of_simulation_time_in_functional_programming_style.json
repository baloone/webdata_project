{"id":"330917249_On_representation_of_simulation_time_in_functional_programming_style","abstract":"Functional programming plays the big role in the modern computer science and its importance is growing. This is not accidential: this approach helps to create better and more reliable software that is easy to reason about (both manually and automatically). However, these techniques are hardly used in the field of tools helping designing and modeling mission-critical systems. In this paper, we are trying to apply some nice techniques of functional programming to create a modeling system, in particular a simulation system for analysis of temporal behavioural properties of mission-critical systems. As a first step, we designed a representation of simulation time in terms of abstractions used in functional programming and tried to study its compositionability properties.","authors":["Denis Buzdalov","Alexander K. Petrenko","Alexey Khoroshilov"],"meta":["January 2018Proceedings of the Institute for System Programming of RAS 30(6):341-366","DOI:10.15514/ISPRAS-2018-30(6)-20"],"references":["305923430_A_static_approach_to_estimation_of_execution_time_of_components_in_AADL_models","273444648_Freer_Monads_More_Extensible_Effects","266718917_Typed_Tagless_Final_Interpreters","221303508_Programming_with_Arrows","220997971_Imperative_Functional_Programming","220369483_Idioms_are_Oblivious_Arrows_are_Meticulous_Monads_are_Promiscuous","215446169_Applicative_Programming_with_Effects","316865342_Simulation_of_AADL_models_with_software-in-the-loop_execution","289219086_A_discrete-event_simulator_for_early_validation_of_avionics_systems","222520426_Generalising_monads_to_arrows","2452204_Why_Functional_Programming_Matters","46945981_Prospects_for_Functional_Programming_in_Software_Engineering"]}