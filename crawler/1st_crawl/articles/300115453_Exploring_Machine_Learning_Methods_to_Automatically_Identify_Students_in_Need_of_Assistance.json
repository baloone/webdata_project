{"id":"300115453_Exploring_Machine_Learning_Methods_to_Automatically_Identify_Students_in_Need_of_Assistance","abstract":"Methods for automatically identifying students in need of assistance have been studied for decades. Initially, the work was based on somewhat static factors such as students' educational background and results from various questionnaires, while more recently, constantly accumulating data such as progress with course assignments and behavior in lectures has gained attention. We contribute to this work with results on early detection of students in need of assistance, and provide a starting point for using machine learning techniques on naturally accumulating programming process data.\nWhen combining source code snapshot data that is recorded from students' programming process with machine learning methods, we are able to detect high- and low-performing students with high accuracy already after the very first week of an introductory programming course. Comparison of our results to the prominent methods for predicting students' performance using source code snapshot data is also provided.\nThis early information on students' performance is beneficial from multiple viewpoints. Instructors can target their guidance to struggling students early on, and provide more challenging assignments for high-performing students. Moreover, students that perform poorly in the introductory programming course, but who nevertheless pass, can be monitored more closely in their future studies.","authors":["Alireza Ahadi","Raymond Lister","Heikki Haapala","Arto Vihavainen"],"meta":["July 2015","DOI:10.1145/2787622.2787717","Conference: the eleventh annual International Conference"],"references":["268151571_Falling_Behind_Early_and_Staying_Behind_When_Learning_to_Program","266660882_Predicting_student_success_using_fine_grain_clicker_data","266660881_A_systematic_review_of_approaches_for_teaching_introductory_programming_and_their_influence_on_success","263617363_Social_and_Economic_Conditions_of_Student_Life_in_Europe_Eurostudent_IV_2008-2011","263011292_Investigating_Automated_Student_Modeling_in_a_Java_MOOC","263011289_Exploring_Problem_Solving_Paths_in_a_Java_Programming_Course","313657280_Data_mining_algorithms_to_classify_students","266657039_Failure_rates_in_introductory_programming_revisited","262425643_No_tests_required_Comparing_traditional_and_dynamic_predictors_of_programming_success","262284351_Identifying_challenging_CS1_concepts_in_a_large_problem_dataset"]}