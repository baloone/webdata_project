{"id":"318892439_Parallel_construction_of_succinct_trees","abstract":"Succinct representations of trees are an elegant solution to make large trees fit in main memory while still supporting navigational operations in constant time. However, their construction time remains a bottleneck. We introduce two parallel algorithms that improve the state of the art in succinct tree construction. Our results are presented in terms of work, the time needed to execute a parallel computation using one thread, and span, the minimum amount of time needed to execute a parallel computation, for any amount of threads. Given a tree on n nodes stored as a sequence of balanced parentheses, our first algorithm builds a succinct tree representation with work, span and supports a rich set of operations in time. Our second algorithm improves the query support. It constructs a succinct representation that supports queries in time, taking work and span, for any positive constant c. Both algorithms use bits of working space. In experiments using up to 64 cores on inputs of different sizes, our first algorithm achieved good parallel speed-up. We also present an algorithm that takes work and span to construct the balanced parenthesis sequence of the input tree required by our succinct tree construction algorithm.","authors":["José Fuentes-Sepúlveda","Leo Ferres","Meng He","Norbert Zeh"],"meta":["August 2017Theoretical Computer Science 700(3)","DOI:10.1016/j.tcs.2017.07.025"],"references":["308907775_Parallel_Construction_of_Wavelet_Trees_on_Multicore_Architectures","266871959_Wavelet_trees_A_survey","220982101_Succinct_Trees_in_Practice","220897517_Succinct_Ordinal_Trees_Based_on_Tree_Covering","220779148_Succinct_Ordinal_Trees_with_Level-Ancestor_Queries","220223582_Representing_Trees_of_Higher_Degree","45849945_Fully-Functional_Static_and_Dynamic_Succinct_Trees","2897137_Compressed_Suffix_Trees_with_Full_Functionality","2567898_High-Order_Entropy-Compressed_Text_Indexes","2501716_Succinct_Representations_of_lcp_Information_and_Improvements_in_the_Compressed_Suffix_Arrays","315957246_Parallel_lightweight_wavelet_tree_suffix_array_and_FM-index_construction","311756434_Parallel_Lightweight_Wavelet_Tree_Suffix_Array_and_FM-Index_Construction","275581667_Parallel_Construction_of_Succinct_Trees","266064772_Succinct_Representations_of_Ordinal_Trees","264385550_Parallel_Wavelet_Tree_Construction","259162508_Wavelet_Trees_for_All","257428696_A_Uniform_Paradigm_to_Succinctly_Encode_Various_Families_of_Trees","246035105_Efficient_suffix_trees_on_secondary_storage","224354132_Succincter","222291339_Surpassing_the_information_theoretic_bound_with_fusion_trees","222217164_Space_Efficient_Suffix_Trees","221444095_A_New_Succinct_Representation_of_RMQ-Information_and_Improvements_in_the_Enhanced_Suffix_Array","221083840_Cost-Optimal_Parallel_Algorithms_for_Constructing_B-Trees","220982109_A_Simple_Parallel_Cartesian_Tree_Algorithm_and_its_Application_to_Suffix_Tree_Construction","220952890_Prefix_Computations_on_Symmetric_Multiprocessors","220618429_Space-Efficient_Preprocessing_Schemes_for_Range_Minimum_Queries_on_Static_Arrays","220574408_Ultra-succinct_representation_of_ordered_trees_with_applications","220426150_A_Unifying_Look_at_Data_Structures","220390638_Balanced_Parentheses_Strike_Back","51992176_What_Every_Programmer_Should_Know_About_Memory","51930271_Succinct_Representations_of_Permutations_and_Functions","48308698_The_Power_of_Collision_Randomized_Parallel_Algorithms_for_Chaining_and_Integer_Sorting","3593100_Scheduling_multithreaded_computations_by_work_stealing","3501857_Space-efficient_Static_Trees_and_Graphs","2860012_The_Level_Ancestor_Problem_Simpli","2819735_Scheduling_Multithreaded_Computations_by_Work_Stealing","2807683_Succinct_Representation_of_Balanced_Parentheses_Static_Trees_and_Planar_Graphs","2616833_Prefix_Computations_on_Symmetric_Multiprocessors"]}