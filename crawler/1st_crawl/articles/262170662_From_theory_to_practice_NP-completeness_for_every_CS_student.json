{"id":"262170662_From_theory_to_practice_NP-completeness_for_every_CS_student","abstract":"NP-completeness is one of the most central concepts in computer science, and has been extensively applied in many diverse application areas. Despite this, students have problems grasping the concept and, more specifically, applying it to new problems. Independently, we have identified these problems at our universities in different countries and cultures. In an action research approach we have modified our courses and studied the effects. We here present some promising results. Our approach is mainly based on the idea of making more evident the fact that proving a new NP-completeness result is not at all different from designing a new algorithm. Based on this idea, we used tools typically used to teach algorithms (such as automatic program assessment and algorithm visualization systems), accompanied by other activities mainly devoted to augmenting the motivation to study computational complexity and forcing students to think and adopt a standpoint.","authors":["Pierluigi Crescenzi","Emma Enstr√∂m","Viggo Kann"],"meta":["July 2013","DOI:10.1145/2462476.2465582","Conference: Proceedings of the 18th ACM conference on Innovation and technology in computer science education"],"references":["254049381_Five_years_with_kattis_-_Using_an_automated_assessment_system_in_teaching","254049121_Work_in_progress_-_Courses_dedicated_to_the_development_of_logical_and_algorithmic_thinking","234806759_On_teaching_theoretical_foundations_of_computer_science","231557192_Learning_and_Teaching_in_Higher_Education_The_Reflective_Professional","225133384_On_Teaching_the_Basics_of_Complexity_Theory","220808440_Computer_lab_work_on_theory","220807284_Reductive_thinking_in_undergraduate_CS_courses","311471871_On_teaching_theoretical_foundations_of_Computer_Science","284677521_Self-Efficacy_Beliefs_of_Adolescents","271729841_Development_and_Validation_of_Scores_on_a_Computer_Programming_Self-Efficacy_Scale_and_Group_Analyses_of_Novice_Programmer_Self-Efficacy","268486419_Reductive_thinking_in_a_quantitative_perspective_The_case_of_the_algorithm_course","242091808_An_investigation_of_factors_related_to_self-efficacy_for_Java_programming_among_engineering_students","241081823_Clickers_A_New_Teaching_Aid_with_Exceptional_Promise","239279915_Theoretical_Computer_Science_Essays_in_Memory_of_Shimon_Even","234809416_NP-_Completeness_for_All_Computer_Science_Undergraduates_A_Novel_Project-_Based_Curriculum","233820393_Social_Foundations_of_Thought_Action_A_Social_Cognitive_Theory","232603513_Role_of_Self-Efficacy_and_Self-Concept_Beliefs_in_Mathematical_Problem_Solving_A_Path_Analysis","220808257_Using_AVs_to_explain_NP-completeness","220807522_Reductive_thinking_in_a_quantitative_perspective_the_case_of_the_algorithm_course","220555391_Introduction_to_the_Theory_of_Computation","2453372_NP-completeness_A_Retrospective","2335821_Using_Interactive_Visualization_for_Teaching_the_Theory_of_NP-completeness"]}