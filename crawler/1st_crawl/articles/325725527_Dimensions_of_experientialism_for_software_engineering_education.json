{"id":"325725527_Dimensions_of_experientialism_for_software_engineering_education","abstract":"There is a gap between the abstract concepts taught in the classroom and the skills needed for students to succeed once they join the workplace. The Undergraduate Capstone Open Source Projects (UCOSP) program was developed to narrow this gap by enabling undergraduate computer science students to have an experiential software engineering learning opportunity. Over the past 8 years, 737 students from 30 universities have taken part in this program.\nIn this paper, we sought to understand student perceptions of how UCOSP complements traditional classwork by providing real-world software engineering exposure. We report on a qualitative analysis of 2,203 quotes collected from 167 students from 18 universities over six academic terms. We analyzed these data using a grounded theory approach based on open coding to gain insight into the key benefits of the program from the students' perspective. We found that students highly value being able to apply their classroom knowledge to real, novel tasks, for real projects with a community of users, while receiving real mentorship from a member of the development team. Further, we found that contributing to real software systems provides greater understanding of software engineering than might otherwise be obtained through more traditional means.\nOur goal is that our analysis can help fellow educators add additional experimentalism into their existing programs.","authors":["Reid Holmes","Meghan Allen","Michelle Craig"],"meta":["May 2018","DOI:10.1145/3183377.3183380","Conference: the 40th International Conference"],"references":["287158226_Team_Project_Experiences_in_Humanitarian_Free_and_Open_Source_Software_HFOSS","280067404_Software_Engineering_Project_Courses_with_Industrial_Clients","264554633_Onboarding_in_Open_Source_Projects","263093879_The_Role_of_Mentoring_and_Project_Characteristics_for_Onboarding_in_Open_Source_Software_Projects","262412195_Using_a_real_world_project_in_a_software_testing_course","262239346_Improving_Software_Engineering_education_through_an_empirical_approach_Lessons_learned_from_capstone_teaching_experiences","261879326_A_Comparison_of_Two_Iterations_of_a_Software_Studio_Course_Based_on_Continuous_Integration","261552709_Comparing_educational_experiences_and_on-the-job_needs_of_educational_software_designers","235701029_Experiential_Learning_Experience_As_The_Source_Of_Learning_And_Development","228947717_Software_studio_Teaching_professional_software_engineering","318127216_What_Can_Students_Get_from_a_Software_Engineering_Capstone_Course","316948051_A_Two-Course_Sequence_of_Real_Projects_for_Real_Customers","283098556_An_Experience_Report_at_Teaching_a_Group_Based_Agile_Software_Development_Project_Course","266656688_Lessons_learned_managing_distributed_software_engineering_courses","266653558_Gaps_between_industry_expectations_and_the_abilities_of_graduates","262313276_Perspectives_concerning_the_utilization_of_service_learning_projects_for_a_computer_science_course","262270097_Selecting_Open_Source_Software_projects_to_teach_software_engineering","262247094_A_Service_Learning_Practicum_capstone","262177148_Student_projects_are_not_throwaways_Teaching_practical_software_maintenance_in_a_software_engineering_course","238601515_Evaluating_an_early_software_engineering_course_with_projects_and_tools_from_open_source_software","234820628_Teaching_distributed_software_engineering_with_UCOSP_the_undergraduate_capstone_open-source_project","44828585_Basics_Of_Qualitative_Research_Techniques_And_Procedures_For_Developing_Grounded_Theory"]}